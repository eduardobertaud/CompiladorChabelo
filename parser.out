Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID PUNTO_COMA vars salto_principal body END
Rule 2     salto_principal -> <empty>
Rule 3     vars -> var_body
Rule 4     vars -> <empty>
Rule 5     var_body -> VAR type ID array var_loop
Rule 6     array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA
Rule 7     array -> PUNTO_COMA
Rule 8     var_loop -> var_body
Rule 9     var_loop -> <empty>
Rule 10    type -> INT
Rule 11    type -> FLOAT
Rule 12    type -> STRING
Rule 13    type -> BOOL
Rule 14    body -> functions fmain
Rule 15    functions -> FUNC functions2
Rule 16    functions -> <empty>
Rule 17    functions2 -> functions_body functions_params func_block functions_loop
Rule 18    functions2 -> functions_body_void functions_params block ret_void functions_loop
Rule 19    functions2 -> <empty>
Rule 20    ret_void -> <empty>
Rule 21    func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE
Rule 22    functions_body -> type ID
Rule 23    functions_body_void -> VOID ID
Rule 24    return -> RETURN expression PUNTO_COMA
Rule 25    functions_loop -> FUNC functions_aux
Rule 26    functions_loop -> <empty>
Rule 27    functions_aux -> functions_body functions_params func_block functions_loop
Rule 28    functions_aux -> functions_body_void functions_params block ret_void functions_loop
Rule 29    functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT
Rule 30    params_aux -> params params_loop
Rule 31    params_aux -> <empty>
Rule 32    params -> type ID
Rule 33    params_loop_aux -> params params_loop
Rule 34    params_loop -> COMA params_loop_aux
Rule 35    params_loop -> <empty>
Rule 36    block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE
Rule 37    fmain -> fmain_aux block
Rule 38    fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT
Rule 39    estatuto_loop -> estatuto estatuto_loop
Rule 40    estatuto_loop -> <empty>
Rule 41    estatuto -> condition
Rule 42    estatuto -> loop
Rule 43    estatuto -> call
Rule 44    estatuto -> assignment
Rule 45    estatuto -> fprint
Rule 46    estatuto -> special_function
Rule 47    estatuto -> var_body
Rule 48    fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
Rule 49    write_choice -> expression
Rule 50    write_choice -> const_string
Rule 51    const_string -> CTE_S
Rule 52    condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
Rule 53    else -> ELSE block
Rule 54    else -> <empty>
Rule 55    loop -> while
Rule 56    loop -> do_while
Rule 57    while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
Rule 58    do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
Rule 59    assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL
Rule 60    assignment_aux -> IGUAL
Rule 61    assignment -> ID assignment_aux expression PUNTO_COMA
Rule 62    expression -> exp exp_aux_pila expression_choice
Rule 63    expression_choice -> expression_choice_aux
Rule 64    expression_choice -> <empty>
Rule 65    expression_choice_aux -> IGUALDAD push_operador exp
Rule 66    expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila
Rule 67    expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila
Rule 68    expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila
Rule 69    expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila
Rule 70    expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila
Rule 71    exp -> term term_aux_pila exp_choice
Rule 72    exp_choice -> exp_aux
Rule 73    exp_choice -> <empty>
Rule 74    exp_aux_pila -> <empty>
Rule 75    exp_aux -> SUMA push_operador exp
Rule 76    exp_aux -> RESTA push_operador exp
Rule 77    term -> factor term_choice
Rule 78    term_choice -> term_aux
Rule 79    term_choice -> <empty>
Rule 80    term_aux_pila -> <empty>
Rule 81    term_aux -> MULTIPLICACION push_operador term
Rule 82    term_aux -> DIVISION push_operador term
Rule 83    factor -> ABRIR_PRNT expression CERRAR_PRNT
Rule 84    factor -> var_cte
Rule 85    var_cte -> const_int
Rule 86    var_cte -> const_float
Rule 87    var_cte -> const_bool
Rule 88    var_cte -> ID var_decision
Rule 89    var_decision -> var_func
Rule 90    var_decision -> push_operando
Rule 91    var_decision -> array_call
Rule 92    array_call -> ABRIR_CORCH exp CERRAR_CORCH
Rule 93    const_int -> CTE_I push_operando
Rule 94    const_float -> CTE_F push_operando
Rule 95    const_bool -> TRUE push_operando
Rule 96    const_bool -> FALSE push_operando
Rule 97    call -> ID var_func PUNTO_COMA
Rule 98    var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT
Rule 99    params_call_aux -> params_call params_call_loop
Rule 100   params_call_aux -> <empty>
Rule 101   params_call -> expression
Rule 102   params_call_loop -> COMA params_call_loop_aux
Rule 103   params_call_loop -> <empty>
Rule 104   params_call_loop_aux -> params_call params_call_loop
Rule 105   special_function -> fpen_up
Rule 106   special_function -> fpen_down
Rule 107   special_function -> ferase
Rule 108   special_function -> fturn_left
Rule 109   special_function -> fturn_right
Rule 110   special_function -> fmove
Rule 111   fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 112   fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 113   ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 114   fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
Rule 115   fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
Rule 116   fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA
Rule 117   direction -> FORWARD
Rule 118   direction -> BACKWARD
Rule 119   push_operando -> <empty>
Rule 120   push_operador -> <empty>
Rule 121   ifcuad1 -> <empty>
Rule 122   ifcuad2 -> <empty>
Rule 123   ifcuad3 -> <empty>
Rule 124   whilecuad1 -> <empty>
Rule 125   whilecuad2 -> <empty>
Rule 126   whilecuad3 -> <empty>
Rule 127   docuad1 -> <empty>
Rule 128   docuad2 -> <empty>

Terminals, with rules where they appear

ABRIR_CORCH          : 6 59 92
ABRIR_LLAVE          : 21 36
ABRIR_PRNT           : 29 38 48 52 57 58 83 98 111 112 113 114 115 116
BACKWARD             : 118
BOOL                 : 13
CERRAR_CORCH         : 6 59 92
CERRAR_LLAVE         : 21 36
CERRAR_PRNT          : 29 38 48 52 57 58 83 98 111 112 113 114 115 116
COMA                 : 34 102 116
CTE_F                : 94
CTE_I                : 6 93
CTE_S                : 51
DESIGUALDAD          : 66
DIVISION             : 82
DO                   : 58
ELSE                 : 53
END                  : 1
ERASE                : 113
FALSE                : 96
FLOAT                : 11
FORWARD              : 117
FUNC                 : 15 25
ID                   : 1 5 22 23 32 61 88 97
IF                   : 52
IGUAL                : 59 60
IGUALDAD             : 65
INT                  : 10
MAIN                 : 38
MAYOR_IGUAL          : 69
MAYOR_QUE            : 67
MENOR_IGUAL          : 70
MENOR_QUE            : 68
MOVE                 : 116
MULTIPLICACION       : 81
PENDOWN              : 112
PENUP                : 111
PRINT                : 48
PROGRAM              : 1
PUNTO_COMA           : 1 6 7 24 48 58 61 97 111 112 113 114 115 116
RESTA                : 76
RETURN               : 24
STRING               : 12
SUMA                 : 75
TRUE                 : 95
TURNLEFT             : 114
TURNRIGHT            : 115
VAR                  : 5
VOID                 : 23
WHILE                : 57 58
error                : 

Nonterminals, with rules where they appear

array                : 5
array_call           : 91
assignment           : 44
assignment_aux       : 61
block                : 18 28 37 52 53 57 58
body                 : 1
call                 : 43
condition            : 41
const_bool           : 87
const_float          : 86
const_int            : 85
const_string         : 50
direction            : 116
do_while             : 56
docuad1              : 58
docuad2              : 58
else                 : 52
estatuto             : 39
estatuto_loop        : 21 36 39
exp                  : 59 62 65 66 67 68 69 70 75 76 92
exp_aux              : 72
exp_aux_pila         : 62 66 67 68 69 70
exp_choice           : 71
expression           : 24 49 52 57 58 61 83 101 114 115 116
expression_choice    : 62
expression_choice_aux : 63
factor               : 77
ferase               : 107
fmain                : 14
fmain_aux            : 37
fmove                : 110
fpen_down            : 106
fpen_up              : 105
fprint               : 45
fturn_left           : 108
fturn_right          : 109
func_block           : 17 27
functions            : 14
functions2           : 15
functions_aux        : 25
functions_body       : 17 27
functions_body_void  : 18 28
functions_loop       : 17 18 27 28
functions_params     : 17 18 27 28
ifcuad1              : 52
ifcuad2              : 52
ifcuad3              : 52
loop                 : 42
params               : 30 33
params_aux           : 29
params_call          : 99 104
params_call_aux      : 98
params_call_loop     : 99 104
params_call_loop_aux : 102
params_loop          : 30 33
params_loop_aux      : 34
program              : 0
push_operador        : 65 66 67 68 69 70 75 76 81 82
push_operando        : 90 93 94 95 96
ret_void             : 18 28
return               : 21
salto_principal      : 1
special_function     : 46
term                 : 71 81 82
term_aux             : 78
term_aux_pila        : 71
term_choice          : 77
type                 : 5 22 32
var_body             : 3 8 47
var_cte              : 84
var_decision         : 88
var_func             : 89 97
var_loop             : 5
vars                 : 1
while                : 55
whilecuad1           : 57
whilecuad2           : 57
whilecuad3           : 57
write_choice         : 48

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID PUNTO_COMA vars salto_principal body END

    PROGRAM         shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> PROGRAM . ID PUNTO_COMA vars salto_principal body END

    ID              shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> PROGRAM ID . PUNTO_COMA vars salto_principal body END

    PUNTO_COMA      shift and go to state 4


state 4

    (1) program -> PROGRAM ID PUNTO_COMA . vars salto_principal body END
    (3) vars -> . var_body
    (4) vars -> .
    (5) var_body -> . VAR type ID array var_loop

    FUNC            reduce using rule 4 (vars -> .)
    MAIN            reduce using rule 4 (vars -> .)
    VAR             shift and go to state 5

    vars                           shift and go to state 6
    var_body                       shift and go to state 7

state 5

    (5) var_body -> VAR . type ID array var_loop
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    INT             shift and go to state 8
    FLOAT           shift and go to state 12
    STRING          shift and go to state 11
    BOOL            shift and go to state 10

    type                           shift and go to state 9

state 6

    (1) program -> PROGRAM ID PUNTO_COMA vars . salto_principal body END
    (2) salto_principal -> .

    FUNC            reduce using rule 2 (salto_principal -> .)
    MAIN            reduce using rule 2 (salto_principal -> .)

    salto_principal                shift and go to state 13

state 7

    (3) vars -> var_body .

    FUNC            reduce using rule 3 (vars -> var_body .)
    MAIN            reduce using rule 3 (vars -> var_body .)


state 8

    (10) type -> INT .

    ID              reduce using rule 10 (type -> INT .)


state 9

    (5) var_body -> VAR type . ID array var_loop

    ID              shift and go to state 14


state 10

    (13) type -> BOOL .

    ID              reduce using rule 13 (type -> BOOL .)


state 11

    (12) type -> STRING .

    ID              reduce using rule 12 (type -> STRING .)


state 12

    (11) type -> FLOAT .

    ID              reduce using rule 11 (type -> FLOAT .)


state 13

    (1) program -> PROGRAM ID PUNTO_COMA vars salto_principal . body END
    (14) body -> . functions fmain
    (15) functions -> . FUNC functions2
    (16) functions -> .

    FUNC            shift and go to state 15
    MAIN            reduce using rule 16 (functions -> .)

    body                           shift and go to state 17
    functions                      shift and go to state 16

state 14

    (5) var_body -> VAR type ID . array var_loop
    (6) array -> . ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA
    (7) array -> . PUNTO_COMA

    ABRIR_CORCH     shift and go to state 19
    PUNTO_COMA      shift and go to state 18

    array                          shift and go to state 20

state 15

    (15) functions -> FUNC . functions2
    (17) functions2 -> . functions_body functions_params func_block functions_loop
    (18) functions2 -> . functions_body_void functions_params block ret_void functions_loop
    (19) functions2 -> .
    (22) functions_body -> . type ID
    (23) functions_body_void -> . VOID ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    MAIN            reduce using rule 19 (functions2 -> .)
    VOID            shift and go to state 24
    INT             shift and go to state 8
    FLOAT           shift and go to state 12
    STRING          shift and go to state 11
    BOOL            shift and go to state 10

    type                           shift and go to state 22
    functions_body                 shift and go to state 21
    functions_body_void            shift and go to state 25
    functions2                     shift and go to state 23

state 16

    (14) body -> functions . fmain
    (37) fmain -> . fmain_aux block
    (38) fmain_aux -> . MAIN ABRIR_PRNT CERRAR_PRNT

    MAIN            shift and go to state 26

    fmain                          shift and go to state 27
    fmain_aux                      shift and go to state 28

state 17

    (1) program -> PROGRAM ID PUNTO_COMA vars salto_principal body . END

    END             shift and go to state 29


state 18

    (7) array -> PUNTO_COMA .

    VAR             reduce using rule 7 (array -> PUNTO_COMA .)
    FUNC            reduce using rule 7 (array -> PUNTO_COMA .)
    MAIN            reduce using rule 7 (array -> PUNTO_COMA .)
    IF              reduce using rule 7 (array -> PUNTO_COMA .)
    ID              reduce using rule 7 (array -> PUNTO_COMA .)
    PRINT           reduce using rule 7 (array -> PUNTO_COMA .)
    WHILE           reduce using rule 7 (array -> PUNTO_COMA .)
    DO              reduce using rule 7 (array -> PUNTO_COMA .)
    PENUP           reduce using rule 7 (array -> PUNTO_COMA .)
    PENDOWN         reduce using rule 7 (array -> PUNTO_COMA .)
    ERASE           reduce using rule 7 (array -> PUNTO_COMA .)
    TURNLEFT        reduce using rule 7 (array -> PUNTO_COMA .)
    TURNRIGHT       reduce using rule 7 (array -> PUNTO_COMA .)
    MOVE            reduce using rule 7 (array -> PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 7 (array -> PUNTO_COMA .)
    RETURN          reduce using rule 7 (array -> PUNTO_COMA .)


state 19

    (6) array -> ABRIR_CORCH . CTE_I CERRAR_CORCH PUNTO_COMA

    CTE_I           shift and go to state 30


state 20

    (5) var_body -> VAR type ID array . var_loop
    (8) var_loop -> . var_body
    (9) var_loop -> .
    (5) var_body -> . VAR type ID array var_loop

  ! shift/reduce conflict for VAR resolved as shift
    FUNC            reduce using rule 9 (var_loop -> .)
    MAIN            reduce using rule 9 (var_loop -> .)
    IF              reduce using rule 9 (var_loop -> .)
    ID              reduce using rule 9 (var_loop -> .)
    PRINT           reduce using rule 9 (var_loop -> .)
    WHILE           reduce using rule 9 (var_loop -> .)
    DO              reduce using rule 9 (var_loop -> .)
    PENUP           reduce using rule 9 (var_loop -> .)
    PENDOWN         reduce using rule 9 (var_loop -> .)
    ERASE           reduce using rule 9 (var_loop -> .)
    TURNLEFT        reduce using rule 9 (var_loop -> .)
    TURNRIGHT       reduce using rule 9 (var_loop -> .)
    MOVE            reduce using rule 9 (var_loop -> .)
    CERRAR_LLAVE    reduce using rule 9 (var_loop -> .)
    RETURN          reduce using rule 9 (var_loop -> .)
    VAR             shift and go to state 5

  ! VAR             [ reduce using rule 9 (var_loop -> .) ]

    var_loop                       shift and go to state 31
    var_body                       shift and go to state 32

state 21

    (17) functions2 -> functions_body . functions_params func_block functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 34

    functions_params               shift and go to state 33

state 22

    (22) functions_body -> type . ID

    ID              shift and go to state 35


state 23

    (15) functions -> FUNC functions2 .

    MAIN            reduce using rule 15 (functions -> FUNC functions2 .)


state 24

    (23) functions_body_void -> VOID . ID

    ID              shift and go to state 36


state 25

    (18) functions2 -> functions_body_void . functions_params block ret_void functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 34

    functions_params               shift and go to state 37

state 26

    (38) fmain_aux -> MAIN . ABRIR_PRNT CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 38


state 27

    (14) body -> functions fmain .

    END             reduce using rule 14 (body -> functions fmain .)


state 28

    (37) fmain -> fmain_aux . block
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 39

    block                          shift and go to state 40

state 29

    (1) program -> PROGRAM ID PUNTO_COMA vars salto_principal body END .

    $end            reduce using rule 1 (program -> PROGRAM ID PUNTO_COMA vars salto_principal body END .)


state 30

    (6) array -> ABRIR_CORCH CTE_I . CERRAR_CORCH PUNTO_COMA

    CERRAR_CORCH    shift and go to state 41


state 31

    (5) var_body -> VAR type ID array var_loop .

    IF              reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    ID              reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    PRINT           reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    VAR             reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    WHILE           reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    DO              reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    PENUP           reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    PENDOWN         reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    ERASE           reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    TURNLEFT        reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    TURNRIGHT       reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    MOVE            reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    CERRAR_LLAVE    reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    RETURN          reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    FUNC            reduce using rule 5 (var_body -> VAR type ID array var_loop .)
    MAIN            reduce using rule 5 (var_body -> VAR type ID array var_loop .)


state 32

    (8) var_loop -> var_body .

    FUNC            reduce using rule 8 (var_loop -> var_body .)
    MAIN            reduce using rule 8 (var_loop -> var_body .)
    IF              reduce using rule 8 (var_loop -> var_body .)
    ID              reduce using rule 8 (var_loop -> var_body .)
    PRINT           reduce using rule 8 (var_loop -> var_body .)
    VAR             reduce using rule 8 (var_loop -> var_body .)
    WHILE           reduce using rule 8 (var_loop -> var_body .)
    DO              reduce using rule 8 (var_loop -> var_body .)
    PENUP           reduce using rule 8 (var_loop -> var_body .)
    PENDOWN         reduce using rule 8 (var_loop -> var_body .)
    ERASE           reduce using rule 8 (var_loop -> var_body .)
    TURNLEFT        reduce using rule 8 (var_loop -> var_body .)
    TURNRIGHT       reduce using rule 8 (var_loop -> var_body .)
    MOVE            reduce using rule 8 (var_loop -> var_body .)
    CERRAR_LLAVE    reduce using rule 8 (var_loop -> var_body .)
    RETURN          reduce using rule 8 (var_loop -> var_body .)


state 33

    (17) functions2 -> functions_body functions_params . func_block functions_loop
    (21) func_block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 43

    func_block                     shift and go to state 42

state 34

    (29) functions_params -> ABRIR_PRNT . params_aux CERRAR_PRNT
    (30) params_aux -> . params params_loop
    (31) params_aux -> .
    (32) params -> . type ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    CERRAR_PRNT     reduce using rule 31 (params_aux -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 12
    STRING          shift and go to state 11
    BOOL            shift and go to state 10

    params_aux                     shift and go to state 44
    params                         shift and go to state 45
    type                           shift and go to state 46

state 35

    (22) functions_body -> type ID .

    ABRIR_PRNT      reduce using rule 22 (functions_body -> type ID .)


state 36

    (23) functions_body_void -> VOID ID .

    ABRIR_PRNT      reduce using rule 23 (functions_body_void -> VOID ID .)


state 37

    (18) functions2 -> functions_body_void functions_params . block ret_void functions_loop
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 39

    block                          shift and go to state 47

state 38

    (38) fmain_aux -> MAIN ABRIR_PRNT . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 48


state 39

    (36) block -> ABRIR_LLAVE . estatuto_loop CERRAR_LLAVE
    (39) estatuto_loop -> . estatuto estatuto_loop
    (40) estatuto_loop -> .
    (41) estatuto -> . condition
    (42) estatuto -> . loop
    (43) estatuto -> . call
    (44) estatuto -> . assignment
    (45) estatuto -> . fprint
    (46) estatuto -> . special_function
    (47) estatuto -> . var_body
    (52) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (55) loop -> . while
    (56) loop -> . do_while
    (97) call -> . ID var_func PUNTO_COMA
    (61) assignment -> . ID assignment_aux expression PUNTO_COMA
    (48) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (105) special_function -> . fpen_up
    (106) special_function -> . fpen_down
    (107) special_function -> . ferase
    (108) special_function -> . fturn_left
    (109) special_function -> . fturn_right
    (110) special_function -> . fmove
    (5) var_body -> . VAR type ID array var_loop
    (57) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (58) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (111) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (112) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (113) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (114) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (115) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (116) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    CERRAR_LLAVE    reduce using rule 40 (estatuto_loop -> .)
    IF              shift and go to state 71
    ID              shift and go to state 72
    PRINT           shift and go to state 59
    VAR             shift and go to state 5
    WHILE           shift and go to state 64
    DO              shift and go to state 73
    PENUP           shift and go to state 54
    PENDOWN         shift and go to state 66
    ERASE           shift and go to state 60
    TURNLEFT        shift and go to state 70
    TURNRIGHT       shift and go to state 74
    MOVE            shift and go to state 51

    estatuto                       shift and go to state 63
    estatuto_loop                  shift and go to state 62
    fmove                          shift and go to state 69
    loop                           shift and go to state 50
    call                           shift and go to state 65
    fturn_left                     shift and go to state 52
    fprint                         shift and go to state 53
    fpen_down                      shift and go to state 67
    fturn_right                    shift and go to state 55
    condition                      shift and go to state 56
    special_function               shift and go to state 57
    while                          shift and go to state 68
    ferase                         shift and go to state 49
    do_while                       shift and go to state 75
    assignment                     shift and go to state 58
    fpen_up                        shift and go to state 61
    var_body                       shift and go to state 76

state 40

    (37) fmain -> fmain_aux block .

    END             reduce using rule 37 (fmain -> fmain_aux block .)


state 41

    (6) array -> ABRIR_CORCH CTE_I CERRAR_CORCH . PUNTO_COMA

    PUNTO_COMA      shift and go to state 77


state 42

    (17) functions2 -> functions_body functions_params func_block . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 78
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 79

state 43

    (21) func_block -> ABRIR_LLAVE . estatuto_loop return CERRAR_LLAVE
    (39) estatuto_loop -> . estatuto estatuto_loop
    (40) estatuto_loop -> .
    (41) estatuto -> . condition
    (42) estatuto -> . loop
    (43) estatuto -> . call
    (44) estatuto -> . assignment
    (45) estatuto -> . fprint
    (46) estatuto -> . special_function
    (47) estatuto -> . var_body
    (52) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (55) loop -> . while
    (56) loop -> . do_while
    (97) call -> . ID var_func PUNTO_COMA
    (61) assignment -> . ID assignment_aux expression PUNTO_COMA
    (48) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (105) special_function -> . fpen_up
    (106) special_function -> . fpen_down
    (107) special_function -> . ferase
    (108) special_function -> . fturn_left
    (109) special_function -> . fturn_right
    (110) special_function -> . fmove
    (5) var_body -> . VAR type ID array var_loop
    (57) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (58) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (111) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (112) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (113) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (114) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (115) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (116) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    RETURN          reduce using rule 40 (estatuto_loop -> .)
    IF              shift and go to state 71
    ID              shift and go to state 72
    PRINT           shift and go to state 59
    VAR             shift and go to state 5
    WHILE           shift and go to state 64
    DO              shift and go to state 73
    PENUP           shift and go to state 54
    PENDOWN         shift and go to state 66
    ERASE           shift and go to state 60
    TURNLEFT        shift and go to state 70
    TURNRIGHT       shift and go to state 74
    MOVE            shift and go to state 51

    estatuto                       shift and go to state 63
    estatuto_loop                  shift and go to state 80
    fmove                          shift and go to state 69
    loop                           shift and go to state 50
    call                           shift and go to state 65
    fturn_left                     shift and go to state 52
    fprint                         shift and go to state 53
    fpen_down                      shift and go to state 67
    fturn_right                    shift and go to state 55
    condition                      shift and go to state 56
    special_function               shift and go to state 57
    while                          shift and go to state 68
    ferase                         shift and go to state 49
    do_while                       shift and go to state 75
    assignment                     shift and go to state 58
    fpen_up                        shift and go to state 61
    var_body                       shift and go to state 76

state 44

    (29) functions_params -> ABRIR_PRNT params_aux . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 81


state 45

    (30) params_aux -> params . params_loop
    (34) params_loop -> . COMA params_loop_aux
    (35) params_loop -> .

    COMA            shift and go to state 83
    CERRAR_PRNT     reduce using rule 35 (params_loop -> .)

    params_loop                    shift and go to state 82

state 46

    (32) params -> type . ID

    ID              shift and go to state 84


state 47

    (18) functions2 -> functions_body_void functions_params block . ret_void functions_loop
    (20) ret_void -> .

    FUNC            reduce using rule 20 (ret_void -> .)
    MAIN            reduce using rule 20 (ret_void -> .)

    ret_void                       shift and go to state 85

state 48

    (38) fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT .

    ABRIR_LLAVE     reduce using rule 38 (fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT .)


state 49

    (107) special_function -> ferase .

    IF              reduce using rule 107 (special_function -> ferase .)
    ID              reduce using rule 107 (special_function -> ferase .)
    PRINT           reduce using rule 107 (special_function -> ferase .)
    VAR             reduce using rule 107 (special_function -> ferase .)
    WHILE           reduce using rule 107 (special_function -> ferase .)
    DO              reduce using rule 107 (special_function -> ferase .)
    PENUP           reduce using rule 107 (special_function -> ferase .)
    PENDOWN         reduce using rule 107 (special_function -> ferase .)
    ERASE           reduce using rule 107 (special_function -> ferase .)
    TURNLEFT        reduce using rule 107 (special_function -> ferase .)
    TURNRIGHT       reduce using rule 107 (special_function -> ferase .)
    MOVE            reduce using rule 107 (special_function -> ferase .)
    CERRAR_LLAVE    reduce using rule 107 (special_function -> ferase .)
    RETURN          reduce using rule 107 (special_function -> ferase .)


state 50

    (42) estatuto -> loop .

    IF              reduce using rule 42 (estatuto -> loop .)
    ID              reduce using rule 42 (estatuto -> loop .)
    PRINT           reduce using rule 42 (estatuto -> loop .)
    VAR             reduce using rule 42 (estatuto -> loop .)
    WHILE           reduce using rule 42 (estatuto -> loop .)
    DO              reduce using rule 42 (estatuto -> loop .)
    PENUP           reduce using rule 42 (estatuto -> loop .)
    PENDOWN         reduce using rule 42 (estatuto -> loop .)
    ERASE           reduce using rule 42 (estatuto -> loop .)
    TURNLEFT        reduce using rule 42 (estatuto -> loop .)
    TURNRIGHT       reduce using rule 42 (estatuto -> loop .)
    MOVE            reduce using rule 42 (estatuto -> loop .)
    RETURN          reduce using rule 42 (estatuto -> loop .)
    CERRAR_LLAVE    reduce using rule 42 (estatuto -> loop .)


state 51

    (116) fmove -> MOVE . ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 86


state 52

    (108) special_function -> fturn_left .

    IF              reduce using rule 108 (special_function -> fturn_left .)
    ID              reduce using rule 108 (special_function -> fturn_left .)
    PRINT           reduce using rule 108 (special_function -> fturn_left .)
    VAR             reduce using rule 108 (special_function -> fturn_left .)
    WHILE           reduce using rule 108 (special_function -> fturn_left .)
    DO              reduce using rule 108 (special_function -> fturn_left .)
    PENUP           reduce using rule 108 (special_function -> fturn_left .)
    PENDOWN         reduce using rule 108 (special_function -> fturn_left .)
    ERASE           reduce using rule 108 (special_function -> fturn_left .)
    TURNLEFT        reduce using rule 108 (special_function -> fturn_left .)
    TURNRIGHT       reduce using rule 108 (special_function -> fturn_left .)
    MOVE            reduce using rule 108 (special_function -> fturn_left .)
    CERRAR_LLAVE    reduce using rule 108 (special_function -> fturn_left .)
    RETURN          reduce using rule 108 (special_function -> fturn_left .)


state 53

    (45) estatuto -> fprint .

    IF              reduce using rule 45 (estatuto -> fprint .)
    ID              reduce using rule 45 (estatuto -> fprint .)
    PRINT           reduce using rule 45 (estatuto -> fprint .)
    VAR             reduce using rule 45 (estatuto -> fprint .)
    WHILE           reduce using rule 45 (estatuto -> fprint .)
    DO              reduce using rule 45 (estatuto -> fprint .)
    PENUP           reduce using rule 45 (estatuto -> fprint .)
    PENDOWN         reduce using rule 45 (estatuto -> fprint .)
    ERASE           reduce using rule 45 (estatuto -> fprint .)
    TURNLEFT        reduce using rule 45 (estatuto -> fprint .)
    TURNRIGHT       reduce using rule 45 (estatuto -> fprint .)
    MOVE            reduce using rule 45 (estatuto -> fprint .)
    RETURN          reduce using rule 45 (estatuto -> fprint .)
    CERRAR_LLAVE    reduce using rule 45 (estatuto -> fprint .)


state 54

    (111) fpen_up -> PENUP . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 87


state 55

    (109) special_function -> fturn_right .

    IF              reduce using rule 109 (special_function -> fturn_right .)
    ID              reduce using rule 109 (special_function -> fturn_right .)
    PRINT           reduce using rule 109 (special_function -> fturn_right .)
    VAR             reduce using rule 109 (special_function -> fturn_right .)
    WHILE           reduce using rule 109 (special_function -> fturn_right .)
    DO              reduce using rule 109 (special_function -> fturn_right .)
    PENUP           reduce using rule 109 (special_function -> fturn_right .)
    PENDOWN         reduce using rule 109 (special_function -> fturn_right .)
    ERASE           reduce using rule 109 (special_function -> fturn_right .)
    TURNLEFT        reduce using rule 109 (special_function -> fturn_right .)
    TURNRIGHT       reduce using rule 109 (special_function -> fturn_right .)
    MOVE            reduce using rule 109 (special_function -> fturn_right .)
    CERRAR_LLAVE    reduce using rule 109 (special_function -> fturn_right .)
    RETURN          reduce using rule 109 (special_function -> fturn_right .)


state 56

    (41) estatuto -> condition .

    IF              reduce using rule 41 (estatuto -> condition .)
    ID              reduce using rule 41 (estatuto -> condition .)
    PRINT           reduce using rule 41 (estatuto -> condition .)
    VAR             reduce using rule 41 (estatuto -> condition .)
    WHILE           reduce using rule 41 (estatuto -> condition .)
    DO              reduce using rule 41 (estatuto -> condition .)
    PENUP           reduce using rule 41 (estatuto -> condition .)
    PENDOWN         reduce using rule 41 (estatuto -> condition .)
    ERASE           reduce using rule 41 (estatuto -> condition .)
    TURNLEFT        reduce using rule 41 (estatuto -> condition .)
    TURNRIGHT       reduce using rule 41 (estatuto -> condition .)
    MOVE            reduce using rule 41 (estatuto -> condition .)
    RETURN          reduce using rule 41 (estatuto -> condition .)
    CERRAR_LLAVE    reduce using rule 41 (estatuto -> condition .)


state 57

    (46) estatuto -> special_function .

    IF              reduce using rule 46 (estatuto -> special_function .)
    ID              reduce using rule 46 (estatuto -> special_function .)
    PRINT           reduce using rule 46 (estatuto -> special_function .)
    VAR             reduce using rule 46 (estatuto -> special_function .)
    WHILE           reduce using rule 46 (estatuto -> special_function .)
    DO              reduce using rule 46 (estatuto -> special_function .)
    PENUP           reduce using rule 46 (estatuto -> special_function .)
    PENDOWN         reduce using rule 46 (estatuto -> special_function .)
    ERASE           reduce using rule 46 (estatuto -> special_function .)
    TURNLEFT        reduce using rule 46 (estatuto -> special_function .)
    TURNRIGHT       reduce using rule 46 (estatuto -> special_function .)
    MOVE            reduce using rule 46 (estatuto -> special_function .)
    RETURN          reduce using rule 46 (estatuto -> special_function .)
    CERRAR_LLAVE    reduce using rule 46 (estatuto -> special_function .)


state 58

    (44) estatuto -> assignment .

    IF              reduce using rule 44 (estatuto -> assignment .)
    ID              reduce using rule 44 (estatuto -> assignment .)
    PRINT           reduce using rule 44 (estatuto -> assignment .)
    VAR             reduce using rule 44 (estatuto -> assignment .)
    WHILE           reduce using rule 44 (estatuto -> assignment .)
    DO              reduce using rule 44 (estatuto -> assignment .)
    PENUP           reduce using rule 44 (estatuto -> assignment .)
    PENDOWN         reduce using rule 44 (estatuto -> assignment .)
    ERASE           reduce using rule 44 (estatuto -> assignment .)
    TURNLEFT        reduce using rule 44 (estatuto -> assignment .)
    TURNRIGHT       reduce using rule 44 (estatuto -> assignment .)
    MOVE            reduce using rule 44 (estatuto -> assignment .)
    RETURN          reduce using rule 44 (estatuto -> assignment .)
    CERRAR_LLAVE    reduce using rule 44 (estatuto -> assignment .)


state 59

    (48) fprint -> PRINT . ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 88


state 60

    (113) ferase -> ERASE . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 89


state 61

    (105) special_function -> fpen_up .

    IF              reduce using rule 105 (special_function -> fpen_up .)
    ID              reduce using rule 105 (special_function -> fpen_up .)
    PRINT           reduce using rule 105 (special_function -> fpen_up .)
    VAR             reduce using rule 105 (special_function -> fpen_up .)
    WHILE           reduce using rule 105 (special_function -> fpen_up .)
    DO              reduce using rule 105 (special_function -> fpen_up .)
    PENUP           reduce using rule 105 (special_function -> fpen_up .)
    PENDOWN         reduce using rule 105 (special_function -> fpen_up .)
    ERASE           reduce using rule 105 (special_function -> fpen_up .)
    TURNLEFT        reduce using rule 105 (special_function -> fpen_up .)
    TURNRIGHT       reduce using rule 105 (special_function -> fpen_up .)
    MOVE            reduce using rule 105 (special_function -> fpen_up .)
    CERRAR_LLAVE    reduce using rule 105 (special_function -> fpen_up .)
    RETURN          reduce using rule 105 (special_function -> fpen_up .)


state 62

    (36) block -> ABRIR_LLAVE estatuto_loop . CERRAR_LLAVE

    CERRAR_LLAVE    shift and go to state 90


state 63

    (39) estatuto_loop -> estatuto . estatuto_loop
    (39) estatuto_loop -> . estatuto estatuto_loop
    (40) estatuto_loop -> .
    (41) estatuto -> . condition
    (42) estatuto -> . loop
    (43) estatuto -> . call
    (44) estatuto -> . assignment
    (45) estatuto -> . fprint
    (46) estatuto -> . special_function
    (47) estatuto -> . var_body
    (52) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (55) loop -> . while
    (56) loop -> . do_while
    (97) call -> . ID var_func PUNTO_COMA
    (61) assignment -> . ID assignment_aux expression PUNTO_COMA
    (48) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (105) special_function -> . fpen_up
    (106) special_function -> . fpen_down
    (107) special_function -> . ferase
    (108) special_function -> . fturn_left
    (109) special_function -> . fturn_right
    (110) special_function -> . fmove
    (5) var_body -> . VAR type ID array var_loop
    (57) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (58) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (111) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (112) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (113) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (114) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (115) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (116) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    CERRAR_LLAVE    reduce using rule 40 (estatuto_loop -> .)
    RETURN          reduce using rule 40 (estatuto_loop -> .)
    IF              shift and go to state 71
    ID              shift and go to state 72
    PRINT           shift and go to state 59
    VAR             shift and go to state 5
    WHILE           shift and go to state 64
    DO              shift and go to state 73
    PENUP           shift and go to state 54
    PENDOWN         shift and go to state 66
    ERASE           shift and go to state 60
    TURNLEFT        shift and go to state 70
    TURNRIGHT       shift and go to state 74
    MOVE            shift and go to state 51

    estatuto                       shift and go to state 63
    estatuto_loop                  shift and go to state 91
    fmove                          shift and go to state 69
    loop                           shift and go to state 50
    call                           shift and go to state 65
    fturn_left                     shift and go to state 52
    fprint                         shift and go to state 53
    fpen_down                      shift and go to state 67
    fturn_right                    shift and go to state 55
    condition                      shift and go to state 56
    special_function               shift and go to state 57
    while                          shift and go to state 68
    ferase                         shift and go to state 49
    do_while                       shift and go to state 75
    assignment                     shift and go to state 58
    fpen_up                        shift and go to state 61
    var_body                       shift and go to state 76

state 64

    (57) while -> WHILE . ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3

    ABRIR_PRNT      shift and go to state 92


state 65

    (43) estatuto -> call .

    IF              reduce using rule 43 (estatuto -> call .)
    ID              reduce using rule 43 (estatuto -> call .)
    PRINT           reduce using rule 43 (estatuto -> call .)
    VAR             reduce using rule 43 (estatuto -> call .)
    WHILE           reduce using rule 43 (estatuto -> call .)
    DO              reduce using rule 43 (estatuto -> call .)
    PENUP           reduce using rule 43 (estatuto -> call .)
    PENDOWN         reduce using rule 43 (estatuto -> call .)
    ERASE           reduce using rule 43 (estatuto -> call .)
    TURNLEFT        reduce using rule 43 (estatuto -> call .)
    TURNRIGHT       reduce using rule 43 (estatuto -> call .)
    MOVE            reduce using rule 43 (estatuto -> call .)
    RETURN          reduce using rule 43 (estatuto -> call .)
    CERRAR_LLAVE    reduce using rule 43 (estatuto -> call .)


state 66

    (112) fpen_down -> PENDOWN . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 93


state 67

    (106) special_function -> fpen_down .

    IF              reduce using rule 106 (special_function -> fpen_down .)
    ID              reduce using rule 106 (special_function -> fpen_down .)
    PRINT           reduce using rule 106 (special_function -> fpen_down .)
    VAR             reduce using rule 106 (special_function -> fpen_down .)
    WHILE           reduce using rule 106 (special_function -> fpen_down .)
    DO              reduce using rule 106 (special_function -> fpen_down .)
    PENUP           reduce using rule 106 (special_function -> fpen_down .)
    PENDOWN         reduce using rule 106 (special_function -> fpen_down .)
    ERASE           reduce using rule 106 (special_function -> fpen_down .)
    TURNLEFT        reduce using rule 106 (special_function -> fpen_down .)
    TURNRIGHT       reduce using rule 106 (special_function -> fpen_down .)
    MOVE            reduce using rule 106 (special_function -> fpen_down .)
    CERRAR_LLAVE    reduce using rule 106 (special_function -> fpen_down .)
    RETURN          reduce using rule 106 (special_function -> fpen_down .)


state 68

    (55) loop -> while .

    IF              reduce using rule 55 (loop -> while .)
    ID              reduce using rule 55 (loop -> while .)
    PRINT           reduce using rule 55 (loop -> while .)
    VAR             reduce using rule 55 (loop -> while .)
    WHILE           reduce using rule 55 (loop -> while .)
    DO              reduce using rule 55 (loop -> while .)
    PENUP           reduce using rule 55 (loop -> while .)
    PENDOWN         reduce using rule 55 (loop -> while .)
    ERASE           reduce using rule 55 (loop -> while .)
    TURNLEFT        reduce using rule 55 (loop -> while .)
    TURNRIGHT       reduce using rule 55 (loop -> while .)
    MOVE            reduce using rule 55 (loop -> while .)
    CERRAR_LLAVE    reduce using rule 55 (loop -> while .)
    RETURN          reduce using rule 55 (loop -> while .)


state 69

    (110) special_function -> fmove .

    IF              reduce using rule 110 (special_function -> fmove .)
    ID              reduce using rule 110 (special_function -> fmove .)
    PRINT           reduce using rule 110 (special_function -> fmove .)
    VAR             reduce using rule 110 (special_function -> fmove .)
    WHILE           reduce using rule 110 (special_function -> fmove .)
    DO              reduce using rule 110 (special_function -> fmove .)
    PENUP           reduce using rule 110 (special_function -> fmove .)
    PENDOWN         reduce using rule 110 (special_function -> fmove .)
    ERASE           reduce using rule 110 (special_function -> fmove .)
    TURNLEFT        reduce using rule 110 (special_function -> fmove .)
    TURNRIGHT       reduce using rule 110 (special_function -> fmove .)
    MOVE            reduce using rule 110 (special_function -> fmove .)
    CERRAR_LLAVE    reduce using rule 110 (special_function -> fmove .)
    RETURN          reduce using rule 110 (special_function -> fmove .)


state 70

    (114) fturn_left -> TURNLEFT . ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 94


state 71

    (52) condition -> IF . ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3

    ABRIR_PRNT      shift and go to state 95


state 72

    (97) call -> ID . var_func PUNTO_COMA
    (61) assignment -> ID . assignment_aux expression PUNTO_COMA
    (98) var_func -> . ABRIR_PRNT params_call_aux CERRAR_PRNT
    (59) assignment_aux -> . ABRIR_CORCH exp CERRAR_CORCH IGUAL
    (60) assignment_aux -> . IGUAL

    ABRIR_PRNT      shift and go to state 97
    ABRIR_CORCH     shift and go to state 100
    IGUAL           shift and go to state 98

    var_func                       shift and go to state 96
    assignment_aux                 shift and go to state 99

state 73

    (58) do_while -> DO . docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (127) docuad1 -> .

    ABRIR_LLAVE     reduce using rule 127 (docuad1 -> .)

    docuad1                        shift and go to state 101

state 74

    (115) fturn_right -> TURNRIGHT . ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 102


state 75

    (56) loop -> do_while .

    IF              reduce using rule 56 (loop -> do_while .)
    ID              reduce using rule 56 (loop -> do_while .)
    PRINT           reduce using rule 56 (loop -> do_while .)
    VAR             reduce using rule 56 (loop -> do_while .)
    WHILE           reduce using rule 56 (loop -> do_while .)
    DO              reduce using rule 56 (loop -> do_while .)
    PENUP           reduce using rule 56 (loop -> do_while .)
    PENDOWN         reduce using rule 56 (loop -> do_while .)
    ERASE           reduce using rule 56 (loop -> do_while .)
    TURNLEFT        reduce using rule 56 (loop -> do_while .)
    TURNRIGHT       reduce using rule 56 (loop -> do_while .)
    MOVE            reduce using rule 56 (loop -> do_while .)
    CERRAR_LLAVE    reduce using rule 56 (loop -> do_while .)
    RETURN          reduce using rule 56 (loop -> do_while .)


state 76

    (47) estatuto -> var_body .

    IF              reduce using rule 47 (estatuto -> var_body .)
    ID              reduce using rule 47 (estatuto -> var_body .)
    PRINT           reduce using rule 47 (estatuto -> var_body .)
    VAR             reduce using rule 47 (estatuto -> var_body .)
    WHILE           reduce using rule 47 (estatuto -> var_body .)
    DO              reduce using rule 47 (estatuto -> var_body .)
    PENUP           reduce using rule 47 (estatuto -> var_body .)
    PENDOWN         reduce using rule 47 (estatuto -> var_body .)
    ERASE           reduce using rule 47 (estatuto -> var_body .)
    TURNLEFT        reduce using rule 47 (estatuto -> var_body .)
    TURNRIGHT       reduce using rule 47 (estatuto -> var_body .)
    MOVE            reduce using rule 47 (estatuto -> var_body .)
    RETURN          reduce using rule 47 (estatuto -> var_body .)
    CERRAR_LLAVE    reduce using rule 47 (estatuto -> var_body .)


state 77

    (6) array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .

    VAR             reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    FUNC            reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    MAIN            reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    IF              reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    ID              reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    PRINT           reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    WHILE           reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    DO              reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    PENUP           reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    PENDOWN         reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    ERASE           reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    TURNLEFT        reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    TURNRIGHT       reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    MOVE            reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)
    RETURN          reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH PUNTO_COMA .)


state 78

    (25) functions_loop -> FUNC . functions_aux
    (27) functions_aux -> . functions_body functions_params func_block functions_loop
    (28) functions_aux -> . functions_body_void functions_params block ret_void functions_loop
    (22) functions_body -> . type ID
    (23) functions_body_void -> . VOID ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    VOID            shift and go to state 24
    INT             shift and go to state 8
    FLOAT           shift and go to state 12
    STRING          shift and go to state 11
    BOOL            shift and go to state 10

    type                           shift and go to state 22
    functions_body                 shift and go to state 103
    functions_body_void            shift and go to state 104
    functions_aux                  shift and go to state 105

state 79

    (17) functions2 -> functions_body functions_params func_block functions_loop .

    MAIN            reduce using rule 17 (functions2 -> functions_body functions_params func_block functions_loop .)


state 80

    (21) func_block -> ABRIR_LLAVE estatuto_loop . return CERRAR_LLAVE
    (24) return -> . RETURN expression PUNTO_COMA

    RETURN          shift and go to state 106

    return                         shift and go to state 107

state 81

    (29) functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT .

    ABRIR_LLAVE     reduce using rule 29 (functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT .)


state 82

    (30) params_aux -> params params_loop .

    CERRAR_PRNT     reduce using rule 30 (params_aux -> params params_loop .)


state 83

    (34) params_loop -> COMA . params_loop_aux
    (33) params_loop_aux -> . params params_loop
    (32) params -> . type ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    INT             shift and go to state 8
    FLOAT           shift and go to state 12
    STRING          shift and go to state 11
    BOOL            shift and go to state 10

    params_loop_aux                shift and go to state 109
    params                         shift and go to state 108
    type                           shift and go to state 46

state 84

    (32) params -> type ID .

    COMA            reduce using rule 32 (params -> type ID .)
    CERRAR_PRNT     reduce using rule 32 (params -> type ID .)


state 85

    (18) functions2 -> functions_body_void functions_params block ret_void . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 78
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 110

state 86

    (116) fmove -> MOVE ABRIR_PRNT . direction COMA expression CERRAR_PRNT PUNTO_COMA
    (117) direction -> . FORWARD
    (118) direction -> . BACKWARD

    FORWARD         shift and go to state 112
    BACKWARD        shift and go to state 111

    direction                      shift and go to state 113

state 87

    (111) fpen_up -> PENUP ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 114


state 88

    (48) fprint -> PRINT ABRIR_PRNT . write_choice CERRAR_PRNT PUNTO_COMA
    (49) write_choice -> . expression
    (50) write_choice -> . const_string
    (62) expression -> . exp exp_aux_pila expression_choice
    (51) const_string -> . CTE_S
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    CTE_S           shift and go to state 123
    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 115
    write_choice                   shift and go to state 116
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    const_string                   shift and go to state 125
    exp                            shift and go to state 128
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130
    const_bool                     shift and go to state 129

state 89

    (113) ferase -> ERASE ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 132


state 90

    (36) block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .

    IF              reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    ID              reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    PRINT           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    VAR             reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    WHILE           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    DO              reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    PENUP           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    PENDOWN         reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    ERASE           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    TURNLEFT        reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    TURNRIGHT       reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    MOVE            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    CERRAR_LLAVE    reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    RETURN          reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    END             reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    FUNC            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    MAIN            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    ELSE            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)


state 91

    (39) estatuto_loop -> estatuto estatuto_loop .

    CERRAR_LLAVE    reduce using rule 39 (estatuto_loop -> estatuto estatuto_loop .)
    RETURN          reduce using rule 39 (estatuto_loop -> estatuto estatuto_loop .)


state 92

    (57) while -> WHILE ABRIR_PRNT . whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (124) whilecuad1 -> .

    ABRIR_PRNT      reduce using rule 124 (whilecuad1 -> .)
    ID              reduce using rule 124 (whilecuad1 -> .)
    CTE_I           reduce using rule 124 (whilecuad1 -> .)
    CTE_F           reduce using rule 124 (whilecuad1 -> .)
    TRUE            reduce using rule 124 (whilecuad1 -> .)
    FALSE           reduce using rule 124 (whilecuad1 -> .)

    whilecuad1                     shift and go to state 133

state 93

    (112) fpen_down -> PENDOWN ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 134


state 94

    (114) fturn_left -> TURNLEFT ABRIR_PRNT . expression CERRAR_PRNT PUNTO_COMA
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 135
    const_bool                     shift and go to state 129
    const_int                      shift and go to state 126
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 95

    (52) condition -> IF ABRIR_PRNT . expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 136
    term                           shift and go to state 118
    const_bool                     shift and go to state 129
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 96

    (97) call -> ID var_func . PUNTO_COMA

    PUNTO_COMA      shift and go to state 137


state 97

    (98) var_func -> ABRIR_PRNT . params_call_aux CERRAR_PRNT
    (99) params_call_aux -> . params_call params_call_loop
    (100) params_call_aux -> .
    (101) params_call -> . expression
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    CERRAR_PRNT     reduce using rule 100 (params_call_aux -> .)
    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 138
    const_bool                     shift and go to state 129
    params_call_aux                shift and go to state 139
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    params_call                    shift and go to state 140
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130

state 98

    (60) assignment_aux -> IGUAL .

    ABRIR_PRNT      reduce using rule 60 (assignment_aux -> IGUAL .)
    ID              reduce using rule 60 (assignment_aux -> IGUAL .)
    CTE_I           reduce using rule 60 (assignment_aux -> IGUAL .)
    CTE_F           reduce using rule 60 (assignment_aux -> IGUAL .)
    TRUE            reduce using rule 60 (assignment_aux -> IGUAL .)
    FALSE           reduce using rule 60 (assignment_aux -> IGUAL .)


state 99

    (61) assignment -> ID assignment_aux . expression PUNTO_COMA
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 141
    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130

state 100

    (59) assignment_aux -> ABRIR_CORCH . exp CERRAR_CORCH IGUAL
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_int                      shift and go to state 126
    term                           shift and go to state 118
    const_bool                     shift and go to state 129
    var_cte                        shift and go to state 122
    exp                            shift and go to state 142
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 101

    (58) do_while -> DO docuad1 . block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 39

    block                          shift and go to state 143

state 102

    (115) fturn_right -> TURNRIGHT ABRIR_PRNT . expression CERRAR_PRNT PUNTO_COMA
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 144
    const_bool                     shift and go to state 129
    const_int                      shift and go to state 126
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 103

    (27) functions_aux -> functions_body . functions_params func_block functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 34

    functions_params               shift and go to state 145

state 104

    (28) functions_aux -> functions_body_void . functions_params block ret_void functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 34

    functions_params               shift and go to state 146

state 105

    (25) functions_loop -> FUNC functions_aux .

    MAIN            reduce using rule 25 (functions_loop -> FUNC functions_aux .)


state 106

    (24) return -> RETURN . expression PUNTO_COMA
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 147
    const_bool                     shift and go to state 129
    const_int                      shift and go to state 126
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 107

    (21) func_block -> ABRIR_LLAVE estatuto_loop return . CERRAR_LLAVE

    CERRAR_LLAVE    shift and go to state 148


state 108

    (33) params_loop_aux -> params . params_loop
    (34) params_loop -> . COMA params_loop_aux
    (35) params_loop -> .

    COMA            shift and go to state 83
    CERRAR_PRNT     reduce using rule 35 (params_loop -> .)

    params_loop                    shift and go to state 149

state 109

    (34) params_loop -> COMA params_loop_aux .

    CERRAR_PRNT     reduce using rule 34 (params_loop -> COMA params_loop_aux .)


state 110

    (18) functions2 -> functions_body_void functions_params block ret_void functions_loop .

    MAIN            reduce using rule 18 (functions2 -> functions_body_void functions_params block ret_void functions_loop .)


state 111

    (118) direction -> BACKWARD .

    COMA            reduce using rule 118 (direction -> BACKWARD .)


state 112

    (117) direction -> FORWARD .

    COMA            reduce using rule 117 (direction -> FORWARD .)


state 113

    (116) fmove -> MOVE ABRIR_PRNT direction . COMA expression CERRAR_PRNT PUNTO_COMA

    COMA            shift and go to state 150


state 114

    (111) fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 151


state 115

    (49) write_choice -> expression .

    CERRAR_PRNT     reduce using rule 49 (write_choice -> expression .)


state 116

    (48) fprint -> PRINT ABRIR_PRNT write_choice . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 152


state 117

    (77) term -> factor . term_choice
    (78) term_choice -> . term_aux
    (79) term_choice -> .
    (81) term_aux -> . MULTIPLICACION push_operador term
    (82) term_aux -> . DIVISION push_operador term

    SUMA            reduce using rule 79 (term_choice -> .)
    RESTA           reduce using rule 79 (term_choice -> .)
    IGUALDAD        reduce using rule 79 (term_choice -> .)
    DESIGUALDAD     reduce using rule 79 (term_choice -> .)
    MAYOR_QUE       reduce using rule 79 (term_choice -> .)
    MENOR_QUE       reduce using rule 79 (term_choice -> .)
    MAYOR_IGUAL     reduce using rule 79 (term_choice -> .)
    MENOR_IGUAL     reduce using rule 79 (term_choice -> .)
    CERRAR_PRNT     reduce using rule 79 (term_choice -> .)
    COMA            reduce using rule 79 (term_choice -> .)
    PUNTO_COMA      reduce using rule 79 (term_choice -> .)
    CERRAR_CORCH    reduce using rule 79 (term_choice -> .)
    MULTIPLICACION  shift and go to state 153
    DIVISION        shift and go to state 154

    term_choice                    shift and go to state 155
    term_aux                       shift and go to state 156

state 118

    (71) exp -> term . term_aux_pila exp_choice
    (80) term_aux_pila -> .

    SUMA            reduce using rule 80 (term_aux_pila -> .)
    RESTA           reduce using rule 80 (term_aux_pila -> .)
    IGUALDAD        reduce using rule 80 (term_aux_pila -> .)
    DESIGUALDAD     reduce using rule 80 (term_aux_pila -> .)
    MAYOR_QUE       reduce using rule 80 (term_aux_pila -> .)
    MENOR_QUE       reduce using rule 80 (term_aux_pila -> .)
    MAYOR_IGUAL     reduce using rule 80 (term_aux_pila -> .)
    MENOR_IGUAL     reduce using rule 80 (term_aux_pila -> .)
    CERRAR_PRNT     reduce using rule 80 (term_aux_pila -> .)
    COMA            reduce using rule 80 (term_aux_pila -> .)
    PUNTO_COMA      reduce using rule 80 (term_aux_pila -> .)
    CERRAR_CORCH    reduce using rule 80 (term_aux_pila -> .)

    term_aux_pila                  shift and go to state 157

state 119

    (83) factor -> ABRIR_PRNT . expression CERRAR_PRNT
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 158
    const_bool                     shift and go to state 129
    const_int                      shift and go to state 126
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 120

    (95) const_bool -> TRUE . push_operando
    (119) push_operando -> .

    MULTIPLICACION  reduce using rule 119 (push_operando -> .)
    DIVISION        reduce using rule 119 (push_operando -> .)
    SUMA            reduce using rule 119 (push_operando -> .)
    RESTA           reduce using rule 119 (push_operando -> .)
    IGUALDAD        reduce using rule 119 (push_operando -> .)
    DESIGUALDAD     reduce using rule 119 (push_operando -> .)
    MAYOR_QUE       reduce using rule 119 (push_operando -> .)
    MENOR_QUE       reduce using rule 119 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 119 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 119 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 119 (push_operando -> .)
    COMA            reduce using rule 119 (push_operando -> .)
    PUNTO_COMA      reduce using rule 119 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 119 (push_operando -> .)

    push_operando                  shift and go to state 159

state 121

    (94) const_float -> CTE_F . push_operando
    (119) push_operando -> .

    MULTIPLICACION  reduce using rule 119 (push_operando -> .)
    DIVISION        reduce using rule 119 (push_operando -> .)
    SUMA            reduce using rule 119 (push_operando -> .)
    RESTA           reduce using rule 119 (push_operando -> .)
    IGUALDAD        reduce using rule 119 (push_operando -> .)
    DESIGUALDAD     reduce using rule 119 (push_operando -> .)
    MAYOR_QUE       reduce using rule 119 (push_operando -> .)
    MENOR_QUE       reduce using rule 119 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 119 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 119 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 119 (push_operando -> .)
    COMA            reduce using rule 119 (push_operando -> .)
    PUNTO_COMA      reduce using rule 119 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 119 (push_operando -> .)

    push_operando                  shift and go to state 160

state 122

    (84) factor -> var_cte .

    MULTIPLICACION  reduce using rule 84 (factor -> var_cte .)
    DIVISION        reduce using rule 84 (factor -> var_cte .)
    SUMA            reduce using rule 84 (factor -> var_cte .)
    RESTA           reduce using rule 84 (factor -> var_cte .)
    CERRAR_PRNT     reduce using rule 84 (factor -> var_cte .)
    COMA            reduce using rule 84 (factor -> var_cte .)
    PUNTO_COMA      reduce using rule 84 (factor -> var_cte .)
    IGUALDAD        reduce using rule 84 (factor -> var_cte .)
    DESIGUALDAD     reduce using rule 84 (factor -> var_cte .)
    MAYOR_QUE       reduce using rule 84 (factor -> var_cte .)
    MENOR_QUE       reduce using rule 84 (factor -> var_cte .)
    MAYOR_IGUAL     reduce using rule 84 (factor -> var_cte .)
    MENOR_IGUAL     reduce using rule 84 (factor -> var_cte .)
    CERRAR_CORCH    reduce using rule 84 (factor -> var_cte .)


state 123

    (51) const_string -> CTE_S .

    CERRAR_PRNT     reduce using rule 51 (const_string -> CTE_S .)


state 124

    (96) const_bool -> FALSE . push_operando
    (119) push_operando -> .

    MULTIPLICACION  reduce using rule 119 (push_operando -> .)
    DIVISION        reduce using rule 119 (push_operando -> .)
    SUMA            reduce using rule 119 (push_operando -> .)
    RESTA           reduce using rule 119 (push_operando -> .)
    IGUALDAD        reduce using rule 119 (push_operando -> .)
    DESIGUALDAD     reduce using rule 119 (push_operando -> .)
    MAYOR_QUE       reduce using rule 119 (push_operando -> .)
    MENOR_QUE       reduce using rule 119 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 119 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 119 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 119 (push_operando -> .)
    COMA            reduce using rule 119 (push_operando -> .)
    PUNTO_COMA      reduce using rule 119 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 119 (push_operando -> .)

    push_operando                  shift and go to state 161

state 125

    (50) write_choice -> const_string .

    CERRAR_PRNT     reduce using rule 50 (write_choice -> const_string .)


state 126

    (85) var_cte -> const_int .

    MULTIPLICACION  reduce using rule 85 (var_cte -> const_int .)
    DIVISION        reduce using rule 85 (var_cte -> const_int .)
    SUMA            reduce using rule 85 (var_cte -> const_int .)
    RESTA           reduce using rule 85 (var_cte -> const_int .)
    IGUALDAD        reduce using rule 85 (var_cte -> const_int .)
    DESIGUALDAD     reduce using rule 85 (var_cte -> const_int .)
    MAYOR_QUE       reduce using rule 85 (var_cte -> const_int .)
    MENOR_QUE       reduce using rule 85 (var_cte -> const_int .)
    MAYOR_IGUAL     reduce using rule 85 (var_cte -> const_int .)
    MENOR_IGUAL     reduce using rule 85 (var_cte -> const_int .)
    CERRAR_PRNT     reduce using rule 85 (var_cte -> const_int .)
    COMA            reduce using rule 85 (var_cte -> const_int .)
    PUNTO_COMA      reduce using rule 85 (var_cte -> const_int .)
    CERRAR_CORCH    reduce using rule 85 (var_cte -> const_int .)


state 127

    (93) const_int -> CTE_I . push_operando
    (119) push_operando -> .

    MULTIPLICACION  reduce using rule 119 (push_operando -> .)
    DIVISION        reduce using rule 119 (push_operando -> .)
    SUMA            reduce using rule 119 (push_operando -> .)
    RESTA           reduce using rule 119 (push_operando -> .)
    IGUALDAD        reduce using rule 119 (push_operando -> .)
    DESIGUALDAD     reduce using rule 119 (push_operando -> .)
    MAYOR_QUE       reduce using rule 119 (push_operando -> .)
    MENOR_QUE       reduce using rule 119 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 119 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 119 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 119 (push_operando -> .)
    COMA            reduce using rule 119 (push_operando -> .)
    PUNTO_COMA      reduce using rule 119 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 119 (push_operando -> .)

    push_operando                  shift and go to state 162

state 128

    (62) expression -> exp . exp_aux_pila expression_choice
    (74) exp_aux_pila -> .

    IGUALDAD        reduce using rule 74 (exp_aux_pila -> .)
    DESIGUALDAD     reduce using rule 74 (exp_aux_pila -> .)
    MAYOR_QUE       reduce using rule 74 (exp_aux_pila -> .)
    MENOR_QUE       reduce using rule 74 (exp_aux_pila -> .)
    MAYOR_IGUAL     reduce using rule 74 (exp_aux_pila -> .)
    MENOR_IGUAL     reduce using rule 74 (exp_aux_pila -> .)
    CERRAR_PRNT     reduce using rule 74 (exp_aux_pila -> .)
    COMA            reduce using rule 74 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 74 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 163

state 129

    (87) var_cte -> const_bool .

    MULTIPLICACION  reduce using rule 87 (var_cte -> const_bool .)
    DIVISION        reduce using rule 87 (var_cte -> const_bool .)
    SUMA            reduce using rule 87 (var_cte -> const_bool .)
    RESTA           reduce using rule 87 (var_cte -> const_bool .)
    IGUALDAD        reduce using rule 87 (var_cte -> const_bool .)
    DESIGUALDAD     reduce using rule 87 (var_cte -> const_bool .)
    MAYOR_QUE       reduce using rule 87 (var_cte -> const_bool .)
    MENOR_QUE       reduce using rule 87 (var_cte -> const_bool .)
    MAYOR_IGUAL     reduce using rule 87 (var_cte -> const_bool .)
    MENOR_IGUAL     reduce using rule 87 (var_cte -> const_bool .)
    CERRAR_PRNT     reduce using rule 87 (var_cte -> const_bool .)
    COMA            reduce using rule 87 (var_cte -> const_bool .)
    PUNTO_COMA      reduce using rule 87 (var_cte -> const_bool .)
    CERRAR_CORCH    reduce using rule 87 (var_cte -> const_bool .)


state 130

    (86) var_cte -> const_float .

    MULTIPLICACION  reduce using rule 86 (var_cte -> const_float .)
    DIVISION        reduce using rule 86 (var_cte -> const_float .)
    SUMA            reduce using rule 86 (var_cte -> const_float .)
    RESTA           reduce using rule 86 (var_cte -> const_float .)
    IGUALDAD        reduce using rule 86 (var_cte -> const_float .)
    DESIGUALDAD     reduce using rule 86 (var_cte -> const_float .)
    MAYOR_QUE       reduce using rule 86 (var_cte -> const_float .)
    MENOR_QUE       reduce using rule 86 (var_cte -> const_float .)
    MAYOR_IGUAL     reduce using rule 86 (var_cte -> const_float .)
    MENOR_IGUAL     reduce using rule 86 (var_cte -> const_float .)
    CERRAR_PRNT     reduce using rule 86 (var_cte -> const_float .)
    COMA            reduce using rule 86 (var_cte -> const_float .)
    PUNTO_COMA      reduce using rule 86 (var_cte -> const_float .)
    CERRAR_CORCH    reduce using rule 86 (var_cte -> const_float .)


state 131

    (88) var_cte -> ID . var_decision
    (89) var_decision -> . var_func
    (90) var_decision -> . push_operando
    (91) var_decision -> . array_call
    (98) var_func -> . ABRIR_PRNT params_call_aux CERRAR_PRNT
    (119) push_operando -> .
    (92) array_call -> . ABRIR_CORCH exp CERRAR_CORCH

    ABRIR_PRNT      shift and go to state 97
    MULTIPLICACION  reduce using rule 119 (push_operando -> .)
    DIVISION        reduce using rule 119 (push_operando -> .)
    SUMA            reduce using rule 119 (push_operando -> .)
    RESTA           reduce using rule 119 (push_operando -> .)
    IGUALDAD        reduce using rule 119 (push_operando -> .)
    DESIGUALDAD     reduce using rule 119 (push_operando -> .)
    MAYOR_QUE       reduce using rule 119 (push_operando -> .)
    MENOR_QUE       reduce using rule 119 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 119 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 119 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 119 (push_operando -> .)
    COMA            reduce using rule 119 (push_operando -> .)
    PUNTO_COMA      reduce using rule 119 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 119 (push_operando -> .)
    ABRIR_CORCH     shift and go to state 167

    var_func                       shift and go to state 164
    push_operando                  shift and go to state 166
    var_decision                   shift and go to state 165
    array_call                     shift and go to state 168

state 132

    (113) ferase -> ERASE ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 169


state 133

    (57) while -> WHILE ABRIR_PRNT whilecuad1 . expression whilecuad2 CERRAR_PRNT block whilecuad3
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 170
    const_bool                     shift and go to state 129
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 134

    (112) fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 171


state 135

    (114) fturn_left -> TURNLEFT ABRIR_PRNT expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 172


state 136

    (52) condition -> IF ABRIR_PRNT expression . ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (121) ifcuad1 -> .

    CERRAR_PRNT     reduce using rule 121 (ifcuad1 -> .)

    ifcuad1                        shift and go to state 173

state 137

    (97) call -> ID var_func PUNTO_COMA .

    IF              reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    ID              reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    PRINT           reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    VAR             reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    WHILE           reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    DO              reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    PENUP           reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    PENDOWN         reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    ERASE           reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    TURNLEFT        reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    TURNRIGHT       reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    MOVE            reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 97 (call -> ID var_func PUNTO_COMA .)
    RETURN          reduce using rule 97 (call -> ID var_func PUNTO_COMA .)


state 138

    (101) params_call -> expression .

    COMA            reduce using rule 101 (params_call -> expression .)
    CERRAR_PRNT     reduce using rule 101 (params_call -> expression .)


state 139

    (98) var_func -> ABRIR_PRNT params_call_aux . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 174


state 140

    (99) params_call_aux -> params_call . params_call_loop
    (102) params_call_loop -> . COMA params_call_loop_aux
    (103) params_call_loop -> .

    COMA            shift and go to state 175
    CERRAR_PRNT     reduce using rule 103 (params_call_loop -> .)

    params_call_loop               shift and go to state 176

state 141

    (61) assignment -> ID assignment_aux expression . PUNTO_COMA

    PUNTO_COMA      shift and go to state 177


state 142

    (59) assignment_aux -> ABRIR_CORCH exp . CERRAR_CORCH IGUAL

    CERRAR_CORCH    shift and go to state 178


state 143

    (58) do_while -> DO docuad1 block . WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA

    WHILE           shift and go to state 179


state 144

    (115) fturn_right -> TURNRIGHT ABRIR_PRNT expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 180


state 145

    (27) functions_aux -> functions_body functions_params . func_block functions_loop
    (21) func_block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 43

    func_block                     shift and go to state 181

state 146

    (28) functions_aux -> functions_body_void functions_params . block ret_void functions_loop
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 39

    block                          shift and go to state 182

state 147

    (24) return -> RETURN expression . PUNTO_COMA

    PUNTO_COMA      shift and go to state 183


state 148

    (21) func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .

    FUNC            reduce using rule 21 (func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    MAIN            reduce using rule 21 (func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)


state 149

    (33) params_loop_aux -> params params_loop .

    CERRAR_PRNT     reduce using rule 33 (params_loop_aux -> params params_loop .)


state 150

    (116) fmove -> MOVE ABRIR_PRNT direction COMA . expression CERRAR_PRNT PUNTO_COMA
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 184
    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130

state 151

    (111) fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 111 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 152

    (48) fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 185


state 153

    (81) term_aux -> MULTIPLICACION . push_operador term
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 186

state 154

    (82) term_aux -> DIVISION . push_operador term
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 187

state 155

    (77) term -> factor term_choice .

    SUMA            reduce using rule 77 (term -> factor term_choice .)
    RESTA           reduce using rule 77 (term -> factor term_choice .)
    IGUALDAD        reduce using rule 77 (term -> factor term_choice .)
    DESIGUALDAD     reduce using rule 77 (term -> factor term_choice .)
    MAYOR_QUE       reduce using rule 77 (term -> factor term_choice .)
    MENOR_QUE       reduce using rule 77 (term -> factor term_choice .)
    MAYOR_IGUAL     reduce using rule 77 (term -> factor term_choice .)
    MENOR_IGUAL     reduce using rule 77 (term -> factor term_choice .)
    COMA            reduce using rule 77 (term -> factor term_choice .)
    CERRAR_PRNT     reduce using rule 77 (term -> factor term_choice .)
    PUNTO_COMA      reduce using rule 77 (term -> factor term_choice .)
    CERRAR_CORCH    reduce using rule 77 (term -> factor term_choice .)


state 156

    (78) term_choice -> term_aux .

    SUMA            reduce using rule 78 (term_choice -> term_aux .)
    RESTA           reduce using rule 78 (term_choice -> term_aux .)
    IGUALDAD        reduce using rule 78 (term_choice -> term_aux .)
    DESIGUALDAD     reduce using rule 78 (term_choice -> term_aux .)
    MAYOR_QUE       reduce using rule 78 (term_choice -> term_aux .)
    MENOR_QUE       reduce using rule 78 (term_choice -> term_aux .)
    MAYOR_IGUAL     reduce using rule 78 (term_choice -> term_aux .)
    MENOR_IGUAL     reduce using rule 78 (term_choice -> term_aux .)
    CERRAR_PRNT     reduce using rule 78 (term_choice -> term_aux .)
    COMA            reduce using rule 78 (term_choice -> term_aux .)
    PUNTO_COMA      reduce using rule 78 (term_choice -> term_aux .)
    CERRAR_CORCH    reduce using rule 78 (term_choice -> term_aux .)


state 157

    (71) exp -> term term_aux_pila . exp_choice
    (72) exp_choice -> . exp_aux
    (73) exp_choice -> .
    (75) exp_aux -> . SUMA push_operador exp
    (76) exp_aux -> . RESTA push_operador exp

    IGUALDAD        reduce using rule 73 (exp_choice -> .)
    DESIGUALDAD     reduce using rule 73 (exp_choice -> .)
    MAYOR_QUE       reduce using rule 73 (exp_choice -> .)
    MENOR_QUE       reduce using rule 73 (exp_choice -> .)
    MAYOR_IGUAL     reduce using rule 73 (exp_choice -> .)
    MENOR_IGUAL     reduce using rule 73 (exp_choice -> .)
    CERRAR_PRNT     reduce using rule 73 (exp_choice -> .)
    COMA            reduce using rule 73 (exp_choice -> .)
    PUNTO_COMA      reduce using rule 73 (exp_choice -> .)
    CERRAR_CORCH    reduce using rule 73 (exp_choice -> .)
    SUMA            shift and go to state 191
    RESTA           shift and go to state 190

    exp_choice                     shift and go to state 188
    exp_aux                        shift and go to state 189

state 158

    (83) factor -> ABRIR_PRNT expression . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 192


state 159

    (95) const_bool -> TRUE push_operando .

    MULTIPLICACION  reduce using rule 95 (const_bool -> TRUE push_operando .)
    DIVISION        reduce using rule 95 (const_bool -> TRUE push_operando .)
    SUMA            reduce using rule 95 (const_bool -> TRUE push_operando .)
    RESTA           reduce using rule 95 (const_bool -> TRUE push_operando .)
    IGUALDAD        reduce using rule 95 (const_bool -> TRUE push_operando .)
    DESIGUALDAD     reduce using rule 95 (const_bool -> TRUE push_operando .)
    MAYOR_QUE       reduce using rule 95 (const_bool -> TRUE push_operando .)
    MENOR_QUE       reduce using rule 95 (const_bool -> TRUE push_operando .)
    MAYOR_IGUAL     reduce using rule 95 (const_bool -> TRUE push_operando .)
    MENOR_IGUAL     reduce using rule 95 (const_bool -> TRUE push_operando .)
    CERRAR_PRNT     reduce using rule 95 (const_bool -> TRUE push_operando .)
    COMA            reduce using rule 95 (const_bool -> TRUE push_operando .)
    PUNTO_COMA      reduce using rule 95 (const_bool -> TRUE push_operando .)
    CERRAR_CORCH    reduce using rule 95 (const_bool -> TRUE push_operando .)


state 160

    (94) const_float -> CTE_F push_operando .

    MULTIPLICACION  reduce using rule 94 (const_float -> CTE_F push_operando .)
    DIVISION        reduce using rule 94 (const_float -> CTE_F push_operando .)
    SUMA            reduce using rule 94 (const_float -> CTE_F push_operando .)
    RESTA           reduce using rule 94 (const_float -> CTE_F push_operando .)
    CERRAR_CORCH    reduce using rule 94 (const_float -> CTE_F push_operando .)
    CERRAR_PRNT     reduce using rule 94 (const_float -> CTE_F push_operando .)
    COMA            reduce using rule 94 (const_float -> CTE_F push_operando .)
    PUNTO_COMA      reduce using rule 94 (const_float -> CTE_F push_operando .)
    IGUALDAD        reduce using rule 94 (const_float -> CTE_F push_operando .)
    DESIGUALDAD     reduce using rule 94 (const_float -> CTE_F push_operando .)
    MAYOR_QUE       reduce using rule 94 (const_float -> CTE_F push_operando .)
    MENOR_QUE       reduce using rule 94 (const_float -> CTE_F push_operando .)
    MAYOR_IGUAL     reduce using rule 94 (const_float -> CTE_F push_operando .)
    MENOR_IGUAL     reduce using rule 94 (const_float -> CTE_F push_operando .)


state 161

    (96) const_bool -> FALSE push_operando .

    MULTIPLICACION  reduce using rule 96 (const_bool -> FALSE push_operando .)
    DIVISION        reduce using rule 96 (const_bool -> FALSE push_operando .)
    SUMA            reduce using rule 96 (const_bool -> FALSE push_operando .)
    RESTA           reduce using rule 96 (const_bool -> FALSE push_operando .)
    IGUALDAD        reduce using rule 96 (const_bool -> FALSE push_operando .)
    DESIGUALDAD     reduce using rule 96 (const_bool -> FALSE push_operando .)
    MAYOR_QUE       reduce using rule 96 (const_bool -> FALSE push_operando .)
    MENOR_QUE       reduce using rule 96 (const_bool -> FALSE push_operando .)
    MAYOR_IGUAL     reduce using rule 96 (const_bool -> FALSE push_operando .)
    MENOR_IGUAL     reduce using rule 96 (const_bool -> FALSE push_operando .)
    CERRAR_PRNT     reduce using rule 96 (const_bool -> FALSE push_operando .)
    COMA            reduce using rule 96 (const_bool -> FALSE push_operando .)
    PUNTO_COMA      reduce using rule 96 (const_bool -> FALSE push_operando .)
    CERRAR_CORCH    reduce using rule 96 (const_bool -> FALSE push_operando .)


state 162

    (93) const_int -> CTE_I push_operando .

    MULTIPLICACION  reduce using rule 93 (const_int -> CTE_I push_operando .)
    DIVISION        reduce using rule 93 (const_int -> CTE_I push_operando .)
    SUMA            reduce using rule 93 (const_int -> CTE_I push_operando .)
    RESTA           reduce using rule 93 (const_int -> CTE_I push_operando .)
    IGUALDAD        reduce using rule 93 (const_int -> CTE_I push_operando .)
    DESIGUALDAD     reduce using rule 93 (const_int -> CTE_I push_operando .)
    MAYOR_QUE       reduce using rule 93 (const_int -> CTE_I push_operando .)
    MENOR_QUE       reduce using rule 93 (const_int -> CTE_I push_operando .)
    MAYOR_IGUAL     reduce using rule 93 (const_int -> CTE_I push_operando .)
    MENOR_IGUAL     reduce using rule 93 (const_int -> CTE_I push_operando .)
    CERRAR_PRNT     reduce using rule 93 (const_int -> CTE_I push_operando .)
    COMA            reduce using rule 93 (const_int -> CTE_I push_operando .)
    PUNTO_COMA      reduce using rule 93 (const_int -> CTE_I push_operando .)
    CERRAR_CORCH    reduce using rule 93 (const_int -> CTE_I push_operando .)


state 163

    (62) expression -> exp exp_aux_pila . expression_choice
    (63) expression_choice -> . expression_choice_aux
    (64) expression_choice -> .
    (65) expression_choice_aux -> . IGUALDAD push_operador exp
    (66) expression_choice_aux -> . DESIGUALDAD push_operador exp exp_aux_pila
    (67) expression_choice_aux -> . MAYOR_QUE push_operador exp exp_aux_pila
    (68) expression_choice_aux -> . MENOR_QUE push_operador exp exp_aux_pila
    (69) expression_choice_aux -> . MAYOR_IGUAL push_operador exp exp_aux_pila
    (70) expression_choice_aux -> . MENOR_IGUAL push_operador exp exp_aux_pila

    CERRAR_PRNT     reduce using rule 64 (expression_choice -> .)
    COMA            reduce using rule 64 (expression_choice -> .)
    PUNTO_COMA      reduce using rule 64 (expression_choice -> .)
    IGUALDAD        shift and go to state 196
    DESIGUALDAD     shift and go to state 197
    MAYOR_QUE       shift and go to state 199
    MENOR_QUE       shift and go to state 193
    MAYOR_IGUAL     shift and go to state 194
    MENOR_IGUAL     shift and go to state 198

    expression_choice_aux          shift and go to state 195
    expression_choice              shift and go to state 200

state 164

    (89) var_decision -> var_func .

    MULTIPLICACION  reduce using rule 89 (var_decision -> var_func .)
    DIVISION        reduce using rule 89 (var_decision -> var_func .)
    SUMA            reduce using rule 89 (var_decision -> var_func .)
    RESTA           reduce using rule 89 (var_decision -> var_func .)
    IGUALDAD        reduce using rule 89 (var_decision -> var_func .)
    DESIGUALDAD     reduce using rule 89 (var_decision -> var_func .)
    MAYOR_QUE       reduce using rule 89 (var_decision -> var_func .)
    MENOR_QUE       reduce using rule 89 (var_decision -> var_func .)
    MAYOR_IGUAL     reduce using rule 89 (var_decision -> var_func .)
    MENOR_IGUAL     reduce using rule 89 (var_decision -> var_func .)
    CERRAR_PRNT     reduce using rule 89 (var_decision -> var_func .)
    COMA            reduce using rule 89 (var_decision -> var_func .)
    PUNTO_COMA      reduce using rule 89 (var_decision -> var_func .)
    CERRAR_CORCH    reduce using rule 89 (var_decision -> var_func .)


state 165

    (88) var_cte -> ID var_decision .

    MULTIPLICACION  reduce using rule 88 (var_cte -> ID var_decision .)
    DIVISION        reduce using rule 88 (var_cte -> ID var_decision .)
    SUMA            reduce using rule 88 (var_cte -> ID var_decision .)
    RESTA           reduce using rule 88 (var_cte -> ID var_decision .)
    IGUALDAD        reduce using rule 88 (var_cte -> ID var_decision .)
    DESIGUALDAD     reduce using rule 88 (var_cte -> ID var_decision .)
    MAYOR_QUE       reduce using rule 88 (var_cte -> ID var_decision .)
    MENOR_QUE       reduce using rule 88 (var_cte -> ID var_decision .)
    MAYOR_IGUAL     reduce using rule 88 (var_cte -> ID var_decision .)
    MENOR_IGUAL     reduce using rule 88 (var_cte -> ID var_decision .)
    CERRAR_PRNT     reduce using rule 88 (var_cte -> ID var_decision .)
    COMA            reduce using rule 88 (var_cte -> ID var_decision .)
    PUNTO_COMA      reduce using rule 88 (var_cte -> ID var_decision .)
    CERRAR_CORCH    reduce using rule 88 (var_cte -> ID var_decision .)


state 166

    (90) var_decision -> push_operando .

    MULTIPLICACION  reduce using rule 90 (var_decision -> push_operando .)
    DIVISION        reduce using rule 90 (var_decision -> push_operando .)
    SUMA            reduce using rule 90 (var_decision -> push_operando .)
    RESTA           reduce using rule 90 (var_decision -> push_operando .)
    IGUALDAD        reduce using rule 90 (var_decision -> push_operando .)
    DESIGUALDAD     reduce using rule 90 (var_decision -> push_operando .)
    MAYOR_QUE       reduce using rule 90 (var_decision -> push_operando .)
    MENOR_QUE       reduce using rule 90 (var_decision -> push_operando .)
    MAYOR_IGUAL     reduce using rule 90 (var_decision -> push_operando .)
    MENOR_IGUAL     reduce using rule 90 (var_decision -> push_operando .)
    CERRAR_PRNT     reduce using rule 90 (var_decision -> push_operando .)
    COMA            reduce using rule 90 (var_decision -> push_operando .)
    PUNTO_COMA      reduce using rule 90 (var_decision -> push_operando .)
    CERRAR_CORCH    reduce using rule 90 (var_decision -> push_operando .)


state 167

    (92) array_call -> ABRIR_CORCH . exp CERRAR_CORCH
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_int                      shift and go to state 126
    term                           shift and go to state 118
    const_bool                     shift and go to state 129
    var_cte                        shift and go to state 122
    exp                            shift and go to state 201
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 168

    (91) var_decision -> array_call .

    MULTIPLICACION  reduce using rule 91 (var_decision -> array_call .)
    DIVISION        reduce using rule 91 (var_decision -> array_call .)
    SUMA            reduce using rule 91 (var_decision -> array_call .)
    RESTA           reduce using rule 91 (var_decision -> array_call .)
    IGUALDAD        reduce using rule 91 (var_decision -> array_call .)
    DESIGUALDAD     reduce using rule 91 (var_decision -> array_call .)
    MAYOR_QUE       reduce using rule 91 (var_decision -> array_call .)
    MENOR_QUE       reduce using rule 91 (var_decision -> array_call .)
    MAYOR_IGUAL     reduce using rule 91 (var_decision -> array_call .)
    MENOR_IGUAL     reduce using rule 91 (var_decision -> array_call .)
    CERRAR_PRNT     reduce using rule 91 (var_decision -> array_call .)
    COMA            reduce using rule 91 (var_decision -> array_call .)
    PUNTO_COMA      reduce using rule 91 (var_decision -> array_call .)
    CERRAR_CORCH    reduce using rule 91 (var_decision -> array_call .)


state 169

    (113) ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 113 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 170

    (57) while -> WHILE ABRIR_PRNT whilecuad1 expression . whilecuad2 CERRAR_PRNT block whilecuad3
    (125) whilecuad2 -> .

    CERRAR_PRNT     reduce using rule 125 (whilecuad2 -> .)

    whilecuad2                     shift and go to state 202

state 171

    (112) fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 112 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 172

    (114) fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 203


state 173

    (52) condition -> IF ABRIR_PRNT expression ifcuad1 . CERRAR_PRNT block ifcuad2 else ifcuad3

    CERRAR_PRNT     shift and go to state 204


state 174

    (98) var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .

    PUNTO_COMA      reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MULTIPLICACION  reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    DIVISION        reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    SUMA            reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    RESTA           reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    IGUALDAD        reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    DESIGUALDAD     reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MAYOR_QUE       reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MENOR_QUE       reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MAYOR_IGUAL     reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MENOR_IGUAL     reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    CERRAR_PRNT     reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    COMA            reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    CERRAR_CORCH    reduce using rule 98 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)


state 175

    (102) params_call_loop -> COMA . params_call_loop_aux
    (104) params_call_loop_aux -> . params_call params_call_loop
    (101) params_call -> . expression
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 138
    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    params_call_loop_aux           shift and go to state 206
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    params_call                    shift and go to state 205
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130

state 176

    (99) params_call_aux -> params_call params_call_loop .

    CERRAR_PRNT     reduce using rule 99 (params_call_aux -> params_call params_call_loop .)


state 177

    (61) assignment -> ID assignment_aux expression PUNTO_COMA .

    IF              reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    ID              reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    PRINT           reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    VAR             reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    WHILE           reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    DO              reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    PENUP           reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    PENDOWN         reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    ERASE           reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    TURNLEFT        reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    TURNRIGHT       reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    MOVE            reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)
    RETURN          reduce using rule 61 (assignment -> ID assignment_aux expression PUNTO_COMA .)


state 178

    (59) assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH . IGUAL

    IGUAL           shift and go to state 207


state 179

    (58) do_while -> DO docuad1 block WHILE . ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 208


state 180

    (115) fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 209


state 181

    (27) functions_aux -> functions_body functions_params func_block . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 78
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 210

state 182

    (28) functions_aux -> functions_body_void functions_params block . ret_void functions_loop
    (20) ret_void -> .

    FUNC            reduce using rule 20 (ret_void -> .)
    MAIN            reduce using rule 20 (ret_void -> .)

    ret_void                       shift and go to state 211

state 183

    (24) return -> RETURN expression PUNTO_COMA .

    CERRAR_LLAVE    reduce using rule 24 (return -> RETURN expression PUNTO_COMA .)


state 184

    (116) fmove -> MOVE ABRIR_PRNT direction COMA expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 212


state 185

    (48) fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 48 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)


state 186

    (81) term_aux -> MULTIPLICACION push_operador . term
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 213
    const_float                    shift and go to state 130
    var_cte                        shift and go to state 122
    const_int                      shift and go to state 126

state 187

    (82) term_aux -> DIVISION push_operador . term
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 214
    const_float                    shift and go to state 130
    var_cte                        shift and go to state 122
    const_int                      shift and go to state 126

state 188

    (71) exp -> term term_aux_pila exp_choice .

    IGUALDAD        reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    DESIGUALDAD     reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    MAYOR_QUE       reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    MENOR_QUE       reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    MAYOR_IGUAL     reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    MENOR_IGUAL     reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    CERRAR_PRNT     reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    COMA            reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    PUNTO_COMA      reduce using rule 71 (exp -> term term_aux_pila exp_choice .)
    CERRAR_CORCH    reduce using rule 71 (exp -> term term_aux_pila exp_choice .)


state 189

    (72) exp_choice -> exp_aux .

    IGUALDAD        reduce using rule 72 (exp_choice -> exp_aux .)
    DESIGUALDAD     reduce using rule 72 (exp_choice -> exp_aux .)
    MAYOR_QUE       reduce using rule 72 (exp_choice -> exp_aux .)
    MENOR_QUE       reduce using rule 72 (exp_choice -> exp_aux .)
    MAYOR_IGUAL     reduce using rule 72 (exp_choice -> exp_aux .)
    MENOR_IGUAL     reduce using rule 72 (exp_choice -> exp_aux .)
    CERRAR_PRNT     reduce using rule 72 (exp_choice -> exp_aux .)
    COMA            reduce using rule 72 (exp_choice -> exp_aux .)
    PUNTO_COMA      reduce using rule 72 (exp_choice -> exp_aux .)
    CERRAR_CORCH    reduce using rule 72 (exp_choice -> exp_aux .)


state 190

    (76) exp_aux -> RESTA . push_operador exp
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 215

state 191

    (75) exp_aux -> SUMA . push_operador exp
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 216

state 192

    (83) factor -> ABRIR_PRNT expression CERRAR_PRNT .

    MULTIPLICACION  reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    DIVISION        reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    SUMA            reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    RESTA           reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    CERRAR_PRNT     reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    COMA            reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    PUNTO_COMA      reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    IGUALDAD        reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    DESIGUALDAD     reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MAYOR_QUE       reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MENOR_QUE       reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MAYOR_IGUAL     reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MENOR_IGUAL     reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    CERRAR_CORCH    reduce using rule 83 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)


state 193

    (68) expression_choice_aux -> MENOR_QUE . push_operador exp exp_aux_pila
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 217

state 194

    (69) expression_choice_aux -> MAYOR_IGUAL . push_operador exp exp_aux_pila
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 218

state 195

    (63) expression_choice -> expression_choice_aux .

    CERRAR_PRNT     reduce using rule 63 (expression_choice -> expression_choice_aux .)
    COMA            reduce using rule 63 (expression_choice -> expression_choice_aux .)
    PUNTO_COMA      reduce using rule 63 (expression_choice -> expression_choice_aux .)


state 196

    (65) expression_choice_aux -> IGUALDAD . push_operador exp
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 219

state 197

    (66) expression_choice_aux -> DESIGUALDAD . push_operador exp exp_aux_pila
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 220

state 198

    (70) expression_choice_aux -> MENOR_IGUAL . push_operador exp exp_aux_pila
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 221

state 199

    (67) expression_choice_aux -> MAYOR_QUE . push_operador exp exp_aux_pila
    (120) push_operador -> .

    ABRIR_PRNT      reduce using rule 120 (push_operador -> .)
    ID              reduce using rule 120 (push_operador -> .)
    CTE_I           reduce using rule 120 (push_operador -> .)
    CTE_F           reduce using rule 120 (push_operador -> .)
    TRUE            reduce using rule 120 (push_operador -> .)
    FALSE           reduce using rule 120 (push_operador -> .)

    push_operador                  shift and go to state 222

state 200

    (62) expression -> exp exp_aux_pila expression_choice .

    CERRAR_PRNT     reduce using rule 62 (expression -> exp exp_aux_pila expression_choice .)
    COMA            reduce using rule 62 (expression -> exp exp_aux_pila expression_choice .)
    PUNTO_COMA      reduce using rule 62 (expression -> exp exp_aux_pila expression_choice .)


state 201

    (92) array_call -> ABRIR_CORCH exp . CERRAR_CORCH

    CERRAR_CORCH    shift and go to state 223


state 202

    (57) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 . CERRAR_PRNT block whilecuad3

    CERRAR_PRNT     shift and go to state 224


state 203

    (114) fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 114 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)


state 204

    (52) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT . block ifcuad2 else ifcuad3
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 39

    block                          shift and go to state 225

state 205

    (104) params_call_loop_aux -> params_call . params_call_loop
    (102) params_call_loop -> . COMA params_call_loop_aux
    (103) params_call_loop -> .

    COMA            shift and go to state 175
    CERRAR_PRNT     reduce using rule 103 (params_call_loop -> .)

    params_call_loop               shift and go to state 226

state 206

    (102) params_call_loop -> COMA params_call_loop_aux .

    CERRAR_PRNT     reduce using rule 102 (params_call_loop -> COMA params_call_loop_aux .)


state 207

    (59) assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL .

    ABRIR_PRNT      reduce using rule 59 (assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL .)
    ID              reduce using rule 59 (assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL .)
    CTE_I           reduce using rule 59 (assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL .)
    CTE_F           reduce using rule 59 (assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL .)
    TRUE            reduce using rule 59 (assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL .)
    FALSE           reduce using rule 59 (assignment_aux -> ABRIR_CORCH exp CERRAR_CORCH IGUAL .)


state 208

    (58) do_while -> DO docuad1 block WHILE ABRIR_PRNT . expression docuad2 CERRAR_PRNT PUNTO_COMA
    (62) expression -> . exp exp_aux_pila expression_choice
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    expression                     shift and go to state 227
    const_bool                     shift and go to state 129
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 128
    const_int                      shift and go to state 126
    const_float                    shift and go to state 130
    factor                         shift and go to state 117

state 209

    (115) fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 115 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)


state 210

    (27) functions_aux -> functions_body functions_params func_block functions_loop .

    MAIN            reduce using rule 27 (functions_aux -> functions_body functions_params func_block functions_loop .)


state 211

    (28) functions_aux -> functions_body_void functions_params block ret_void . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 78
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 228

state 212

    (116) fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 229


state 213

    (81) term_aux -> MULTIPLICACION push_operador term .

    SUMA            reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    RESTA           reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    IGUALDAD        reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    DESIGUALDAD     reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    MAYOR_QUE       reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    MENOR_QUE       reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    MAYOR_IGUAL     reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    MENOR_IGUAL     reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    CERRAR_PRNT     reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    COMA            reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    PUNTO_COMA      reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)
    CERRAR_CORCH    reduce using rule 81 (term_aux -> MULTIPLICACION push_operador term .)


state 214

    (82) term_aux -> DIVISION push_operador term .

    SUMA            reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    RESTA           reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    IGUALDAD        reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    DESIGUALDAD     reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    MAYOR_QUE       reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    MENOR_QUE       reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    MAYOR_IGUAL     reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    MENOR_IGUAL     reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    CERRAR_PRNT     reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    COMA            reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    PUNTO_COMA      reduce using rule 82 (term_aux -> DIVISION push_operador term .)
    CERRAR_CORCH    reduce using rule 82 (term_aux -> DIVISION push_operador term .)


state 215

    (76) exp_aux -> RESTA push_operador . exp
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 230
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 216

    (75) exp_aux -> SUMA push_operador . exp
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 231
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 217

    (68) expression_choice_aux -> MENOR_QUE push_operador . exp exp_aux_pila
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 232
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 218

    (69) expression_choice_aux -> MAYOR_IGUAL push_operador . exp exp_aux_pila
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 233
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 219

    (65) expression_choice_aux -> IGUALDAD push_operador . exp
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 234
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 220

    (66) expression_choice_aux -> DESIGUALDAD push_operador . exp exp_aux_pila
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 235
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 221

    (70) expression_choice_aux -> MENOR_IGUAL push_operador . exp exp_aux_pila
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 236
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 222

    (67) expression_choice_aux -> MAYOR_QUE push_operador . exp exp_aux_pila
    (71) exp -> . term term_aux_pila exp_choice
    (77) term -> . factor term_choice
    (83) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (84) factor -> . var_cte
    (85) var_cte -> . const_int
    (86) var_cte -> . const_float
    (87) var_cte -> . const_bool
    (88) var_cte -> . ID var_decision
    (93) const_int -> . CTE_I push_operando
    (94) const_float -> . CTE_F push_operando
    (95) const_bool -> . TRUE push_operando
    (96) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 119
    ID              shift and go to state 131
    CTE_I           shift and go to state 127
    CTE_F           shift and go to state 121
    TRUE            shift and go to state 120
    FALSE           shift and go to state 124

    const_bool                     shift and go to state 129
    factor                         shift and go to state 117
    term                           shift and go to state 118
    var_cte                        shift and go to state 122
    exp                            shift and go to state 237
    const_float                    shift and go to state 130
    const_int                      shift and go to state 126

state 223

    (92) array_call -> ABRIR_CORCH exp CERRAR_CORCH .

    MULTIPLICACION  reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    DIVISION        reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    SUMA            reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    RESTA           reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    IGUALDAD        reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    DESIGUALDAD     reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    MAYOR_QUE       reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    MENOR_QUE       reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    MAYOR_IGUAL     reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    MENOR_IGUAL     reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    CERRAR_PRNT     reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    COMA            reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    PUNTO_COMA      reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)
    CERRAR_CORCH    reduce using rule 92 (array_call -> ABRIR_CORCH exp CERRAR_CORCH .)


state 224

    (57) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT . block whilecuad3
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 39

    block                          shift and go to state 238

state 225

    (52) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block . ifcuad2 else ifcuad3
    (122) ifcuad2 -> .

    ELSE            reduce using rule 122 (ifcuad2 -> .)
    IF              reduce using rule 122 (ifcuad2 -> .)
    ID              reduce using rule 122 (ifcuad2 -> .)
    PRINT           reduce using rule 122 (ifcuad2 -> .)
    VAR             reduce using rule 122 (ifcuad2 -> .)
    WHILE           reduce using rule 122 (ifcuad2 -> .)
    DO              reduce using rule 122 (ifcuad2 -> .)
    PENUP           reduce using rule 122 (ifcuad2 -> .)
    PENDOWN         reduce using rule 122 (ifcuad2 -> .)
    ERASE           reduce using rule 122 (ifcuad2 -> .)
    TURNLEFT        reduce using rule 122 (ifcuad2 -> .)
    TURNRIGHT       reduce using rule 122 (ifcuad2 -> .)
    MOVE            reduce using rule 122 (ifcuad2 -> .)
    CERRAR_LLAVE    reduce using rule 122 (ifcuad2 -> .)
    RETURN          reduce using rule 122 (ifcuad2 -> .)

    ifcuad2                        shift and go to state 239

state 226

    (104) params_call_loop_aux -> params_call params_call_loop .

    CERRAR_PRNT     reduce using rule 104 (params_call_loop_aux -> params_call params_call_loop .)


state 227

    (58) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression . docuad2 CERRAR_PRNT PUNTO_COMA
    (128) docuad2 -> .

    CERRAR_PRNT     reduce using rule 128 (docuad2 -> .)

    docuad2                        shift and go to state 240

state 228

    (28) functions_aux -> functions_body_void functions_params block ret_void functions_loop .

    MAIN            reduce using rule 28 (functions_aux -> functions_body_void functions_params block ret_void functions_loop .)


state 229

    (116) fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 116 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)


state 230

    (76) exp_aux -> RESTA push_operador exp .

    IGUALDAD        reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    DESIGUALDAD     reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    MAYOR_QUE       reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    MENOR_QUE       reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    MAYOR_IGUAL     reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    MENOR_IGUAL     reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    CERRAR_PRNT     reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    COMA            reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    PUNTO_COMA      reduce using rule 76 (exp_aux -> RESTA push_operador exp .)
    CERRAR_CORCH    reduce using rule 76 (exp_aux -> RESTA push_operador exp .)


state 231

    (75) exp_aux -> SUMA push_operador exp .

    IGUALDAD        reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    DESIGUALDAD     reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    MAYOR_QUE       reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    MENOR_QUE       reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    MAYOR_IGUAL     reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    MENOR_IGUAL     reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    CERRAR_PRNT     reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    COMA            reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    PUNTO_COMA      reduce using rule 75 (exp_aux -> SUMA push_operador exp .)
    CERRAR_CORCH    reduce using rule 75 (exp_aux -> SUMA push_operador exp .)


state 232

    (68) expression_choice_aux -> MENOR_QUE push_operador exp . exp_aux_pila
    (74) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 74 (exp_aux_pila -> .)
    COMA            reduce using rule 74 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 74 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 241

state 233

    (69) expression_choice_aux -> MAYOR_IGUAL push_operador exp . exp_aux_pila
    (74) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 74 (exp_aux_pila -> .)
    COMA            reduce using rule 74 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 74 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 242

state 234

    (65) expression_choice_aux -> IGUALDAD push_operador exp .

    CERRAR_PRNT     reduce using rule 65 (expression_choice_aux -> IGUALDAD push_operador exp .)
    COMA            reduce using rule 65 (expression_choice_aux -> IGUALDAD push_operador exp .)
    PUNTO_COMA      reduce using rule 65 (expression_choice_aux -> IGUALDAD push_operador exp .)


state 235

    (66) expression_choice_aux -> DESIGUALDAD push_operador exp . exp_aux_pila
    (74) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 74 (exp_aux_pila -> .)
    COMA            reduce using rule 74 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 74 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 243

state 236

    (70) expression_choice_aux -> MENOR_IGUAL push_operador exp . exp_aux_pila
    (74) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 74 (exp_aux_pila -> .)
    COMA            reduce using rule 74 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 74 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 244

state 237

    (67) expression_choice_aux -> MAYOR_QUE push_operador exp . exp_aux_pila
    (74) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 74 (exp_aux_pila -> .)
    COMA            reduce using rule 74 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 74 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 245

state 238

    (57) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block . whilecuad3
    (126) whilecuad3 -> .

    IF              reduce using rule 126 (whilecuad3 -> .)
    ID              reduce using rule 126 (whilecuad3 -> .)
    PRINT           reduce using rule 126 (whilecuad3 -> .)
    VAR             reduce using rule 126 (whilecuad3 -> .)
    WHILE           reduce using rule 126 (whilecuad3 -> .)
    DO              reduce using rule 126 (whilecuad3 -> .)
    PENUP           reduce using rule 126 (whilecuad3 -> .)
    PENDOWN         reduce using rule 126 (whilecuad3 -> .)
    ERASE           reduce using rule 126 (whilecuad3 -> .)
    TURNLEFT        reduce using rule 126 (whilecuad3 -> .)
    TURNRIGHT       reduce using rule 126 (whilecuad3 -> .)
    MOVE            reduce using rule 126 (whilecuad3 -> .)
    CERRAR_LLAVE    reduce using rule 126 (whilecuad3 -> .)
    RETURN          reduce using rule 126 (whilecuad3 -> .)

    whilecuad3                     shift and go to state 246

state 239

    (52) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 . else ifcuad3
    (53) else -> . ELSE block
    (54) else -> .

    ELSE            shift and go to state 247
    IF              reduce using rule 54 (else -> .)
    ID              reduce using rule 54 (else -> .)
    PRINT           reduce using rule 54 (else -> .)
    VAR             reduce using rule 54 (else -> .)
    WHILE           reduce using rule 54 (else -> .)
    DO              reduce using rule 54 (else -> .)
    PENUP           reduce using rule 54 (else -> .)
    PENDOWN         reduce using rule 54 (else -> .)
    ERASE           reduce using rule 54 (else -> .)
    TURNLEFT        reduce using rule 54 (else -> .)
    TURNRIGHT       reduce using rule 54 (else -> .)
    MOVE            reduce using rule 54 (else -> .)
    CERRAR_LLAVE    reduce using rule 54 (else -> .)
    RETURN          reduce using rule 54 (else -> .)

    else                           shift and go to state 248

state 240

    (58) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 249


state 241

    (68) expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 68 (expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .)
    COMA            reduce using rule 68 (expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 68 (expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .)


state 242

    (69) expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 69 (expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .)
    COMA            reduce using rule 69 (expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 69 (expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .)


state 243

    (66) expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 66 (expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .)
    COMA            reduce using rule 66 (expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 66 (expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .)


state 244

    (70) expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 70 (expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .)
    COMA            reduce using rule 70 (expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 70 (expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .)


state 245

    (67) expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 67 (expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .)
    COMA            reduce using rule 67 (expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 67 (expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .)


state 246

    (57) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .

    IF              reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    ID              reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PRINT           reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    VAR             reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    WHILE           reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    DO              reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PENUP           reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PENDOWN         reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    ERASE           reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    TURNLEFT        reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    TURNRIGHT       reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    MOVE            reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    CERRAR_LLAVE    reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    RETURN          reduce using rule 57 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)


state 247

    (53) else -> ELSE . block
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 39

    block                          shift and go to state 250

state 248

    (52) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else . ifcuad3
    (123) ifcuad3 -> .

    IF              reduce using rule 123 (ifcuad3 -> .)
    ID              reduce using rule 123 (ifcuad3 -> .)
    PRINT           reduce using rule 123 (ifcuad3 -> .)
    VAR             reduce using rule 123 (ifcuad3 -> .)
    WHILE           reduce using rule 123 (ifcuad3 -> .)
    DO              reduce using rule 123 (ifcuad3 -> .)
    PENUP           reduce using rule 123 (ifcuad3 -> .)
    PENDOWN         reduce using rule 123 (ifcuad3 -> .)
    ERASE           reduce using rule 123 (ifcuad3 -> .)
    TURNLEFT        reduce using rule 123 (ifcuad3 -> .)
    TURNRIGHT       reduce using rule 123 (ifcuad3 -> .)
    MOVE            reduce using rule 123 (ifcuad3 -> .)
    CERRAR_LLAVE    reduce using rule 123 (ifcuad3 -> .)
    RETURN          reduce using rule 123 (ifcuad3 -> .)

    ifcuad3                        shift and go to state 251

state 249

    (58) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 252


state 250

    (53) else -> ELSE block .

    IF              reduce using rule 53 (else -> ELSE block .)
    ID              reduce using rule 53 (else -> ELSE block .)
    PRINT           reduce using rule 53 (else -> ELSE block .)
    VAR             reduce using rule 53 (else -> ELSE block .)
    WHILE           reduce using rule 53 (else -> ELSE block .)
    DO              reduce using rule 53 (else -> ELSE block .)
    PENUP           reduce using rule 53 (else -> ELSE block .)
    PENDOWN         reduce using rule 53 (else -> ELSE block .)
    ERASE           reduce using rule 53 (else -> ELSE block .)
    TURNLEFT        reduce using rule 53 (else -> ELSE block .)
    TURNRIGHT       reduce using rule 53 (else -> ELSE block .)
    MOVE            reduce using rule 53 (else -> ELSE block .)
    CERRAR_LLAVE    reduce using rule 53 (else -> ELSE block .)
    RETURN          reduce using rule 53 (else -> ELSE block .)


state 251

    (52) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .

    IF              reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    ID              reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PRINT           reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    VAR             reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    WHILE           reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    DO              reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PENUP           reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PENDOWN         reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    ERASE           reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    TURNLEFT        reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    TURNRIGHT       reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    MOVE            reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    RETURN          reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    CERRAR_LLAVE    reduce using rule 52 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)


state 252

    (58) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 58 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 20 resolved as shift
