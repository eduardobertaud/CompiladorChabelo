Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID PUNTO_COMA vars salto_principal body END
Rule 2     salto_principal -> <empty>
Rule 3     vars -> var_body
Rule 4     vars -> <empty>
Rule 5     var_body -> VAR type ID array PUNTO_COMA var_loop
Rule 6     array -> ABRIR_CORCH CTE_I CERRAR_CORCH
Rule 7     array -> <empty>
Rule 8     var_loop -> var_body
Rule 9     var_loop -> <empty>
Rule 10    type -> INT
Rule 11    type -> FLOAT
Rule 12    type -> STRING
Rule 13    type -> BOOL
Rule 14    body -> functions fmain
Rule 15    functions -> FUNC functions2
Rule 16    functions -> <empty>
Rule 17    functions2 -> functions_body functions_params func_block functions_loop
Rule 18    functions2 -> functions_body_void functions_params block ret_void functions_loop
Rule 19    functions2 -> <empty>
Rule 20    ret_void -> <empty>
Rule 21    func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE
Rule 22    functions_body -> type ID
Rule 23    functions_body_void -> VOID ID
Rule 24    return -> RETURN expression PUNTO_COMA
Rule 25    functions_loop -> FUNC functions_aux
Rule 26    functions_loop -> <empty>
Rule 27    functions_aux -> functions_body functions_params func_block functions_loop
Rule 28    functions_aux -> functions_body_void functions_params block functions_loop
Rule 29    functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT
Rule 30    params_aux -> params params_loop
Rule 31    params_aux -> <empty>
Rule 32    params -> type ID
Rule 33    params_loop_aux -> params params_loop
Rule 34    params_loop -> COMA params_loop_aux
Rule 35    params_loop -> <empty>
Rule 36    block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE
Rule 37    fmain -> fmain_aux block
Rule 38    fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT
Rule 39    estatuto_loop -> estatuto estatuto_loop
Rule 40    estatuto_loop -> <empty>
Rule 41    estatuto -> condition
Rule 42    estatuto -> loop
Rule 43    estatuto -> ID estatuto_aux
Rule 44    estatuto -> fprint
Rule 45    estatuto -> special_function
Rule 46    estatuto -> var_body
Rule 47    estatuto_aux -> call
Rule 48    estatuto_aux -> assignment
Rule 49    fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
Rule 50    write_choice -> expression
Rule 51    write_choice -> const_string
Rule 52    const_string -> CTE_S
Rule 53    condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
Rule 54    else -> ELSE block
Rule 55    else -> <empty>
Rule 56    loop -> while
Rule 57    loop -> do_while
Rule 58    while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
Rule 59    do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
Rule 60    assignment -> push_operando IGUAL push_operador expression PUNTO_COMA
Rule 61    expression -> exp exp_aux_pila expression_choice
Rule 62    expression_choice -> expression_choice_aux
Rule 63    expression_choice -> <empty>
Rule 64    expression_choice_aux -> IGUALDAD push_operador exp
Rule 65    expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila
Rule 66    expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila
Rule 67    expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila
Rule 68    expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila
Rule 69    expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila
Rule 70    exp -> term term_aux_pila exp_choice
Rule 71    exp_choice -> exp_aux
Rule 72    exp_choice -> <empty>
Rule 73    exp_aux_pila -> <empty>
Rule 74    exp_aux -> SUMA push_operador exp
Rule 75    exp_aux -> RESTA push_operador exp
Rule 76    term -> factor term_choice
Rule 77    term_choice -> term_aux
Rule 78    term_choice -> <empty>
Rule 79    term_aux_pila -> <empty>
Rule 80    term_aux -> MULTIPLICACION push_operador term
Rule 81    term_aux -> DIVISION push_operador term
Rule 82    factor -> ABRIR_PRNT expression CERRAR_PRNT
Rule 83    factor -> var_cte
Rule 84    var_cte -> const_int
Rule 85    var_cte -> const_float
Rule 86    var_cte -> const_bool
Rule 87    var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH
Rule 88    var_cte -> ID var_decision
Rule 89    var_decision -> var_func
Rule 90    var_decision -> push_operando
Rule 91    const_int -> CTE_I push_operando
Rule 92    const_float -> CTE_F push_operando
Rule 93    const_bool -> TRUE push_operando
Rule 94    const_bool -> FALSE push_operando
Rule 95    call -> var_func PUNTO_COMA
Rule 96    var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT
Rule 97    params_call_aux -> params_call params_call_loop
Rule 98    params_call_aux -> <empty>
Rule 99    params_call -> expression
Rule 100   params_call_loop -> COMA params_call_loop_aux
Rule 101   params_call_loop -> <empty>
Rule 102   params_call_loop_aux -> params_call params_call_loop
Rule 103   special_function -> fpen_up
Rule 104   special_function -> fpen_down
Rule 105   special_function -> ferase
Rule 106   special_function -> fturn_left
Rule 107   special_function -> fturn_right
Rule 108   special_function -> fmove
Rule 109   fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 110   fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 111   ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 112   fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
Rule 113   fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
Rule 114   fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA
Rule 115   direction -> FORWARD
Rule 116   direction -> BACKWARD
Rule 117   push_operando -> <empty>
Rule 118   push_operador -> <empty>
Rule 119   ifcuad1 -> <empty>
Rule 120   ifcuad2 -> <empty>
Rule 121   ifcuad3 -> <empty>
Rule 122   whilecuad1 -> <empty>
Rule 123   whilecuad2 -> <empty>
Rule 124   whilecuad3 -> <empty>
Rule 125   docuad1 -> <empty>
Rule 126   docuad2 -> <empty>

Terminals, with rules where they appear

ABRIR_CORCH          : 6 87
ABRIR_LLAVE          : 21 36
ABRIR_PRNT           : 29 38 49 53 58 59 82 96 109 110 111 112 113 114
BACKWARD             : 116
BOOL                 : 13
CERRAR_CORCH         : 6 87
CERRAR_LLAVE         : 21 36
CERRAR_PRNT          : 29 38 49 53 58 59 82 96 109 110 111 112 113 114
COMA                 : 34 100 114
CTE_F                : 92
CTE_I                : 6 87 91
CTE_S                : 52
DESIGUALDAD          : 65
DIVISION             : 81
DO                   : 59
ELSE                 : 54
END                  : 1
ERASE                : 111
FALSE                : 94
FLOAT                : 11
FORWARD              : 115
FUNC                 : 15 25
ID                   : 1 5 22 23 32 43 88
IF                   : 53
IGUAL                : 60
IGUALDAD             : 64
INT                  : 10
MAIN                 : 38
MAYOR_IGUAL          : 68
MAYOR_QUE            : 66
MENOR_IGUAL          : 69
MENOR_QUE            : 67
MOVE                 : 114
MULTIPLICACION       : 80
PENDOWN              : 110
PENUP                : 109
PRINT                : 49
PROGRAM              : 1
PUNTO_COMA           : 1 5 24 49 59 60 95 109 110 111 112 113 114
RESTA                : 75
RETURN               : 24
STRING               : 12
SUMA                 : 74
TRUE                 : 93
TURNLEFT             : 112
TURNRIGHT            : 113
VAR                  : 5
VOID                 : 23
WHILE                : 58 59
error                : 

Nonterminals, with rules where they appear

array                : 5
assignment           : 48
block                : 18 28 37 53 54 58 59
body                 : 1
call                 : 47
condition            : 41
const_bool           : 86
const_float          : 85
const_int            : 84
const_string         : 51
direction            : 114
do_while             : 57
docuad1              : 59
docuad2              : 59
else                 : 53
estatuto             : 39
estatuto_aux         : 43
estatuto_loop        : 21 36 39
exp                  : 61 64 65 66 67 68 69 74 75
exp_aux              : 71
exp_aux_pila         : 61 65 66 67 68 69
exp_choice           : 70
expression           : 24 50 53 58 59 60 82 99 112 113 114
expression_choice    : 61
expression_choice_aux : 62
factor               : 76
ferase               : 105
fmain                : 14
fmain_aux            : 37
fmove                : 108
fpen_down            : 104
fpen_up              : 103
fprint               : 44
fturn_left           : 106
fturn_right          : 107
func_block           : 17 27
functions            : 14
functions2           : 15
functions_aux        : 25
functions_body       : 17 27
functions_body_void  : 18 28
functions_loop       : 17 18 27 28
functions_params     : 17 18 27 28
ifcuad1              : 53
ifcuad2              : 53
ifcuad3              : 53
loop                 : 42
params               : 30 33
params_aux           : 29
params_call          : 97 102
params_call_aux      : 96
params_call_loop     : 97 102
params_call_loop_aux : 100
params_loop          : 30 33
params_loop_aux      : 34
program              : 0
push_operador        : 60 64 65 66 67 68 69 74 75 80 81
push_operando        : 60 90 91 92 93 94
ret_void             : 18
return               : 21
salto_principal      : 1
special_function     : 45
term                 : 70 80 81
term_aux             : 77
term_aux_pila        : 70
term_choice          : 76
type                 : 5 22 32
var_body             : 3 8 46
var_cte              : 83
var_decision         : 88
var_func             : 89 95
var_loop             : 5
vars                 : 1
while                : 56
whilecuad1           : 58
whilecuad2           : 58
whilecuad3           : 58
write_choice         : 49

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID PUNTO_COMA vars salto_principal body END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID PUNTO_COMA vars salto_principal body END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . PUNTO_COMA vars salto_principal body END

    PUNTO_COMA      shift and go to state 4


state 4

    (1) program -> PROGRAM ID PUNTO_COMA . vars salto_principal body END
    (3) vars -> . var_body
    (4) vars -> .
    (5) var_body -> . VAR type ID array PUNTO_COMA var_loop

    FUNC            reduce using rule 4 (vars -> .)
    MAIN            reduce using rule 4 (vars -> .)
    VAR             shift and go to state 7

    vars                           shift and go to state 5
    var_body                       shift and go to state 6

state 5

    (1) program -> PROGRAM ID PUNTO_COMA vars . salto_principal body END
    (2) salto_principal -> .

    FUNC            reduce using rule 2 (salto_principal -> .)
    MAIN            reduce using rule 2 (salto_principal -> .)

    salto_principal                shift and go to state 8

state 6

    (3) vars -> var_body .

    FUNC            reduce using rule 3 (vars -> var_body .)
    MAIN            reduce using rule 3 (vars -> var_body .)


state 7

    (5) var_body -> VAR . type ID array PUNTO_COMA var_loop
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    INT             shift and go to state 11
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOL            shift and go to state 12

    type                           shift and go to state 13

state 8

    (1) program -> PROGRAM ID PUNTO_COMA vars salto_principal . body END
    (14) body -> . functions fmain
    (15) functions -> . FUNC functions2
    (16) functions -> .

    FUNC            shift and go to state 16
    MAIN            reduce using rule 16 (functions -> .)

    body                           shift and go to state 14
    functions                      shift and go to state 15

state 9

    (11) type -> FLOAT .

    ID              reduce using rule 11 (type -> FLOAT .)


state 10

    (12) type -> STRING .

    ID              reduce using rule 12 (type -> STRING .)


state 11

    (10) type -> INT .

    ID              reduce using rule 10 (type -> INT .)


state 12

    (13) type -> BOOL .

    ID              reduce using rule 13 (type -> BOOL .)


state 13

    (5) var_body -> VAR type . ID array PUNTO_COMA var_loop

    ID              shift and go to state 17


state 14

    (1) program -> PROGRAM ID PUNTO_COMA vars salto_principal body . END

    END             shift and go to state 18


state 15

    (14) body -> functions . fmain
    (37) fmain -> . fmain_aux block
    (38) fmain_aux -> . MAIN ABRIR_PRNT CERRAR_PRNT

    MAIN            shift and go to state 20

    fmain                          shift and go to state 21
    fmain_aux                      shift and go to state 19

state 16

    (15) functions -> FUNC . functions2
    (17) functions2 -> . functions_body functions_params func_block functions_loop
    (18) functions2 -> . functions_body_void functions_params block ret_void functions_loop
    (19) functions2 -> .
    (22) functions_body -> . type ID
    (23) functions_body_void -> . VOID ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    MAIN            reduce using rule 19 (functions2 -> .)
    VOID            shift and go to state 24
    INT             shift and go to state 11
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOL            shift and go to state 12

    functions_body                 shift and go to state 22
    type                           shift and go to state 23
    functions2                     shift and go to state 25
    functions_body_void            shift and go to state 26

state 17

    (5) var_body -> VAR type ID . array PUNTO_COMA var_loop
    (6) array -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (7) array -> .

    ABRIR_CORCH     shift and go to state 27
    PUNTO_COMA      reduce using rule 7 (array -> .)

    array                          shift and go to state 28

state 18

    (1) program -> PROGRAM ID PUNTO_COMA vars salto_principal body END .

    $end            reduce using rule 1 (program -> PROGRAM ID PUNTO_COMA vars salto_principal body END .)


state 19

    (37) fmain -> fmain_aux . block
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 29

    block                          shift and go to state 30

state 20

    (38) fmain_aux -> MAIN . ABRIR_PRNT CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 31


state 21

    (14) body -> functions fmain .

    END             reduce using rule 14 (body -> functions fmain .)


state 22

    (17) functions2 -> functions_body . functions_params func_block functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 33

    functions_params               shift and go to state 32

state 23

    (22) functions_body -> type . ID

    ID              shift and go to state 34


state 24

    (23) functions_body_void -> VOID . ID

    ID              shift and go to state 35


state 25

    (15) functions -> FUNC functions2 .

    MAIN            reduce using rule 15 (functions -> FUNC functions2 .)


state 26

    (18) functions2 -> functions_body_void . functions_params block ret_void functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 33

    functions_params               shift and go to state 36

state 27

    (6) array -> ABRIR_CORCH . CTE_I CERRAR_CORCH

    CTE_I           shift and go to state 37


state 28

    (5) var_body -> VAR type ID array . PUNTO_COMA var_loop

    PUNTO_COMA      shift and go to state 38


state 29

    (36) block -> ABRIR_LLAVE . estatuto_loop CERRAR_LLAVE
    (39) estatuto_loop -> . estatuto estatuto_loop
    (40) estatuto_loop -> .
    (41) estatuto -> . condition
    (42) estatuto -> . loop
    (43) estatuto -> . ID estatuto_aux
    (44) estatuto -> . fprint
    (45) estatuto -> . special_function
    (46) estatuto -> . var_body
    (53) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (56) loop -> . while
    (57) loop -> . do_while
    (49) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (103) special_function -> . fpen_up
    (104) special_function -> . fpen_down
    (105) special_function -> . ferase
    (106) special_function -> . fturn_left
    (107) special_function -> . fturn_right
    (108) special_function -> . fmove
    (5) var_body -> . VAR type ID array PUNTO_COMA var_loop
    (58) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (59) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (109) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (110) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (111) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (112) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (113) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (114) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    CERRAR_LLAVE    reduce using rule 40 (estatuto_loop -> .)
    ID              shift and go to state 57
    IF              shift and go to state 59
    PRINT           shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 42
    DO              shift and go to state 41
    PENUP           shift and go to state 45
    PENDOWN         shift and go to state 47
    ERASE           shift and go to state 62
    TURNLEFT        shift and go to state 53
    TURNRIGHT       shift and go to state 56
    MOVE            shift and go to state 39

    fmove                          shift and go to state 40
    fturn_left                     shift and go to state 61
    estatuto                       shift and go to state 46
    fturn_right                    shift and go to state 49
    condition                      shift and go to state 58
    fpen_up                        shift and go to state 51
    fpen_down                      shift and go to state 52
    do_while                       shift and go to state 64
    special_function               shift and go to state 54
    var_body                       shift and go to state 55
    estatuto_loop                  shift and go to state 48
    ferase                         shift and go to state 50
    fprint                         shift and go to state 60
    while                          shift and go to state 63
    loop                           shift and go to state 43

state 30

    (37) fmain -> fmain_aux block .

    END             reduce using rule 37 (fmain -> fmain_aux block .)


state 31

    (38) fmain_aux -> MAIN ABRIR_PRNT . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 65


state 32

    (17) functions2 -> functions_body functions_params . func_block functions_loop
    (21) func_block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 67

    func_block                     shift and go to state 66

state 33

    (29) functions_params -> ABRIR_PRNT . params_aux CERRAR_PRNT
    (30) params_aux -> . params params_loop
    (31) params_aux -> .
    (32) params -> . type ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    CERRAR_PRNT     reduce using rule 31 (params_aux -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOL            shift and go to state 12

    type                           shift and go to state 70
    params_aux                     shift and go to state 68
    params                         shift and go to state 69

state 34

    (22) functions_body -> type ID .

    ABRIR_PRNT      reduce using rule 22 (functions_body -> type ID .)


state 35

    (23) functions_body_void -> VOID ID .

    ABRIR_PRNT      reduce using rule 23 (functions_body_void -> VOID ID .)


state 36

    (18) functions2 -> functions_body_void functions_params . block ret_void functions_loop
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 29

    block                          shift and go to state 71

state 37

    (6) array -> ABRIR_CORCH CTE_I . CERRAR_CORCH

    CERRAR_CORCH    shift and go to state 72


state 38

    (5) var_body -> VAR type ID array PUNTO_COMA . var_loop
    (8) var_loop -> . var_body
    (9) var_loop -> .
    (5) var_body -> . VAR type ID array PUNTO_COMA var_loop

  ! shift/reduce conflict for VAR resolved as shift
    FUNC            reduce using rule 9 (var_loop -> .)
    MAIN            reduce using rule 9 (var_loop -> .)
    ID              reduce using rule 9 (var_loop -> .)
    IF              reduce using rule 9 (var_loop -> .)
    PRINT           reduce using rule 9 (var_loop -> .)
    WHILE           reduce using rule 9 (var_loop -> .)
    DO              reduce using rule 9 (var_loop -> .)
    PENUP           reduce using rule 9 (var_loop -> .)
    PENDOWN         reduce using rule 9 (var_loop -> .)
    ERASE           reduce using rule 9 (var_loop -> .)
    TURNLEFT        reduce using rule 9 (var_loop -> .)
    TURNRIGHT       reduce using rule 9 (var_loop -> .)
    MOVE            reduce using rule 9 (var_loop -> .)
    CERRAR_LLAVE    reduce using rule 9 (var_loop -> .)
    RETURN          reduce using rule 9 (var_loop -> .)
    VAR             shift and go to state 7

  ! VAR             [ reduce using rule 9 (var_loop -> .) ]

    var_loop                       shift and go to state 73
    var_body                       shift and go to state 74

state 39

    (114) fmove -> MOVE . ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 75


state 40

    (108) special_function -> fmove .

    ID              reduce using rule 108 (special_function -> fmove .)
    IF              reduce using rule 108 (special_function -> fmove .)
    PRINT           reduce using rule 108 (special_function -> fmove .)
    VAR             reduce using rule 108 (special_function -> fmove .)
    WHILE           reduce using rule 108 (special_function -> fmove .)
    DO              reduce using rule 108 (special_function -> fmove .)
    PENUP           reduce using rule 108 (special_function -> fmove .)
    PENDOWN         reduce using rule 108 (special_function -> fmove .)
    ERASE           reduce using rule 108 (special_function -> fmove .)
    TURNLEFT        reduce using rule 108 (special_function -> fmove .)
    TURNRIGHT       reduce using rule 108 (special_function -> fmove .)
    MOVE            reduce using rule 108 (special_function -> fmove .)
    CERRAR_LLAVE    reduce using rule 108 (special_function -> fmove .)
    RETURN          reduce using rule 108 (special_function -> fmove .)


state 41

    (59) do_while -> DO . docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (125) docuad1 -> .

    ABRIR_LLAVE     reduce using rule 125 (docuad1 -> .)

    docuad1                        shift and go to state 76

state 42

    (58) while -> WHILE . ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3

    ABRIR_PRNT      shift and go to state 77


state 43

    (42) estatuto -> loop .

    ID              reduce using rule 42 (estatuto -> loop .)
    IF              reduce using rule 42 (estatuto -> loop .)
    PRINT           reduce using rule 42 (estatuto -> loop .)
    VAR             reduce using rule 42 (estatuto -> loop .)
    WHILE           reduce using rule 42 (estatuto -> loop .)
    DO              reduce using rule 42 (estatuto -> loop .)
    PENUP           reduce using rule 42 (estatuto -> loop .)
    PENDOWN         reduce using rule 42 (estatuto -> loop .)
    ERASE           reduce using rule 42 (estatuto -> loop .)
    TURNLEFT        reduce using rule 42 (estatuto -> loop .)
    TURNRIGHT       reduce using rule 42 (estatuto -> loop .)
    MOVE            reduce using rule 42 (estatuto -> loop .)
    RETURN          reduce using rule 42 (estatuto -> loop .)
    CERRAR_LLAVE    reduce using rule 42 (estatuto -> loop .)


state 44

    (49) fprint -> PRINT . ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 78


state 45

    (109) fpen_up -> PENUP . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 79


state 46

    (39) estatuto_loop -> estatuto . estatuto_loop
    (39) estatuto_loop -> . estatuto estatuto_loop
    (40) estatuto_loop -> .
    (41) estatuto -> . condition
    (42) estatuto -> . loop
    (43) estatuto -> . ID estatuto_aux
    (44) estatuto -> . fprint
    (45) estatuto -> . special_function
    (46) estatuto -> . var_body
    (53) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (56) loop -> . while
    (57) loop -> . do_while
    (49) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (103) special_function -> . fpen_up
    (104) special_function -> . fpen_down
    (105) special_function -> . ferase
    (106) special_function -> . fturn_left
    (107) special_function -> . fturn_right
    (108) special_function -> . fmove
    (5) var_body -> . VAR type ID array PUNTO_COMA var_loop
    (58) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (59) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (109) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (110) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (111) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (112) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (113) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (114) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    CERRAR_LLAVE    reduce using rule 40 (estatuto_loop -> .)
    RETURN          reduce using rule 40 (estatuto_loop -> .)
    ID              shift and go to state 57
    IF              shift and go to state 59
    PRINT           shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 42
    DO              shift and go to state 41
    PENUP           shift and go to state 45
    PENDOWN         shift and go to state 47
    ERASE           shift and go to state 62
    TURNLEFT        shift and go to state 53
    TURNRIGHT       shift and go to state 56
    MOVE            shift and go to state 39

    fmove                          shift and go to state 40
    fturn_left                     shift and go to state 61
    estatuto                       shift and go to state 46
    fturn_right                    shift and go to state 49
    condition                      shift and go to state 58
    fpen_up                        shift and go to state 51
    fpen_down                      shift and go to state 52
    do_while                       shift and go to state 64
    special_function               shift and go to state 54
    var_body                       shift and go to state 55
    estatuto_loop                  shift and go to state 80
    ferase                         shift and go to state 50
    fprint                         shift and go to state 60
    while                          shift and go to state 63
    loop                           shift and go to state 43

state 47

    (110) fpen_down -> PENDOWN . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 81


state 48

    (36) block -> ABRIR_LLAVE estatuto_loop . CERRAR_LLAVE

    CERRAR_LLAVE    shift and go to state 82


state 49

    (107) special_function -> fturn_right .

    ID              reduce using rule 107 (special_function -> fturn_right .)
    IF              reduce using rule 107 (special_function -> fturn_right .)
    PRINT           reduce using rule 107 (special_function -> fturn_right .)
    VAR             reduce using rule 107 (special_function -> fturn_right .)
    WHILE           reduce using rule 107 (special_function -> fturn_right .)
    DO              reduce using rule 107 (special_function -> fturn_right .)
    PENUP           reduce using rule 107 (special_function -> fturn_right .)
    PENDOWN         reduce using rule 107 (special_function -> fturn_right .)
    ERASE           reduce using rule 107 (special_function -> fturn_right .)
    TURNLEFT        reduce using rule 107 (special_function -> fturn_right .)
    TURNRIGHT       reduce using rule 107 (special_function -> fturn_right .)
    MOVE            reduce using rule 107 (special_function -> fturn_right .)
    CERRAR_LLAVE    reduce using rule 107 (special_function -> fturn_right .)
    RETURN          reduce using rule 107 (special_function -> fturn_right .)


state 50

    (105) special_function -> ferase .

    ID              reduce using rule 105 (special_function -> ferase .)
    IF              reduce using rule 105 (special_function -> ferase .)
    PRINT           reduce using rule 105 (special_function -> ferase .)
    VAR             reduce using rule 105 (special_function -> ferase .)
    WHILE           reduce using rule 105 (special_function -> ferase .)
    DO              reduce using rule 105 (special_function -> ferase .)
    PENUP           reduce using rule 105 (special_function -> ferase .)
    PENDOWN         reduce using rule 105 (special_function -> ferase .)
    ERASE           reduce using rule 105 (special_function -> ferase .)
    TURNLEFT        reduce using rule 105 (special_function -> ferase .)
    TURNRIGHT       reduce using rule 105 (special_function -> ferase .)
    MOVE            reduce using rule 105 (special_function -> ferase .)
    CERRAR_LLAVE    reduce using rule 105 (special_function -> ferase .)
    RETURN          reduce using rule 105 (special_function -> ferase .)


state 51

    (103) special_function -> fpen_up .

    ID              reduce using rule 103 (special_function -> fpen_up .)
    IF              reduce using rule 103 (special_function -> fpen_up .)
    PRINT           reduce using rule 103 (special_function -> fpen_up .)
    VAR             reduce using rule 103 (special_function -> fpen_up .)
    WHILE           reduce using rule 103 (special_function -> fpen_up .)
    DO              reduce using rule 103 (special_function -> fpen_up .)
    PENUP           reduce using rule 103 (special_function -> fpen_up .)
    PENDOWN         reduce using rule 103 (special_function -> fpen_up .)
    ERASE           reduce using rule 103 (special_function -> fpen_up .)
    TURNLEFT        reduce using rule 103 (special_function -> fpen_up .)
    TURNRIGHT       reduce using rule 103 (special_function -> fpen_up .)
    MOVE            reduce using rule 103 (special_function -> fpen_up .)
    CERRAR_LLAVE    reduce using rule 103 (special_function -> fpen_up .)
    RETURN          reduce using rule 103 (special_function -> fpen_up .)


state 52

    (104) special_function -> fpen_down .

    ID              reduce using rule 104 (special_function -> fpen_down .)
    IF              reduce using rule 104 (special_function -> fpen_down .)
    PRINT           reduce using rule 104 (special_function -> fpen_down .)
    VAR             reduce using rule 104 (special_function -> fpen_down .)
    WHILE           reduce using rule 104 (special_function -> fpen_down .)
    DO              reduce using rule 104 (special_function -> fpen_down .)
    PENUP           reduce using rule 104 (special_function -> fpen_down .)
    PENDOWN         reduce using rule 104 (special_function -> fpen_down .)
    ERASE           reduce using rule 104 (special_function -> fpen_down .)
    TURNLEFT        reduce using rule 104 (special_function -> fpen_down .)
    TURNRIGHT       reduce using rule 104 (special_function -> fpen_down .)
    MOVE            reduce using rule 104 (special_function -> fpen_down .)
    CERRAR_LLAVE    reduce using rule 104 (special_function -> fpen_down .)
    RETURN          reduce using rule 104 (special_function -> fpen_down .)


state 53

    (112) fturn_left -> TURNLEFT . ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 83


state 54

    (45) estatuto -> special_function .

    ID              reduce using rule 45 (estatuto -> special_function .)
    IF              reduce using rule 45 (estatuto -> special_function .)
    PRINT           reduce using rule 45 (estatuto -> special_function .)
    VAR             reduce using rule 45 (estatuto -> special_function .)
    WHILE           reduce using rule 45 (estatuto -> special_function .)
    DO              reduce using rule 45 (estatuto -> special_function .)
    PENUP           reduce using rule 45 (estatuto -> special_function .)
    PENDOWN         reduce using rule 45 (estatuto -> special_function .)
    ERASE           reduce using rule 45 (estatuto -> special_function .)
    TURNLEFT        reduce using rule 45 (estatuto -> special_function .)
    TURNRIGHT       reduce using rule 45 (estatuto -> special_function .)
    MOVE            reduce using rule 45 (estatuto -> special_function .)
    RETURN          reduce using rule 45 (estatuto -> special_function .)
    CERRAR_LLAVE    reduce using rule 45 (estatuto -> special_function .)


state 55

    (46) estatuto -> var_body .

    ID              reduce using rule 46 (estatuto -> var_body .)
    IF              reduce using rule 46 (estatuto -> var_body .)
    PRINT           reduce using rule 46 (estatuto -> var_body .)
    VAR             reduce using rule 46 (estatuto -> var_body .)
    WHILE           reduce using rule 46 (estatuto -> var_body .)
    DO              reduce using rule 46 (estatuto -> var_body .)
    PENUP           reduce using rule 46 (estatuto -> var_body .)
    PENDOWN         reduce using rule 46 (estatuto -> var_body .)
    ERASE           reduce using rule 46 (estatuto -> var_body .)
    TURNLEFT        reduce using rule 46 (estatuto -> var_body .)
    TURNRIGHT       reduce using rule 46 (estatuto -> var_body .)
    MOVE            reduce using rule 46 (estatuto -> var_body .)
    RETURN          reduce using rule 46 (estatuto -> var_body .)
    CERRAR_LLAVE    reduce using rule 46 (estatuto -> var_body .)


state 56

    (113) fturn_right -> TURNRIGHT . ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 84


state 57

    (43) estatuto -> ID . estatuto_aux
    (47) estatuto_aux -> . call
    (48) estatuto_aux -> . assignment
    (95) call -> . var_func PUNTO_COMA
    (60) assignment -> . push_operando IGUAL push_operador expression PUNTO_COMA
    (96) var_func -> . ABRIR_PRNT params_call_aux CERRAR_PRNT
    (117) push_operando -> .

    ABRIR_PRNT      shift and go to state 89
    IGUAL           reduce using rule 117 (push_operando -> .)

    estatuto_aux                   shift and go to state 85
    push_operando                  shift and go to state 86
    assignment                     shift and go to state 87
    call                           shift and go to state 88
    var_func                       shift and go to state 90

state 58

    (41) estatuto -> condition .

    ID              reduce using rule 41 (estatuto -> condition .)
    IF              reduce using rule 41 (estatuto -> condition .)
    PRINT           reduce using rule 41 (estatuto -> condition .)
    VAR             reduce using rule 41 (estatuto -> condition .)
    WHILE           reduce using rule 41 (estatuto -> condition .)
    DO              reduce using rule 41 (estatuto -> condition .)
    PENUP           reduce using rule 41 (estatuto -> condition .)
    PENDOWN         reduce using rule 41 (estatuto -> condition .)
    ERASE           reduce using rule 41 (estatuto -> condition .)
    TURNLEFT        reduce using rule 41 (estatuto -> condition .)
    TURNRIGHT       reduce using rule 41 (estatuto -> condition .)
    MOVE            reduce using rule 41 (estatuto -> condition .)
    RETURN          reduce using rule 41 (estatuto -> condition .)
    CERRAR_LLAVE    reduce using rule 41 (estatuto -> condition .)


state 59

    (53) condition -> IF . ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3

    ABRIR_PRNT      shift and go to state 91


state 60

    (44) estatuto -> fprint .

    ID              reduce using rule 44 (estatuto -> fprint .)
    IF              reduce using rule 44 (estatuto -> fprint .)
    PRINT           reduce using rule 44 (estatuto -> fprint .)
    VAR             reduce using rule 44 (estatuto -> fprint .)
    WHILE           reduce using rule 44 (estatuto -> fprint .)
    DO              reduce using rule 44 (estatuto -> fprint .)
    PENUP           reduce using rule 44 (estatuto -> fprint .)
    PENDOWN         reduce using rule 44 (estatuto -> fprint .)
    ERASE           reduce using rule 44 (estatuto -> fprint .)
    TURNLEFT        reduce using rule 44 (estatuto -> fprint .)
    TURNRIGHT       reduce using rule 44 (estatuto -> fprint .)
    MOVE            reduce using rule 44 (estatuto -> fprint .)
    RETURN          reduce using rule 44 (estatuto -> fprint .)
    CERRAR_LLAVE    reduce using rule 44 (estatuto -> fprint .)


state 61

    (106) special_function -> fturn_left .

    ID              reduce using rule 106 (special_function -> fturn_left .)
    IF              reduce using rule 106 (special_function -> fturn_left .)
    PRINT           reduce using rule 106 (special_function -> fturn_left .)
    VAR             reduce using rule 106 (special_function -> fturn_left .)
    WHILE           reduce using rule 106 (special_function -> fturn_left .)
    DO              reduce using rule 106 (special_function -> fturn_left .)
    PENUP           reduce using rule 106 (special_function -> fturn_left .)
    PENDOWN         reduce using rule 106 (special_function -> fturn_left .)
    ERASE           reduce using rule 106 (special_function -> fturn_left .)
    TURNLEFT        reduce using rule 106 (special_function -> fturn_left .)
    TURNRIGHT       reduce using rule 106 (special_function -> fturn_left .)
    MOVE            reduce using rule 106 (special_function -> fturn_left .)
    CERRAR_LLAVE    reduce using rule 106 (special_function -> fturn_left .)
    RETURN          reduce using rule 106 (special_function -> fturn_left .)


state 62

    (111) ferase -> ERASE . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 92


state 63

    (56) loop -> while .

    ID              reduce using rule 56 (loop -> while .)
    IF              reduce using rule 56 (loop -> while .)
    PRINT           reduce using rule 56 (loop -> while .)
    VAR             reduce using rule 56 (loop -> while .)
    WHILE           reduce using rule 56 (loop -> while .)
    DO              reduce using rule 56 (loop -> while .)
    PENUP           reduce using rule 56 (loop -> while .)
    PENDOWN         reduce using rule 56 (loop -> while .)
    ERASE           reduce using rule 56 (loop -> while .)
    TURNLEFT        reduce using rule 56 (loop -> while .)
    TURNRIGHT       reduce using rule 56 (loop -> while .)
    MOVE            reduce using rule 56 (loop -> while .)
    RETURN          reduce using rule 56 (loop -> while .)
    CERRAR_LLAVE    reduce using rule 56 (loop -> while .)


state 64

    (57) loop -> do_while .

    ID              reduce using rule 57 (loop -> do_while .)
    IF              reduce using rule 57 (loop -> do_while .)
    PRINT           reduce using rule 57 (loop -> do_while .)
    VAR             reduce using rule 57 (loop -> do_while .)
    WHILE           reduce using rule 57 (loop -> do_while .)
    DO              reduce using rule 57 (loop -> do_while .)
    PENUP           reduce using rule 57 (loop -> do_while .)
    PENDOWN         reduce using rule 57 (loop -> do_while .)
    ERASE           reduce using rule 57 (loop -> do_while .)
    TURNLEFT        reduce using rule 57 (loop -> do_while .)
    TURNRIGHT       reduce using rule 57 (loop -> do_while .)
    MOVE            reduce using rule 57 (loop -> do_while .)
    RETURN          reduce using rule 57 (loop -> do_while .)
    CERRAR_LLAVE    reduce using rule 57 (loop -> do_while .)


state 65

    (38) fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT .

    ABRIR_LLAVE     reduce using rule 38 (fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT .)


state 66

    (17) functions2 -> functions_body functions_params func_block . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 94
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 93

state 67

    (21) func_block -> ABRIR_LLAVE . estatuto_loop return CERRAR_LLAVE
    (39) estatuto_loop -> . estatuto estatuto_loop
    (40) estatuto_loop -> .
    (41) estatuto -> . condition
    (42) estatuto -> . loop
    (43) estatuto -> . ID estatuto_aux
    (44) estatuto -> . fprint
    (45) estatuto -> . special_function
    (46) estatuto -> . var_body
    (53) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (56) loop -> . while
    (57) loop -> . do_while
    (49) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (103) special_function -> . fpen_up
    (104) special_function -> . fpen_down
    (105) special_function -> . ferase
    (106) special_function -> . fturn_left
    (107) special_function -> . fturn_right
    (108) special_function -> . fmove
    (5) var_body -> . VAR type ID array PUNTO_COMA var_loop
    (58) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (59) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (109) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (110) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (111) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (112) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (113) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (114) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    RETURN          reduce using rule 40 (estatuto_loop -> .)
    ID              shift and go to state 57
    IF              shift and go to state 59
    PRINT           shift and go to state 44
    VAR             shift and go to state 7
    WHILE           shift and go to state 42
    DO              shift and go to state 41
    PENUP           shift and go to state 45
    PENDOWN         shift and go to state 47
    ERASE           shift and go to state 62
    TURNLEFT        shift and go to state 53
    TURNRIGHT       shift and go to state 56
    MOVE            shift and go to state 39

    fmove                          shift and go to state 40
    fturn_left                     shift and go to state 61
    estatuto                       shift and go to state 46
    fturn_right                    shift and go to state 49
    condition                      shift and go to state 58
    fpen_up                        shift and go to state 51
    fpen_down                      shift and go to state 52
    do_while                       shift and go to state 64
    special_function               shift and go to state 54
    var_body                       shift and go to state 55
    estatuto_loop                  shift and go to state 95
    ferase                         shift and go to state 50
    fprint                         shift and go to state 60
    while                          shift and go to state 63
    loop                           shift and go to state 43

state 68

    (29) functions_params -> ABRIR_PRNT params_aux . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 96


state 69

    (30) params_aux -> params . params_loop
    (34) params_loop -> . COMA params_loop_aux
    (35) params_loop -> .

    COMA            shift and go to state 98
    CERRAR_PRNT     reduce using rule 35 (params_loop -> .)

    params_loop                    shift and go to state 97

state 70

    (32) params -> type . ID

    ID              shift and go to state 99


state 71

    (18) functions2 -> functions_body_void functions_params block . ret_void functions_loop
    (20) ret_void -> .

    FUNC            reduce using rule 20 (ret_void -> .)
    MAIN            reduce using rule 20 (ret_void -> .)

    ret_void                       shift and go to state 100

state 72

    (6) array -> ABRIR_CORCH CTE_I CERRAR_CORCH .

    PUNTO_COMA      reduce using rule 6 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH .)


state 73

    (5) var_body -> VAR type ID array PUNTO_COMA var_loop .

    ID              reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    IF              reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    PRINT           reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    VAR             reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    WHILE           reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    DO              reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    PENUP           reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    PENDOWN         reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    ERASE           reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    TURNLEFT        reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    TURNRIGHT       reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    MOVE            reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    CERRAR_LLAVE    reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    FUNC            reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    MAIN            reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    RETURN          reduce using rule 5 (var_body -> VAR type ID array PUNTO_COMA var_loop .)


state 74

    (8) var_loop -> var_body .

    FUNC            reduce using rule 8 (var_loop -> var_body .)
    MAIN            reduce using rule 8 (var_loop -> var_body .)
    ID              reduce using rule 8 (var_loop -> var_body .)
    IF              reduce using rule 8 (var_loop -> var_body .)
    PRINT           reduce using rule 8 (var_loop -> var_body .)
    VAR             reduce using rule 8 (var_loop -> var_body .)
    WHILE           reduce using rule 8 (var_loop -> var_body .)
    DO              reduce using rule 8 (var_loop -> var_body .)
    PENUP           reduce using rule 8 (var_loop -> var_body .)
    PENDOWN         reduce using rule 8 (var_loop -> var_body .)
    ERASE           reduce using rule 8 (var_loop -> var_body .)
    TURNLEFT        reduce using rule 8 (var_loop -> var_body .)
    TURNRIGHT       reduce using rule 8 (var_loop -> var_body .)
    MOVE            reduce using rule 8 (var_loop -> var_body .)
    CERRAR_LLAVE    reduce using rule 8 (var_loop -> var_body .)
    RETURN          reduce using rule 8 (var_loop -> var_body .)


state 75

    (114) fmove -> MOVE ABRIR_PRNT . direction COMA expression CERRAR_PRNT PUNTO_COMA
    (115) direction -> . FORWARD
    (116) direction -> . BACKWARD

    FORWARD         shift and go to state 102
    BACKWARD        shift and go to state 103

    direction                      shift and go to state 101

state 76

    (59) do_while -> DO docuad1 . block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 29

    block                          shift and go to state 104

state 77

    (58) while -> WHILE ABRIR_PRNT . whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (122) whilecuad1 -> .

    ABRIR_PRNT      reduce using rule 122 (whilecuad1 -> .)
    ABRIR_CORCH     reduce using rule 122 (whilecuad1 -> .)
    ID              reduce using rule 122 (whilecuad1 -> .)
    CTE_I           reduce using rule 122 (whilecuad1 -> .)
    CTE_F           reduce using rule 122 (whilecuad1 -> .)
    TRUE            reduce using rule 122 (whilecuad1 -> .)
    FALSE           reduce using rule 122 (whilecuad1 -> .)

    whilecuad1                     shift and go to state 105

state 78

    (49) fprint -> PRINT ABRIR_PRNT . write_choice CERRAR_PRNT PUNTO_COMA
    (50) write_choice -> . expression
    (51) write_choice -> . const_string
    (61) expression -> . exp exp_aux_pila expression_choice
    (52) const_string -> . CTE_S
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    CTE_S           shift and go to state 111
    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    write_choice                   shift and go to state 115
    const_int                      shift and go to state 117
    const_string                   shift and go to state 116
    var_cte                        shift and go to state 106
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 123
    const_bool                     shift and go to state 110

state 79

    (109) fpen_up -> PENUP ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 124


state 80

    (39) estatuto_loop -> estatuto estatuto_loop .

    RETURN          reduce using rule 39 (estatuto_loop -> estatuto estatuto_loop .)
    CERRAR_LLAVE    reduce using rule 39 (estatuto_loop -> estatuto estatuto_loop .)


state 81

    (110) fpen_down -> PENDOWN ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 125


state 82

    (36) block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .

    WHILE           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    FUNC            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    MAIN            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    ELSE            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    ID              reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    IF              reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    PRINT           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    VAR             reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    DO              reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    PENUP           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    PENDOWN         reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    ERASE           reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    TURNLEFT        reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    TURNRIGHT       reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    MOVE            reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    CERRAR_LLAVE    reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    RETURN          reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)
    END             reduce using rule 36 (block -> ABRIR_LLAVE estatuto_loop CERRAR_LLAVE .)


state 83

    (112) fturn_left -> TURNLEFT ABRIR_PRNT . expression CERRAR_PRNT PUNTO_COMA
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 126
    const_bool                     shift and go to state 110

state 84

    (113) fturn_right -> TURNRIGHT ABRIR_PRNT . expression CERRAR_PRNT PUNTO_COMA
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 127
    const_bool                     shift and go to state 110

state 85

    (43) estatuto -> ID estatuto_aux .

    ID              reduce using rule 43 (estatuto -> ID estatuto_aux .)
    IF              reduce using rule 43 (estatuto -> ID estatuto_aux .)
    PRINT           reduce using rule 43 (estatuto -> ID estatuto_aux .)
    VAR             reduce using rule 43 (estatuto -> ID estatuto_aux .)
    WHILE           reduce using rule 43 (estatuto -> ID estatuto_aux .)
    DO              reduce using rule 43 (estatuto -> ID estatuto_aux .)
    PENUP           reduce using rule 43 (estatuto -> ID estatuto_aux .)
    PENDOWN         reduce using rule 43 (estatuto -> ID estatuto_aux .)
    ERASE           reduce using rule 43 (estatuto -> ID estatuto_aux .)
    TURNLEFT        reduce using rule 43 (estatuto -> ID estatuto_aux .)
    TURNRIGHT       reduce using rule 43 (estatuto -> ID estatuto_aux .)
    MOVE            reduce using rule 43 (estatuto -> ID estatuto_aux .)
    RETURN          reduce using rule 43 (estatuto -> ID estatuto_aux .)
    CERRAR_LLAVE    reduce using rule 43 (estatuto -> ID estatuto_aux .)


state 86

    (60) assignment -> push_operando . IGUAL push_operador expression PUNTO_COMA

    IGUAL           shift and go to state 128


state 87

    (48) estatuto_aux -> assignment .

    ID              reduce using rule 48 (estatuto_aux -> assignment .)
    IF              reduce using rule 48 (estatuto_aux -> assignment .)
    PRINT           reduce using rule 48 (estatuto_aux -> assignment .)
    VAR             reduce using rule 48 (estatuto_aux -> assignment .)
    WHILE           reduce using rule 48 (estatuto_aux -> assignment .)
    DO              reduce using rule 48 (estatuto_aux -> assignment .)
    PENUP           reduce using rule 48 (estatuto_aux -> assignment .)
    PENDOWN         reduce using rule 48 (estatuto_aux -> assignment .)
    ERASE           reduce using rule 48 (estatuto_aux -> assignment .)
    TURNLEFT        reduce using rule 48 (estatuto_aux -> assignment .)
    TURNRIGHT       reduce using rule 48 (estatuto_aux -> assignment .)
    MOVE            reduce using rule 48 (estatuto_aux -> assignment .)
    CERRAR_LLAVE    reduce using rule 48 (estatuto_aux -> assignment .)
    RETURN          reduce using rule 48 (estatuto_aux -> assignment .)


state 88

    (47) estatuto_aux -> call .

    ID              reduce using rule 47 (estatuto_aux -> call .)
    IF              reduce using rule 47 (estatuto_aux -> call .)
    PRINT           reduce using rule 47 (estatuto_aux -> call .)
    VAR             reduce using rule 47 (estatuto_aux -> call .)
    WHILE           reduce using rule 47 (estatuto_aux -> call .)
    DO              reduce using rule 47 (estatuto_aux -> call .)
    PENUP           reduce using rule 47 (estatuto_aux -> call .)
    PENDOWN         reduce using rule 47 (estatuto_aux -> call .)
    ERASE           reduce using rule 47 (estatuto_aux -> call .)
    TURNLEFT        reduce using rule 47 (estatuto_aux -> call .)
    TURNRIGHT       reduce using rule 47 (estatuto_aux -> call .)
    MOVE            reduce using rule 47 (estatuto_aux -> call .)
    CERRAR_LLAVE    reduce using rule 47 (estatuto_aux -> call .)
    RETURN          reduce using rule 47 (estatuto_aux -> call .)


state 89

    (96) var_func -> ABRIR_PRNT . params_call_aux CERRAR_PRNT
    (97) params_call_aux -> . params_call params_call_loop
    (98) params_call_aux -> .
    (99) params_call -> . expression
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    CERRAR_PRNT     reduce using rule 98 (params_call_aux -> .)
    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    params_call_aux                shift and go to state 130
    params_call                    shift and go to state 129
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    term                           shift and go to state 119
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 131
    const_bool                     shift and go to state 110

state 90

    (95) call -> var_func . PUNTO_COMA

    PUNTO_COMA      shift and go to state 132


state 91

    (53) condition -> IF ABRIR_PRNT . expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    const_bool                     shift and go to state 110
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    var_cte                        shift and go to state 106
    expression                     shift and go to state 133

state 92

    (111) ferase -> ERASE ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 134


state 93

    (17) functions2 -> functions_body functions_params func_block functions_loop .

    MAIN            reduce using rule 17 (functions2 -> functions_body functions_params func_block functions_loop .)


state 94

    (25) functions_loop -> FUNC . functions_aux
    (27) functions_aux -> . functions_body functions_params func_block functions_loop
    (28) functions_aux -> . functions_body_void functions_params block functions_loop
    (22) functions_body -> . type ID
    (23) functions_body_void -> . VOID ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    VOID            shift and go to state 24
    INT             shift and go to state 11
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOL            shift and go to state 12

    functions_body                 shift and go to state 135
    type                           shift and go to state 23
    functions_aux                  shift and go to state 136
    functions_body_void            shift and go to state 137

state 95

    (21) func_block -> ABRIR_LLAVE estatuto_loop . return CERRAR_LLAVE
    (24) return -> . RETURN expression PUNTO_COMA

    RETURN          shift and go to state 139

    return                         shift and go to state 138

state 96

    (29) functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT .

    ABRIR_LLAVE     reduce using rule 29 (functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT .)


state 97

    (30) params_aux -> params params_loop .

    CERRAR_PRNT     reduce using rule 30 (params_aux -> params params_loop .)


state 98

    (34) params_loop -> COMA . params_loop_aux
    (33) params_loop_aux -> . params params_loop
    (32) params -> . type ID
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . STRING
    (13) type -> . BOOL

    INT             shift and go to state 11
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOL            shift and go to state 12

    type                           shift and go to state 70
    params_loop_aux                shift and go to state 140
    params                         shift and go to state 141

state 99

    (32) params -> type ID .

    COMA            reduce using rule 32 (params -> type ID .)
    CERRAR_PRNT     reduce using rule 32 (params -> type ID .)


state 100

    (18) functions2 -> functions_body_void functions_params block ret_void . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 94
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 142

state 101

    (114) fmove -> MOVE ABRIR_PRNT direction . COMA expression CERRAR_PRNT PUNTO_COMA

    COMA            shift and go to state 143


state 102

    (115) direction -> FORWARD .

    COMA            reduce using rule 115 (direction -> FORWARD .)


state 103

    (116) direction -> BACKWARD .

    COMA            reduce using rule 116 (direction -> BACKWARD .)


state 104

    (59) do_while -> DO docuad1 block . WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA

    WHILE           shift and go to state 144


state 105

    (58) while -> WHILE ABRIR_PRNT whilecuad1 . expression whilecuad2 CERRAR_PRNT block whilecuad3
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 145

state 106

    (83) factor -> var_cte .

    MULTIPLICACION  reduce using rule 83 (factor -> var_cte .)
    DIVISION        reduce using rule 83 (factor -> var_cte .)
    SUMA            reduce using rule 83 (factor -> var_cte .)
    RESTA           reduce using rule 83 (factor -> var_cte .)
    IGUALDAD        reduce using rule 83 (factor -> var_cte .)
    DESIGUALDAD     reduce using rule 83 (factor -> var_cte .)
    MAYOR_QUE       reduce using rule 83 (factor -> var_cte .)
    MENOR_QUE       reduce using rule 83 (factor -> var_cte .)
    MAYOR_IGUAL     reduce using rule 83 (factor -> var_cte .)
    MENOR_IGUAL     reduce using rule 83 (factor -> var_cte .)
    CERRAR_PRNT     reduce using rule 83 (factor -> var_cte .)
    PUNTO_COMA      reduce using rule 83 (factor -> var_cte .)
    COMA            reduce using rule 83 (factor -> var_cte .)


state 107

    (82) factor -> ABRIR_PRNT . expression CERRAR_PRNT
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 146
    const_bool                     shift and go to state 110

state 108

    (76) term -> factor . term_choice
    (77) term_choice -> . term_aux
    (78) term_choice -> .
    (80) term_aux -> . MULTIPLICACION push_operador term
    (81) term_aux -> . DIVISION push_operador term

    SUMA            reduce using rule 78 (term_choice -> .)
    RESTA           reduce using rule 78 (term_choice -> .)
    IGUALDAD        reduce using rule 78 (term_choice -> .)
    DESIGUALDAD     reduce using rule 78 (term_choice -> .)
    MAYOR_QUE       reduce using rule 78 (term_choice -> .)
    MENOR_QUE       reduce using rule 78 (term_choice -> .)
    MAYOR_IGUAL     reduce using rule 78 (term_choice -> .)
    MENOR_IGUAL     reduce using rule 78 (term_choice -> .)
    CERRAR_PRNT     reduce using rule 78 (term_choice -> .)
    COMA            reduce using rule 78 (term_choice -> .)
    PUNTO_COMA      reduce using rule 78 (term_choice -> .)
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 147

    term_choice                    shift and go to state 149
    term_aux                       shift and go to state 148

state 109

    (93) const_bool -> TRUE . push_operando
    (117) push_operando -> .

    MULTIPLICACION  reduce using rule 117 (push_operando -> .)
    DIVISION        reduce using rule 117 (push_operando -> .)
    SUMA            reduce using rule 117 (push_operando -> .)
    RESTA           reduce using rule 117 (push_operando -> .)
    IGUALDAD        reduce using rule 117 (push_operando -> .)
    DESIGUALDAD     reduce using rule 117 (push_operando -> .)
    MAYOR_QUE       reduce using rule 117 (push_operando -> .)
    MENOR_QUE       reduce using rule 117 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 117 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 117 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 117 (push_operando -> .)
    COMA            reduce using rule 117 (push_operando -> .)
    PUNTO_COMA      reduce using rule 117 (push_operando -> .)

    push_operando                  shift and go to state 151

state 110

    (86) var_cte -> const_bool .

    MULTIPLICACION  reduce using rule 86 (var_cte -> const_bool .)
    DIVISION        reduce using rule 86 (var_cte -> const_bool .)
    SUMA            reduce using rule 86 (var_cte -> const_bool .)
    RESTA           reduce using rule 86 (var_cte -> const_bool .)
    CERRAR_PRNT     reduce using rule 86 (var_cte -> const_bool .)
    COMA            reduce using rule 86 (var_cte -> const_bool .)
    PUNTO_COMA      reduce using rule 86 (var_cte -> const_bool .)
    IGUALDAD        reduce using rule 86 (var_cte -> const_bool .)
    DESIGUALDAD     reduce using rule 86 (var_cte -> const_bool .)
    MAYOR_QUE       reduce using rule 86 (var_cte -> const_bool .)
    MENOR_QUE       reduce using rule 86 (var_cte -> const_bool .)
    MAYOR_IGUAL     reduce using rule 86 (var_cte -> const_bool .)
    MENOR_IGUAL     reduce using rule 86 (var_cte -> const_bool .)


state 111

    (52) const_string -> CTE_S .

    CERRAR_PRNT     reduce using rule 52 (const_string -> CTE_S .)


state 112

    (91) const_int -> CTE_I . push_operando
    (117) push_operando -> .

    MULTIPLICACION  reduce using rule 117 (push_operando -> .)
    DIVISION        reduce using rule 117 (push_operando -> .)
    SUMA            reduce using rule 117 (push_operando -> .)
    RESTA           reduce using rule 117 (push_operando -> .)
    IGUALDAD        reduce using rule 117 (push_operando -> .)
    DESIGUALDAD     reduce using rule 117 (push_operando -> .)
    MAYOR_QUE       reduce using rule 117 (push_operando -> .)
    MENOR_QUE       reduce using rule 117 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 117 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 117 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 117 (push_operando -> .)
    COMA            reduce using rule 117 (push_operando -> .)
    PUNTO_COMA      reduce using rule 117 (push_operando -> .)

    push_operando                  shift and go to state 152

state 113

    (92) const_float -> CTE_F . push_operando
    (117) push_operando -> .

    MULTIPLICACION  reduce using rule 117 (push_operando -> .)
    DIVISION        reduce using rule 117 (push_operando -> .)
    SUMA            reduce using rule 117 (push_operando -> .)
    RESTA           reduce using rule 117 (push_operando -> .)
    IGUALDAD        reduce using rule 117 (push_operando -> .)
    DESIGUALDAD     reduce using rule 117 (push_operando -> .)
    MAYOR_QUE       reduce using rule 117 (push_operando -> .)
    MENOR_QUE       reduce using rule 117 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 117 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 117 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 117 (push_operando -> .)
    COMA            reduce using rule 117 (push_operando -> .)
    PUNTO_COMA      reduce using rule 117 (push_operando -> .)

    push_operando                  shift and go to state 153

state 114

    (87) var_cte -> ABRIR_CORCH . CTE_I CERRAR_CORCH

    CTE_I           shift and go to state 154


state 115

    (49) fprint -> PRINT ABRIR_PRNT write_choice . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 155


state 116

    (51) write_choice -> const_string .

    CERRAR_PRNT     reduce using rule 51 (write_choice -> const_string .)


state 117

    (84) var_cte -> const_int .

    MULTIPLICACION  reduce using rule 84 (var_cte -> const_int .)
    DIVISION        reduce using rule 84 (var_cte -> const_int .)
    SUMA            reduce using rule 84 (var_cte -> const_int .)
    RESTA           reduce using rule 84 (var_cte -> const_int .)
    CERRAR_PRNT     reduce using rule 84 (var_cte -> const_int .)
    COMA            reduce using rule 84 (var_cte -> const_int .)
    PUNTO_COMA      reduce using rule 84 (var_cte -> const_int .)
    IGUALDAD        reduce using rule 84 (var_cte -> const_int .)
    DESIGUALDAD     reduce using rule 84 (var_cte -> const_int .)
    MAYOR_QUE       reduce using rule 84 (var_cte -> const_int .)
    MENOR_QUE       reduce using rule 84 (var_cte -> const_int .)
    MAYOR_IGUAL     reduce using rule 84 (var_cte -> const_int .)
    MENOR_IGUAL     reduce using rule 84 (var_cte -> const_int .)


state 118

    (88) var_cte -> ID . var_decision
    (89) var_decision -> . var_func
    (90) var_decision -> . push_operando
    (96) var_func -> . ABRIR_PRNT params_call_aux CERRAR_PRNT
    (117) push_operando -> .

    ABRIR_PRNT      shift and go to state 89
    MULTIPLICACION  reduce using rule 117 (push_operando -> .)
    DIVISION        reduce using rule 117 (push_operando -> .)
    SUMA            reduce using rule 117 (push_operando -> .)
    RESTA           reduce using rule 117 (push_operando -> .)
    IGUALDAD        reduce using rule 117 (push_operando -> .)
    DESIGUALDAD     reduce using rule 117 (push_operando -> .)
    MAYOR_QUE       reduce using rule 117 (push_operando -> .)
    MENOR_QUE       reduce using rule 117 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 117 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 117 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 117 (push_operando -> .)
    COMA            reduce using rule 117 (push_operando -> .)
    PUNTO_COMA      reduce using rule 117 (push_operando -> .)

    push_operando                  shift and go to state 156
    var_func                       shift and go to state 158
    var_decision                   shift and go to state 157

state 119

    (70) exp -> term . term_aux_pila exp_choice
    (79) term_aux_pila -> .

    SUMA            reduce using rule 79 (term_aux_pila -> .)
    RESTA           reduce using rule 79 (term_aux_pila -> .)
    IGUALDAD        reduce using rule 79 (term_aux_pila -> .)
    DESIGUALDAD     reduce using rule 79 (term_aux_pila -> .)
    MAYOR_QUE       reduce using rule 79 (term_aux_pila -> .)
    MENOR_QUE       reduce using rule 79 (term_aux_pila -> .)
    MAYOR_IGUAL     reduce using rule 79 (term_aux_pila -> .)
    MENOR_IGUAL     reduce using rule 79 (term_aux_pila -> .)
    CERRAR_PRNT     reduce using rule 79 (term_aux_pila -> .)
    COMA            reduce using rule 79 (term_aux_pila -> .)
    PUNTO_COMA      reduce using rule 79 (term_aux_pila -> .)

    term_aux_pila                  shift and go to state 159

state 120

    (94) const_bool -> FALSE . push_operando
    (117) push_operando -> .

    MULTIPLICACION  reduce using rule 117 (push_operando -> .)
    DIVISION        reduce using rule 117 (push_operando -> .)
    SUMA            reduce using rule 117 (push_operando -> .)
    RESTA           reduce using rule 117 (push_operando -> .)
    IGUALDAD        reduce using rule 117 (push_operando -> .)
    DESIGUALDAD     reduce using rule 117 (push_operando -> .)
    MAYOR_QUE       reduce using rule 117 (push_operando -> .)
    MENOR_QUE       reduce using rule 117 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 117 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 117 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 117 (push_operando -> .)
    COMA            reduce using rule 117 (push_operando -> .)
    PUNTO_COMA      reduce using rule 117 (push_operando -> .)

    push_operando                  shift and go to state 160

state 121

    (61) expression -> exp . exp_aux_pila expression_choice
    (73) exp_aux_pila -> .

    IGUALDAD        reduce using rule 73 (exp_aux_pila -> .)
    DESIGUALDAD     reduce using rule 73 (exp_aux_pila -> .)
    MAYOR_QUE       reduce using rule 73 (exp_aux_pila -> .)
    MENOR_QUE       reduce using rule 73 (exp_aux_pila -> .)
    MAYOR_IGUAL     reduce using rule 73 (exp_aux_pila -> .)
    MENOR_IGUAL     reduce using rule 73 (exp_aux_pila -> .)
    CERRAR_PRNT     reduce using rule 73 (exp_aux_pila -> .)
    COMA            reduce using rule 73 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 73 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 161

state 122

    (85) var_cte -> const_float .

    MULTIPLICACION  reduce using rule 85 (var_cte -> const_float .)
    DIVISION        reduce using rule 85 (var_cte -> const_float .)
    SUMA            reduce using rule 85 (var_cte -> const_float .)
    RESTA           reduce using rule 85 (var_cte -> const_float .)
    CERRAR_PRNT     reduce using rule 85 (var_cte -> const_float .)
    COMA            reduce using rule 85 (var_cte -> const_float .)
    PUNTO_COMA      reduce using rule 85 (var_cte -> const_float .)
    IGUALDAD        reduce using rule 85 (var_cte -> const_float .)
    DESIGUALDAD     reduce using rule 85 (var_cte -> const_float .)
    MAYOR_QUE       reduce using rule 85 (var_cte -> const_float .)
    MENOR_QUE       reduce using rule 85 (var_cte -> const_float .)
    MAYOR_IGUAL     reduce using rule 85 (var_cte -> const_float .)
    MENOR_IGUAL     reduce using rule 85 (var_cte -> const_float .)


state 123

    (50) write_choice -> expression .

    CERRAR_PRNT     reduce using rule 50 (write_choice -> expression .)


state 124

    (109) fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 162


state 125

    (110) fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 163


state 126

    (112) fturn_left -> TURNLEFT ABRIR_PRNT expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 164


state 127

    (113) fturn_right -> TURNRIGHT ABRIR_PRNT expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 165


state 128

    (60) assignment -> push_operando IGUAL . push_operador expression PUNTO_COMA
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 166

state 129

    (97) params_call_aux -> params_call . params_call_loop
    (100) params_call_loop -> . COMA params_call_loop_aux
    (101) params_call_loop -> .

    COMA            shift and go to state 167
    CERRAR_PRNT     reduce using rule 101 (params_call_loop -> .)

    params_call_loop               shift and go to state 168

state 130

    (96) var_func -> ABRIR_PRNT params_call_aux . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 169


state 131

    (99) params_call -> expression .

    COMA            reduce using rule 99 (params_call -> expression .)
    CERRAR_PRNT     reduce using rule 99 (params_call -> expression .)


state 132

    (95) call -> var_func PUNTO_COMA .

    ID              reduce using rule 95 (call -> var_func PUNTO_COMA .)
    IF              reduce using rule 95 (call -> var_func PUNTO_COMA .)
    PRINT           reduce using rule 95 (call -> var_func PUNTO_COMA .)
    VAR             reduce using rule 95 (call -> var_func PUNTO_COMA .)
    WHILE           reduce using rule 95 (call -> var_func PUNTO_COMA .)
    DO              reduce using rule 95 (call -> var_func PUNTO_COMA .)
    PENUP           reduce using rule 95 (call -> var_func PUNTO_COMA .)
    PENDOWN         reduce using rule 95 (call -> var_func PUNTO_COMA .)
    ERASE           reduce using rule 95 (call -> var_func PUNTO_COMA .)
    TURNLEFT        reduce using rule 95 (call -> var_func PUNTO_COMA .)
    TURNRIGHT       reduce using rule 95 (call -> var_func PUNTO_COMA .)
    MOVE            reduce using rule 95 (call -> var_func PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 95 (call -> var_func PUNTO_COMA .)
    RETURN          reduce using rule 95 (call -> var_func PUNTO_COMA .)


state 133

    (53) condition -> IF ABRIR_PRNT expression . ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (119) ifcuad1 -> .

    CERRAR_PRNT     reduce using rule 119 (ifcuad1 -> .)

    ifcuad1                        shift and go to state 170

state 134

    (111) ferase -> ERASE ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 171


state 135

    (27) functions_aux -> functions_body . functions_params func_block functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 33

    functions_params               shift and go to state 172

state 136

    (25) functions_loop -> FUNC functions_aux .

    MAIN            reduce using rule 25 (functions_loop -> FUNC functions_aux .)


state 137

    (28) functions_aux -> functions_body_void . functions_params block functions_loop
    (29) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 33

    functions_params               shift and go to state 173

state 138

    (21) func_block -> ABRIR_LLAVE estatuto_loop return . CERRAR_LLAVE

    CERRAR_LLAVE    shift and go to state 174


state 139

    (24) return -> RETURN . expression PUNTO_COMA
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 175
    const_bool                     shift and go to state 110

state 140

    (34) params_loop -> COMA params_loop_aux .

    CERRAR_PRNT     reduce using rule 34 (params_loop -> COMA params_loop_aux .)


state 141

    (33) params_loop_aux -> params . params_loop
    (34) params_loop -> . COMA params_loop_aux
    (35) params_loop -> .

    COMA            shift and go to state 98
    CERRAR_PRNT     reduce using rule 35 (params_loop -> .)

    params_loop                    shift and go to state 176

state 142

    (18) functions2 -> functions_body_void functions_params block ret_void functions_loop .

    MAIN            reduce using rule 18 (functions2 -> functions_body_void functions_params block ret_void functions_loop .)


state 143

    (114) fmove -> MOVE ABRIR_PRNT direction COMA . expression CERRAR_PRNT PUNTO_COMA
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    const_int                      shift and go to state 117
    term                           shift and go to state 119
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    var_cte                        shift and go to state 106
    expression                     shift and go to state 177
    const_bool                     shift and go to state 110

state 144

    (59) do_while -> DO docuad1 block WHILE . ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 178


state 145

    (58) while -> WHILE ABRIR_PRNT whilecuad1 expression . whilecuad2 CERRAR_PRNT block whilecuad3
    (123) whilecuad2 -> .

    CERRAR_PRNT     reduce using rule 123 (whilecuad2 -> .)

    whilecuad2                     shift and go to state 179

state 146

    (82) factor -> ABRIR_PRNT expression . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 180


state 147

    (81) term_aux -> DIVISION . push_operador term
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 181

state 148

    (77) term_choice -> term_aux .

    SUMA            reduce using rule 77 (term_choice -> term_aux .)
    RESTA           reduce using rule 77 (term_choice -> term_aux .)
    IGUALDAD        reduce using rule 77 (term_choice -> term_aux .)
    DESIGUALDAD     reduce using rule 77 (term_choice -> term_aux .)
    MAYOR_QUE       reduce using rule 77 (term_choice -> term_aux .)
    MENOR_QUE       reduce using rule 77 (term_choice -> term_aux .)
    MAYOR_IGUAL     reduce using rule 77 (term_choice -> term_aux .)
    MENOR_IGUAL     reduce using rule 77 (term_choice -> term_aux .)
    CERRAR_PRNT     reduce using rule 77 (term_choice -> term_aux .)
    COMA            reduce using rule 77 (term_choice -> term_aux .)
    PUNTO_COMA      reduce using rule 77 (term_choice -> term_aux .)


state 149

    (76) term -> factor term_choice .

    SUMA            reduce using rule 76 (term -> factor term_choice .)
    RESTA           reduce using rule 76 (term -> factor term_choice .)
    IGUALDAD        reduce using rule 76 (term -> factor term_choice .)
    DESIGUALDAD     reduce using rule 76 (term -> factor term_choice .)
    MAYOR_QUE       reduce using rule 76 (term -> factor term_choice .)
    MENOR_QUE       reduce using rule 76 (term -> factor term_choice .)
    MAYOR_IGUAL     reduce using rule 76 (term -> factor term_choice .)
    MENOR_IGUAL     reduce using rule 76 (term -> factor term_choice .)
    CERRAR_PRNT     reduce using rule 76 (term -> factor term_choice .)
    COMA            reduce using rule 76 (term -> factor term_choice .)
    PUNTO_COMA      reduce using rule 76 (term -> factor term_choice .)


state 150

    (80) term_aux -> MULTIPLICACION . push_operador term
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 182

state 151

    (93) const_bool -> TRUE push_operando .

    MULTIPLICACION  reduce using rule 93 (const_bool -> TRUE push_operando .)
    DIVISION        reduce using rule 93 (const_bool -> TRUE push_operando .)
    SUMA            reduce using rule 93 (const_bool -> TRUE push_operando .)
    RESTA           reduce using rule 93 (const_bool -> TRUE push_operando .)
    IGUALDAD        reduce using rule 93 (const_bool -> TRUE push_operando .)
    DESIGUALDAD     reduce using rule 93 (const_bool -> TRUE push_operando .)
    MAYOR_QUE       reduce using rule 93 (const_bool -> TRUE push_operando .)
    MENOR_QUE       reduce using rule 93 (const_bool -> TRUE push_operando .)
    MAYOR_IGUAL     reduce using rule 93 (const_bool -> TRUE push_operando .)
    MENOR_IGUAL     reduce using rule 93 (const_bool -> TRUE push_operando .)
    CERRAR_PRNT     reduce using rule 93 (const_bool -> TRUE push_operando .)
    COMA            reduce using rule 93 (const_bool -> TRUE push_operando .)
    PUNTO_COMA      reduce using rule 93 (const_bool -> TRUE push_operando .)


state 152

    (91) const_int -> CTE_I push_operando .

    MULTIPLICACION  reduce using rule 91 (const_int -> CTE_I push_operando .)
    DIVISION        reduce using rule 91 (const_int -> CTE_I push_operando .)
    SUMA            reduce using rule 91 (const_int -> CTE_I push_operando .)
    RESTA           reduce using rule 91 (const_int -> CTE_I push_operando .)
    IGUALDAD        reduce using rule 91 (const_int -> CTE_I push_operando .)
    DESIGUALDAD     reduce using rule 91 (const_int -> CTE_I push_operando .)
    MAYOR_QUE       reduce using rule 91 (const_int -> CTE_I push_operando .)
    MENOR_QUE       reduce using rule 91 (const_int -> CTE_I push_operando .)
    MAYOR_IGUAL     reduce using rule 91 (const_int -> CTE_I push_operando .)
    MENOR_IGUAL     reduce using rule 91 (const_int -> CTE_I push_operando .)
    CERRAR_PRNT     reduce using rule 91 (const_int -> CTE_I push_operando .)
    COMA            reduce using rule 91 (const_int -> CTE_I push_operando .)
    PUNTO_COMA      reduce using rule 91 (const_int -> CTE_I push_operando .)


state 153

    (92) const_float -> CTE_F push_operando .

    MULTIPLICACION  reduce using rule 92 (const_float -> CTE_F push_operando .)
    DIVISION        reduce using rule 92 (const_float -> CTE_F push_operando .)
    SUMA            reduce using rule 92 (const_float -> CTE_F push_operando .)
    RESTA           reduce using rule 92 (const_float -> CTE_F push_operando .)
    CERRAR_PRNT     reduce using rule 92 (const_float -> CTE_F push_operando .)
    COMA            reduce using rule 92 (const_float -> CTE_F push_operando .)
    PUNTO_COMA      reduce using rule 92 (const_float -> CTE_F push_operando .)
    IGUALDAD        reduce using rule 92 (const_float -> CTE_F push_operando .)
    DESIGUALDAD     reduce using rule 92 (const_float -> CTE_F push_operando .)
    MAYOR_QUE       reduce using rule 92 (const_float -> CTE_F push_operando .)
    MENOR_QUE       reduce using rule 92 (const_float -> CTE_F push_operando .)
    MAYOR_IGUAL     reduce using rule 92 (const_float -> CTE_F push_operando .)
    MENOR_IGUAL     reduce using rule 92 (const_float -> CTE_F push_operando .)


state 154

    (87) var_cte -> ABRIR_CORCH CTE_I . CERRAR_CORCH

    CERRAR_CORCH    shift and go to state 183


state 155

    (49) fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 184


state 156

    (90) var_decision -> push_operando .

    MULTIPLICACION  reduce using rule 90 (var_decision -> push_operando .)
    DIVISION        reduce using rule 90 (var_decision -> push_operando .)
    SUMA            reduce using rule 90 (var_decision -> push_operando .)
    RESTA           reduce using rule 90 (var_decision -> push_operando .)
    IGUALDAD        reduce using rule 90 (var_decision -> push_operando .)
    DESIGUALDAD     reduce using rule 90 (var_decision -> push_operando .)
    MAYOR_QUE       reduce using rule 90 (var_decision -> push_operando .)
    MENOR_QUE       reduce using rule 90 (var_decision -> push_operando .)
    MAYOR_IGUAL     reduce using rule 90 (var_decision -> push_operando .)
    MENOR_IGUAL     reduce using rule 90 (var_decision -> push_operando .)
    CERRAR_PRNT     reduce using rule 90 (var_decision -> push_operando .)
    COMA            reduce using rule 90 (var_decision -> push_operando .)
    PUNTO_COMA      reduce using rule 90 (var_decision -> push_operando .)


state 157

    (88) var_cte -> ID var_decision .

    MULTIPLICACION  reduce using rule 88 (var_cte -> ID var_decision .)
    DIVISION        reduce using rule 88 (var_cte -> ID var_decision .)
    SUMA            reduce using rule 88 (var_cte -> ID var_decision .)
    RESTA           reduce using rule 88 (var_cte -> ID var_decision .)
    CERRAR_PRNT     reduce using rule 88 (var_cte -> ID var_decision .)
    COMA            reduce using rule 88 (var_cte -> ID var_decision .)
    PUNTO_COMA      reduce using rule 88 (var_cte -> ID var_decision .)
    IGUALDAD        reduce using rule 88 (var_cte -> ID var_decision .)
    DESIGUALDAD     reduce using rule 88 (var_cte -> ID var_decision .)
    MAYOR_QUE       reduce using rule 88 (var_cte -> ID var_decision .)
    MENOR_QUE       reduce using rule 88 (var_cte -> ID var_decision .)
    MAYOR_IGUAL     reduce using rule 88 (var_cte -> ID var_decision .)
    MENOR_IGUAL     reduce using rule 88 (var_cte -> ID var_decision .)


state 158

    (89) var_decision -> var_func .

    MULTIPLICACION  reduce using rule 89 (var_decision -> var_func .)
    DIVISION        reduce using rule 89 (var_decision -> var_func .)
    SUMA            reduce using rule 89 (var_decision -> var_func .)
    RESTA           reduce using rule 89 (var_decision -> var_func .)
    IGUALDAD        reduce using rule 89 (var_decision -> var_func .)
    DESIGUALDAD     reduce using rule 89 (var_decision -> var_func .)
    MAYOR_QUE       reduce using rule 89 (var_decision -> var_func .)
    MENOR_QUE       reduce using rule 89 (var_decision -> var_func .)
    MAYOR_IGUAL     reduce using rule 89 (var_decision -> var_func .)
    MENOR_IGUAL     reduce using rule 89 (var_decision -> var_func .)
    CERRAR_PRNT     reduce using rule 89 (var_decision -> var_func .)
    COMA            reduce using rule 89 (var_decision -> var_func .)
    PUNTO_COMA      reduce using rule 89 (var_decision -> var_func .)


state 159

    (70) exp -> term term_aux_pila . exp_choice
    (71) exp_choice -> . exp_aux
    (72) exp_choice -> .
    (74) exp_aux -> . SUMA push_operador exp
    (75) exp_aux -> . RESTA push_operador exp

    IGUALDAD        reduce using rule 72 (exp_choice -> .)
    DESIGUALDAD     reduce using rule 72 (exp_choice -> .)
    MAYOR_QUE       reduce using rule 72 (exp_choice -> .)
    MENOR_QUE       reduce using rule 72 (exp_choice -> .)
    MAYOR_IGUAL     reduce using rule 72 (exp_choice -> .)
    MENOR_IGUAL     reduce using rule 72 (exp_choice -> .)
    CERRAR_PRNT     reduce using rule 72 (exp_choice -> .)
    COMA            reduce using rule 72 (exp_choice -> .)
    PUNTO_COMA      reduce using rule 72 (exp_choice -> .)
    SUMA            shift and go to state 188
    RESTA           shift and go to state 186

    exp_choice                     shift and go to state 185
    exp_aux                        shift and go to state 187

state 160

    (94) const_bool -> FALSE push_operando .

    MULTIPLICACION  reduce using rule 94 (const_bool -> FALSE push_operando .)
    DIVISION        reduce using rule 94 (const_bool -> FALSE push_operando .)
    SUMA            reduce using rule 94 (const_bool -> FALSE push_operando .)
    RESTA           reduce using rule 94 (const_bool -> FALSE push_operando .)
    IGUALDAD        reduce using rule 94 (const_bool -> FALSE push_operando .)
    DESIGUALDAD     reduce using rule 94 (const_bool -> FALSE push_operando .)
    MAYOR_QUE       reduce using rule 94 (const_bool -> FALSE push_operando .)
    MENOR_QUE       reduce using rule 94 (const_bool -> FALSE push_operando .)
    MAYOR_IGUAL     reduce using rule 94 (const_bool -> FALSE push_operando .)
    MENOR_IGUAL     reduce using rule 94 (const_bool -> FALSE push_operando .)
    CERRAR_PRNT     reduce using rule 94 (const_bool -> FALSE push_operando .)
    COMA            reduce using rule 94 (const_bool -> FALSE push_operando .)
    PUNTO_COMA      reduce using rule 94 (const_bool -> FALSE push_operando .)


state 161

    (61) expression -> exp exp_aux_pila . expression_choice
    (62) expression_choice -> . expression_choice_aux
    (63) expression_choice -> .
    (64) expression_choice_aux -> . IGUALDAD push_operador exp
    (65) expression_choice_aux -> . DESIGUALDAD push_operador exp exp_aux_pila
    (66) expression_choice_aux -> . MAYOR_QUE push_operador exp exp_aux_pila
    (67) expression_choice_aux -> . MENOR_QUE push_operador exp exp_aux_pila
    (68) expression_choice_aux -> . MAYOR_IGUAL push_operador exp exp_aux_pila
    (69) expression_choice_aux -> . MENOR_IGUAL push_operador exp exp_aux_pila

    CERRAR_PRNT     reduce using rule 63 (expression_choice -> .)
    COMA            reduce using rule 63 (expression_choice -> .)
    PUNTO_COMA      reduce using rule 63 (expression_choice -> .)
    IGUALDAD        shift and go to state 189
    DESIGUALDAD     shift and go to state 195
    MAYOR_QUE       shift and go to state 193
    MENOR_QUE       shift and go to state 192
    MAYOR_IGUAL     shift and go to state 194
    MENOR_IGUAL     shift and go to state 196

    expression_choice_aux          shift and go to state 191
    expression_choice              shift and go to state 190

state 162

    (109) fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 109 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 163

    (110) fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 110 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 164

    (112) fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 197


state 165

    (113) fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 198


state 166

    (60) assignment -> push_operando IGUAL push_operador . expression PUNTO_COMA
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    const_float                    shift and go to state 122
    expression                     shift and go to state 199

state 167

    (100) params_call_loop -> COMA . params_call_loop_aux
    (102) params_call_loop_aux -> . params_call params_call_loop
    (99) params_call -> . expression
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    params_call                    shift and go to state 200
    const_int                      shift and go to state 117
    params_call_loop_aux           shift and go to state 201
    factor                         shift and go to state 108
    var_cte                        shift and go to state 106
    term                           shift and go to state 119
    exp                            shift and go to state 121
    const_float                    shift and go to state 122
    expression                     shift and go to state 131
    const_bool                     shift and go to state 110

state 168

    (97) params_call_aux -> params_call params_call_loop .

    CERRAR_PRNT     reduce using rule 97 (params_call_aux -> params_call params_call_loop .)


state 169

    (96) var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .

    MULTIPLICACION  reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    DIVISION        reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    SUMA            reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    RESTA           reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    IGUALDAD        reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    DESIGUALDAD     reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MAYOR_QUE       reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MENOR_QUE       reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MAYOR_IGUAL     reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    MENOR_IGUAL     reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    CERRAR_PRNT     reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    COMA            reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)
    PUNTO_COMA      reduce using rule 96 (var_func -> ABRIR_PRNT params_call_aux CERRAR_PRNT .)


state 170

    (53) condition -> IF ABRIR_PRNT expression ifcuad1 . CERRAR_PRNT block ifcuad2 else ifcuad3

    CERRAR_PRNT     shift and go to state 202


state 171

    (111) ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 111 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 172

    (27) functions_aux -> functions_body functions_params . func_block functions_loop
    (21) func_block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 67

    func_block                     shift and go to state 203

state 173

    (28) functions_aux -> functions_body_void functions_params . block functions_loop
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 29

    block                          shift and go to state 204

state 174

    (21) func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .

    FUNC            reduce using rule 21 (func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    MAIN            reduce using rule 21 (func_block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)


state 175

    (24) return -> RETURN expression . PUNTO_COMA

    PUNTO_COMA      shift and go to state 205


state 176

    (33) params_loop_aux -> params params_loop .

    CERRAR_PRNT     reduce using rule 33 (params_loop_aux -> params params_loop .)


state 177

    (114) fmove -> MOVE ABRIR_PRNT direction COMA expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 206


state 178

    (59) do_while -> DO docuad1 block WHILE ABRIR_PRNT . expression docuad2 CERRAR_PRNT PUNTO_COMA
    (61) expression -> . exp exp_aux_pila expression_choice
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    const_float                    shift and go to state 122
    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 121
    factor                         shift and go to state 108
    expression                     shift and go to state 207

state 179

    (58) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 . CERRAR_PRNT block whilecuad3

    CERRAR_PRNT     shift and go to state 208


state 180

    (82) factor -> ABRIR_PRNT expression CERRAR_PRNT .

    MULTIPLICACION  reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    DIVISION        reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    SUMA            reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    RESTA           reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    IGUALDAD        reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    DESIGUALDAD     reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MAYOR_QUE       reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MENOR_QUE       reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MAYOR_IGUAL     reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MENOR_IGUAL     reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    CERRAR_PRNT     reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    PUNTO_COMA      reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    COMA            reduce using rule 82 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)


state 181

    (81) term_aux -> DIVISION push_operador . term
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 209
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    const_int                      shift and go to state 117
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 182

    (80) term_aux -> MULTIPLICACION push_operador . term
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 210
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    const_int                      shift and go to state 117
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 183

    (87) var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .

    MULTIPLICACION  reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    DIVISION        reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    SUMA            reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    RESTA           reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    CERRAR_PRNT     reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    COMA            reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    PUNTO_COMA      reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    IGUALDAD        reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    DESIGUALDAD     reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    MAYOR_QUE       reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    MENOR_QUE       reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    MAYOR_IGUAL     reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)
    MENOR_IGUAL     reduce using rule 87 (var_cte -> ABRIR_CORCH CTE_I CERRAR_CORCH .)


state 184

    (49) fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 49 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)


state 185

    (70) exp -> term term_aux_pila exp_choice .

    CERRAR_PRNT     reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    COMA            reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    PUNTO_COMA      reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    IGUALDAD        reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    DESIGUALDAD     reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    MAYOR_QUE       reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    MENOR_QUE       reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    MAYOR_IGUAL     reduce using rule 70 (exp -> term term_aux_pila exp_choice .)
    MENOR_IGUAL     reduce using rule 70 (exp -> term term_aux_pila exp_choice .)


state 186

    (75) exp_aux -> RESTA . push_operador exp
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 211

state 187

    (71) exp_choice -> exp_aux .

    IGUALDAD        reduce using rule 71 (exp_choice -> exp_aux .)
    DESIGUALDAD     reduce using rule 71 (exp_choice -> exp_aux .)
    MAYOR_QUE       reduce using rule 71 (exp_choice -> exp_aux .)
    MENOR_QUE       reduce using rule 71 (exp_choice -> exp_aux .)
    MAYOR_IGUAL     reduce using rule 71 (exp_choice -> exp_aux .)
    MENOR_IGUAL     reduce using rule 71 (exp_choice -> exp_aux .)
    CERRAR_PRNT     reduce using rule 71 (exp_choice -> exp_aux .)
    COMA            reduce using rule 71 (exp_choice -> exp_aux .)
    PUNTO_COMA      reduce using rule 71 (exp_choice -> exp_aux .)


state 188

    (74) exp_aux -> SUMA . push_operador exp
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 212

state 189

    (64) expression_choice_aux -> IGUALDAD . push_operador exp
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 213

state 190

    (61) expression -> exp exp_aux_pila expression_choice .

    CERRAR_PRNT     reduce using rule 61 (expression -> exp exp_aux_pila expression_choice .)
    PUNTO_COMA      reduce using rule 61 (expression -> exp exp_aux_pila expression_choice .)
    COMA            reduce using rule 61 (expression -> exp exp_aux_pila expression_choice .)


state 191

    (62) expression_choice -> expression_choice_aux .

    CERRAR_PRNT     reduce using rule 62 (expression_choice -> expression_choice_aux .)
    COMA            reduce using rule 62 (expression_choice -> expression_choice_aux .)
    PUNTO_COMA      reduce using rule 62 (expression_choice -> expression_choice_aux .)


state 192

    (67) expression_choice_aux -> MENOR_QUE . push_operador exp exp_aux_pila
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 214

state 193

    (66) expression_choice_aux -> MAYOR_QUE . push_operador exp exp_aux_pila
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 215

state 194

    (68) expression_choice_aux -> MAYOR_IGUAL . push_operador exp exp_aux_pila
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 216

state 195

    (65) expression_choice_aux -> DESIGUALDAD . push_operador exp exp_aux_pila
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 217

state 196

    (69) expression_choice_aux -> MENOR_IGUAL . push_operador exp exp_aux_pila
    (118) push_operador -> .

    ABRIR_PRNT      reduce using rule 118 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 118 (push_operador -> .)
    ID              reduce using rule 118 (push_operador -> .)
    CTE_I           reduce using rule 118 (push_operador -> .)
    CTE_F           reduce using rule 118 (push_operador -> .)
    TRUE            reduce using rule 118 (push_operador -> .)
    FALSE           reduce using rule 118 (push_operador -> .)

    push_operador                  shift and go to state 218

state 197

    (112) fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 112 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)


state 198

    (113) fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 113 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)


state 199

    (60) assignment -> push_operando IGUAL push_operador expression . PUNTO_COMA

    PUNTO_COMA      shift and go to state 219


state 200

    (102) params_call_loop_aux -> params_call . params_call_loop
    (100) params_call_loop -> . COMA params_call_loop_aux
    (101) params_call_loop -> .

    COMA            shift and go to state 167
    CERRAR_PRNT     reduce using rule 101 (params_call_loop -> .)

    params_call_loop               shift and go to state 220

state 201

    (100) params_call_loop -> COMA params_call_loop_aux .

    CERRAR_PRNT     reduce using rule 100 (params_call_loop -> COMA params_call_loop_aux .)


state 202

    (53) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT . block ifcuad2 else ifcuad3
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 29

    block                          shift and go to state 221

state 203

    (27) functions_aux -> functions_body functions_params func_block . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 94
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 222

state 204

    (28) functions_aux -> functions_body_void functions_params block . functions_loop
    (25) functions_loop -> . FUNC functions_aux
    (26) functions_loop -> .

    FUNC            shift and go to state 94
    MAIN            reduce using rule 26 (functions_loop -> .)

    functions_loop                 shift and go to state 223

state 205

    (24) return -> RETURN expression PUNTO_COMA .

    CERRAR_LLAVE    reduce using rule 24 (return -> RETURN expression PUNTO_COMA .)


state 206

    (114) fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 224


state 207

    (59) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression . docuad2 CERRAR_PRNT PUNTO_COMA
    (126) docuad2 -> .

    CERRAR_PRNT     reduce using rule 126 (docuad2 -> .)

    docuad2                        shift and go to state 225

state 208

    (58) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT . block whilecuad3
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 29

    block                          shift and go to state 226

state 209

    (81) term_aux -> DIVISION push_operador term .

    SUMA            reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    RESTA           reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    IGUALDAD        reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    DESIGUALDAD     reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    MAYOR_QUE       reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    MENOR_QUE       reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    MAYOR_IGUAL     reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    MENOR_IGUAL     reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    CERRAR_PRNT     reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    COMA            reduce using rule 81 (term_aux -> DIVISION push_operador term .)
    PUNTO_COMA      reduce using rule 81 (term_aux -> DIVISION push_operador term .)


state 210

    (80) term_aux -> MULTIPLICACION push_operador term .

    SUMA            reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    RESTA           reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    IGUALDAD        reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    DESIGUALDAD     reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    MAYOR_QUE       reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    MENOR_QUE       reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    MAYOR_IGUAL     reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    MENOR_IGUAL     reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    CERRAR_PRNT     reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    COMA            reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)
    PUNTO_COMA      reduce using rule 80 (term_aux -> MULTIPLICACION push_operador term .)


state 211

    (75) exp_aux -> RESTA push_operador . exp
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 227
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 212

    (74) exp_aux -> SUMA push_operador . exp
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 228
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 213

    (64) expression_choice_aux -> IGUALDAD push_operador . exp
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 229
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 214

    (67) expression_choice_aux -> MENOR_QUE push_operador . exp exp_aux_pila
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 230
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 215

    (66) expression_choice_aux -> MAYOR_QUE push_operador . exp exp_aux_pila
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 231
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 216

    (68) expression_choice_aux -> MAYOR_IGUAL push_operador . exp exp_aux_pila
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 232
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 217

    (65) expression_choice_aux -> DESIGUALDAD push_operador . exp exp_aux_pila
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 233
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 218

    (69) expression_choice_aux -> MENOR_IGUAL push_operador . exp exp_aux_pila
    (70) exp -> . term term_aux_pila exp_choice
    (76) term -> . factor term_choice
    (82) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (83) factor -> . var_cte
    (84) var_cte -> . const_int
    (85) var_cte -> . const_float
    (86) var_cte -> . const_bool
    (87) var_cte -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (88) var_cte -> . ID var_decision
    (91) const_int -> . CTE_I push_operando
    (92) const_float -> . CTE_F push_operando
    (93) const_bool -> . TRUE push_operando
    (94) const_bool -> . FALSE push_operando

    ABRIR_PRNT      shift and go to state 107
    ABRIR_CORCH     shift and go to state 114
    ID              shift and go to state 118
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    TRUE            shift and go to state 109
    FALSE           shift and go to state 120

    term                           shift and go to state 119
    const_int                      shift and go to state 117
    var_cte                        shift and go to state 106
    const_bool                     shift and go to state 110
    exp                            shift and go to state 234
    factor                         shift and go to state 108
    const_float                    shift and go to state 122

state 219

    (60) assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .

    ID              reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    IF              reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    PRINT           reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    VAR             reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    WHILE           reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    DO              reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    PENUP           reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    PENDOWN         reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    ERASE           reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    TURNLEFT        reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    TURNRIGHT       reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    MOVE            reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)
    RETURN          reduce using rule 60 (assignment -> push_operando IGUAL push_operador expression PUNTO_COMA .)


state 220

    (102) params_call_loop_aux -> params_call params_call_loop .

    CERRAR_PRNT     reduce using rule 102 (params_call_loop_aux -> params_call params_call_loop .)


state 221

    (53) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block . ifcuad2 else ifcuad3
    (120) ifcuad2 -> .

    ELSE            reduce using rule 120 (ifcuad2 -> .)
    ID              reduce using rule 120 (ifcuad2 -> .)
    IF              reduce using rule 120 (ifcuad2 -> .)
    PRINT           reduce using rule 120 (ifcuad2 -> .)
    VAR             reduce using rule 120 (ifcuad2 -> .)
    WHILE           reduce using rule 120 (ifcuad2 -> .)
    DO              reduce using rule 120 (ifcuad2 -> .)
    PENUP           reduce using rule 120 (ifcuad2 -> .)
    PENDOWN         reduce using rule 120 (ifcuad2 -> .)
    ERASE           reduce using rule 120 (ifcuad2 -> .)
    TURNLEFT        reduce using rule 120 (ifcuad2 -> .)
    TURNRIGHT       reduce using rule 120 (ifcuad2 -> .)
    MOVE            reduce using rule 120 (ifcuad2 -> .)
    CERRAR_LLAVE    reduce using rule 120 (ifcuad2 -> .)
    RETURN          reduce using rule 120 (ifcuad2 -> .)

    ifcuad2                        shift and go to state 235

state 222

    (27) functions_aux -> functions_body functions_params func_block functions_loop .

    MAIN            reduce using rule 27 (functions_aux -> functions_body functions_params func_block functions_loop .)


state 223

    (28) functions_aux -> functions_body_void functions_params block functions_loop .

    MAIN            reduce using rule 28 (functions_aux -> functions_body_void functions_params block functions_loop .)


state 224

    (114) fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 114 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)


state 225

    (59) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 236


state 226

    (58) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block . whilecuad3
    (124) whilecuad3 -> .

    ID              reduce using rule 124 (whilecuad3 -> .)
    IF              reduce using rule 124 (whilecuad3 -> .)
    PRINT           reduce using rule 124 (whilecuad3 -> .)
    VAR             reduce using rule 124 (whilecuad3 -> .)
    WHILE           reduce using rule 124 (whilecuad3 -> .)
    DO              reduce using rule 124 (whilecuad3 -> .)
    PENUP           reduce using rule 124 (whilecuad3 -> .)
    PENDOWN         reduce using rule 124 (whilecuad3 -> .)
    ERASE           reduce using rule 124 (whilecuad3 -> .)
    TURNLEFT        reduce using rule 124 (whilecuad3 -> .)
    TURNRIGHT       reduce using rule 124 (whilecuad3 -> .)
    MOVE            reduce using rule 124 (whilecuad3 -> .)
    CERRAR_LLAVE    reduce using rule 124 (whilecuad3 -> .)
    RETURN          reduce using rule 124 (whilecuad3 -> .)

    whilecuad3                     shift and go to state 237

state 227

    (75) exp_aux -> RESTA push_operador exp .

    IGUALDAD        reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    DESIGUALDAD     reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    MAYOR_QUE       reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    MENOR_QUE       reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    MAYOR_IGUAL     reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    MENOR_IGUAL     reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    CERRAR_PRNT     reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    COMA            reduce using rule 75 (exp_aux -> RESTA push_operador exp .)
    PUNTO_COMA      reduce using rule 75 (exp_aux -> RESTA push_operador exp .)


state 228

    (74) exp_aux -> SUMA push_operador exp .

    IGUALDAD        reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    DESIGUALDAD     reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    MAYOR_QUE       reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    MENOR_QUE       reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    MAYOR_IGUAL     reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    MENOR_IGUAL     reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    CERRAR_PRNT     reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    COMA            reduce using rule 74 (exp_aux -> SUMA push_operador exp .)
    PUNTO_COMA      reduce using rule 74 (exp_aux -> SUMA push_operador exp .)


state 229

    (64) expression_choice_aux -> IGUALDAD push_operador exp .

    CERRAR_PRNT     reduce using rule 64 (expression_choice_aux -> IGUALDAD push_operador exp .)
    COMA            reduce using rule 64 (expression_choice_aux -> IGUALDAD push_operador exp .)
    PUNTO_COMA      reduce using rule 64 (expression_choice_aux -> IGUALDAD push_operador exp .)


state 230

    (67) expression_choice_aux -> MENOR_QUE push_operador exp . exp_aux_pila
    (73) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 73 (exp_aux_pila -> .)
    COMA            reduce using rule 73 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 73 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 238

state 231

    (66) expression_choice_aux -> MAYOR_QUE push_operador exp . exp_aux_pila
    (73) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 73 (exp_aux_pila -> .)
    COMA            reduce using rule 73 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 73 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 239

state 232

    (68) expression_choice_aux -> MAYOR_IGUAL push_operador exp . exp_aux_pila
    (73) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 73 (exp_aux_pila -> .)
    COMA            reduce using rule 73 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 73 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 240

state 233

    (65) expression_choice_aux -> DESIGUALDAD push_operador exp . exp_aux_pila
    (73) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 73 (exp_aux_pila -> .)
    COMA            reduce using rule 73 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 73 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 241

state 234

    (69) expression_choice_aux -> MENOR_IGUAL push_operador exp . exp_aux_pila
    (73) exp_aux_pila -> .

    CERRAR_PRNT     reduce using rule 73 (exp_aux_pila -> .)
    COMA            reduce using rule 73 (exp_aux_pila -> .)
    PUNTO_COMA      reduce using rule 73 (exp_aux_pila -> .)

    exp_aux_pila                   shift and go to state 242

state 235

    (53) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 . else ifcuad3
    (54) else -> . ELSE block
    (55) else -> .

    ELSE            shift and go to state 244
    ID              reduce using rule 55 (else -> .)
    IF              reduce using rule 55 (else -> .)
    PRINT           reduce using rule 55 (else -> .)
    VAR             reduce using rule 55 (else -> .)
    WHILE           reduce using rule 55 (else -> .)
    DO              reduce using rule 55 (else -> .)
    PENUP           reduce using rule 55 (else -> .)
    PENDOWN         reduce using rule 55 (else -> .)
    ERASE           reduce using rule 55 (else -> .)
    TURNLEFT        reduce using rule 55 (else -> .)
    TURNRIGHT       reduce using rule 55 (else -> .)
    MOVE            reduce using rule 55 (else -> .)
    CERRAR_LLAVE    reduce using rule 55 (else -> .)
    RETURN          reduce using rule 55 (else -> .)

    else                           shift and go to state 243

state 236

    (59) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 245


state 237

    (58) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .

    ID              reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    IF              reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PRINT           reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    VAR             reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    WHILE           reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    DO              reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PENUP           reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PENDOWN         reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    ERASE           reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    TURNLEFT        reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    TURNRIGHT       reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    MOVE            reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    RETURN          reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    CERRAR_LLAVE    reduce using rule 58 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)


state 238

    (67) expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 67 (expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .)
    COMA            reduce using rule 67 (expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 67 (expression_choice_aux -> MENOR_QUE push_operador exp exp_aux_pila .)


state 239

    (66) expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 66 (expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .)
    COMA            reduce using rule 66 (expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 66 (expression_choice_aux -> MAYOR_QUE push_operador exp exp_aux_pila .)


state 240

    (68) expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 68 (expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .)
    COMA            reduce using rule 68 (expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 68 (expression_choice_aux -> MAYOR_IGUAL push_operador exp exp_aux_pila .)


state 241

    (65) expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 65 (expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .)
    COMA            reduce using rule 65 (expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 65 (expression_choice_aux -> DESIGUALDAD push_operador exp exp_aux_pila .)


state 242

    (69) expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .

    CERRAR_PRNT     reduce using rule 69 (expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .)
    COMA            reduce using rule 69 (expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .)
    PUNTO_COMA      reduce using rule 69 (expression_choice_aux -> MENOR_IGUAL push_operador exp exp_aux_pila .)


state 243

    (53) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else . ifcuad3
    (121) ifcuad3 -> .

    ID              reduce using rule 121 (ifcuad3 -> .)
    IF              reduce using rule 121 (ifcuad3 -> .)
    PRINT           reduce using rule 121 (ifcuad3 -> .)
    VAR             reduce using rule 121 (ifcuad3 -> .)
    WHILE           reduce using rule 121 (ifcuad3 -> .)
    DO              reduce using rule 121 (ifcuad3 -> .)
    PENUP           reduce using rule 121 (ifcuad3 -> .)
    PENDOWN         reduce using rule 121 (ifcuad3 -> .)
    ERASE           reduce using rule 121 (ifcuad3 -> .)
    TURNLEFT        reduce using rule 121 (ifcuad3 -> .)
    TURNRIGHT       reduce using rule 121 (ifcuad3 -> .)
    MOVE            reduce using rule 121 (ifcuad3 -> .)
    CERRAR_LLAVE    reduce using rule 121 (ifcuad3 -> .)
    RETURN          reduce using rule 121 (ifcuad3 -> .)

    ifcuad3                        shift and go to state 246

state 244

    (54) else -> ELSE . block
    (36) block -> . ABRIR_LLAVE estatuto_loop CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 29

    block                          shift and go to state 247

state 245

    (59) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .

    ID              reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    IF              reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 59 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)


state 246

    (53) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .

    ID              reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    IF              reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PRINT           reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    VAR             reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    WHILE           reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    DO              reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PENUP           reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PENDOWN         reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    ERASE           reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    TURNLEFT        reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    TURNRIGHT       reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    MOVE            reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    RETURN          reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    CERRAR_LLAVE    reduce using rule 53 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)


state 247

    (54) else -> ELSE block .

    ID              reduce using rule 54 (else -> ELSE block .)
    IF              reduce using rule 54 (else -> ELSE block .)
    PRINT           reduce using rule 54 (else -> ELSE block .)
    VAR             reduce using rule 54 (else -> ELSE block .)
    WHILE           reduce using rule 54 (else -> ELSE block .)
    DO              reduce using rule 54 (else -> ELSE block .)
    PENUP           reduce using rule 54 (else -> ELSE block .)
    PENDOWN         reduce using rule 54 (else -> ELSE block .)
    ERASE           reduce using rule 54 (else -> ELSE block .)
    TURNLEFT        reduce using rule 54 (else -> ELSE block .)
    TURNRIGHT       reduce using rule 54 (else -> ELSE block .)
    MOVE            reduce using rule 54 (else -> ELSE block .)
    CERRAR_LLAVE    reduce using rule 54 (else -> ELSE block .)
    RETURN          reduce using rule 54 (else -> ELSE block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 38 resolved as shift
