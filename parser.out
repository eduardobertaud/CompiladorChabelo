Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID PUNTO_COMA vars body END
Rule 2     vars -> var_body
Rule 3     vars -> <empty>
Rule 4     var_body -> VAR type ID array PUNTO_COMA var_loop
Rule 5     array -> ABRIR_CORCH CTE_I CERRAR_CORCH
Rule 6     array -> <empty>
Rule 7     var_loop -> var_body
Rule 8     var_loop -> <empty>
Rule 9     type -> INT
Rule 10    type -> FLOAT
Rule 11    type -> STRING
Rule 12    type -> BOOL
Rule 13    type -> VOID
Rule 14    body -> functions fmain
Rule 15    functions -> functions_body functions_params block functions_loop
Rule 16    functions -> <empty>
Rule 17    functions_body -> FUNC type ID
Rule 18    functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT
Rule 19    functions_loop -> functions_aux
Rule 20    functions_loop -> <empty>
Rule 21    functions_aux -> functions_body functions_params block functions_loop
Rule 22    params_aux -> params params_loop
Rule 23    params_aux -> <empty>
Rule 24    params -> type ID
Rule 25    params_loop_aux -> params params_loop
Rule 26    params_loop -> COMA params_loop_aux
Rule 27    params_loop -> <empty>
Rule 28    block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE
Rule 29    return -> RETURN expression PUNTO_COMA
Rule 30    return -> <empty>
Rule 31    fmain -> fmain_aux block
Rule 32    fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT
Rule 33    estatuto_loop -> estatuto estatuto_loop
Rule 34    estatuto_loop -> <empty>
Rule 35    estatuto -> condition
Rule 36    estatuto -> loop
Rule 37    estatuto -> assignment
Rule 38    estatuto -> call
Rule 39    estatuto -> fprint
Rule 40    estatuto -> special_function
Rule 41    estatuto -> var_body
Rule 42    fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
Rule 43    write_choice -> expression
Rule 44    write_choice -> const_string
Rule 45    const_string -> CTE_S
Rule 46    condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
Rule 47    else -> ELSE block
Rule 48    else -> <empty>
Rule 49    loop -> while
Rule 50    loop -> do_while
Rule 51    while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
Rule 52    do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
Rule 53    assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA
Rule 54    expression -> exp expression_choice
Rule 55    expression_choice -> expression_choice_aux
Rule 56    expression_choice -> <empty>
Rule 57    expression_choice_aux -> IGUALDAD push_operador exp
Rule 58    expression_choice_aux -> DESIGUALDAD push_operador exp
Rule 59    expression_choice_aux -> MAYOR_QUE push_operador exp
Rule 60    expression_choice_aux -> MENOR_QUE push_operador exp
Rule 61    expression_choice_aux -> MAYOR_IGUAL push_operador exp
Rule 62    expression_choice_aux -> MENOR_IGUAL push_operador exp
Rule 63    exp -> term exp_choice
Rule 64    exp_choice -> exp_aux
Rule 65    exp_choice -> <empty>
Rule 66    exp_aux -> SUMA push_operador exp
Rule 67    exp_aux -> RESTA push_operador exp
Rule 68    term -> factor term_choice
Rule 69    term_choice -> term_aux
Rule 70    term_choice -> <empty>
Rule 71    term_aux -> MULTIPLICACION push_operador term
Rule 72    term_aux -> DIVISION push_operador term
Rule 73    factor -> ABRIR_PRNT expression CERRAR_PRNT
Rule 74    factor -> factor_choice var_cte
Rule 75    factor_choice -> SUMA
Rule 76    factor_choice -> RESTA
Rule 77    factor_choice -> <empty>
Rule 78    var_cte -> const_int
Rule 79    var_cte -> const_float
Rule 80    var_cte -> const_bool
Rule 81    var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH
Rule 82    var_cte -> ID var_decision
Rule 83    var_decision -> var_func
Rule 84    var_decision -> push_operando
Rule 85    const_int -> CTE_I push_operando
Rule 86    const_float -> CTE_F push_operando
Rule 87    const_bool -> TRUE push_operando
Rule 88    const_bool -> FALSE push_operando
Rule 89    var_func -> ABRIR_PRNT params_call CERRAR_PRNT
Rule 90    call -> ID var_func PUNTO_COMA
Rule 91    params_call -> expression params_call_loop
Rule 92    params_call -> <empty>
Rule 93    params_call_loop -> COMA expression params_call_loop
Rule 94    params_call_loop -> <empty>
Rule 95    list_elements -> expression list_elements_loop
Rule 96    list_elements -> <empty>
Rule 97    list_elements_loop -> COMA expression list_elements_loop
Rule 98    list_elements_loop -> <empty>
Rule 99    special_function -> fpen_up
Rule 100   special_function -> fpen_down
Rule 101   special_function -> ferase
Rule 102   special_function -> fturn_left
Rule 103   special_function -> fturn_right
Rule 104   special_function -> fmove
Rule 105   fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 106   fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 107   ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
Rule 108   fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
Rule 109   fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
Rule 110   fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA
Rule 111   direction -> FORWARD
Rule 112   direction -> BACKWARD
Rule 113   push_operando -> <empty>
Rule 114   push_operador -> <empty>
Rule 115   ifcuad1 -> <empty>
Rule 116   ifcuad2 -> <empty>
Rule 117   ifcuad3 -> <empty>
Rule 118   whilecuad1 -> <empty>
Rule 119   whilecuad2 -> <empty>
Rule 120   whilecuad3 -> <empty>
Rule 121   docuad1 -> <empty>
Rule 122   docuad2 -> <empty>

Terminals, with rules where they appear

ABRIR_CORCH          : 5 81
ABRIR_LLAVE          : 28
ABRIR_PRNT           : 18 32 42 46 51 52 73 89 105 106 107 108 109 110
BACKWARD             : 112
BOOL                 : 12
CERRAR_CORCH         : 5 81
CERRAR_LLAVE         : 28
CERRAR_PRNT          : 18 32 42 46 51 52 73 89 105 106 107 108 109 110
COMA                 : 26 93 97 110
CTE_F                : 86
CTE_I                : 5 85
CTE_S                : 45
DESIGUALDAD          : 58
DIVISION             : 72
DO                   : 52
ELSE                 : 47
END                  : 1
ERASE                : 107
FALSE                : 88
FLOAT                : 10
FORWARD              : 111
FUNC                 : 17
ID                   : 1 4 17 24 53 82 90
IF                   : 46
IGUAL                : 53
IGUALDAD             : 57
INT                  : 9
MAIN                 : 32
MAYOR_IGUAL          : 61
MAYOR_QUE            : 59
MENOR_IGUAL          : 62
MENOR_QUE            : 60
MOVE                 : 110
MULTIPLICACION       : 71
PENDOWN              : 106
PENUP                : 105
PRINT                : 42
PROGRAM              : 1
PUNTO_COMA           : 1 4 29 42 52 53 90 105 106 107 108 109 110
RESTA                : 67 76
RETURN               : 29
STRING               : 11
SUMA                 : 66 75
TRUE                 : 87
TURNLEFT             : 108
TURNRIGHT            : 109
VAR                  : 4
VOID                 : 13
WHILE                : 51 52
error                : 

Nonterminals, with rules where they appear

array                : 4
assignment           : 37
block                : 15 21 31 46 47 51 52
body                 : 1
call                 : 38
condition            : 35
const_bool           : 80
const_float          : 79
const_int            : 78
const_string         : 44
direction            : 110
do_while             : 50
docuad1              : 52
docuad2              : 52
else                 : 46
estatuto             : 33
estatuto_loop        : 28 33
exp                  : 54 57 58 59 60 61 62 66 67
exp_aux              : 64
exp_choice           : 63
expression           : 29 43 46 51 52 53 73 91 93 95 97 108 109 110
expression_choice    : 54
expression_choice_aux : 55
factor               : 68
factor_choice        : 74
ferase               : 101
fmain                : 14
fmain_aux            : 31
fmove                : 104
fpen_down            : 100
fpen_up              : 99
fprint               : 39
fturn_left           : 102
fturn_right          : 103
functions            : 14
functions_aux        : 19
functions_body       : 15 21
functions_loop       : 15 21
functions_params     : 15 21
ifcuad1              : 46
ifcuad2              : 46
ifcuad3              : 46
list_elements        : 81
list_elements_loop   : 95 97
loop                 : 36
params               : 22 25
params_aux           : 18
params_call          : 89
params_call_loop     : 91 93
params_loop          : 22 25
params_loop_aux      : 26
program              : 0
push_operador        : 53 57 58 59 60 61 62 66 67 71 72
push_operando        : 53 84 85 86 87 88
return               : 28
special_function     : 40
term                 : 63 71 72
term_aux             : 69
term_choice          : 68
type                 : 4 17 24
var_body             : 2 7 41
var_cte              : 74
var_decision         : 82
var_func             : 83 90
var_loop             : 4
vars                 : 1
while                : 49
whilecuad1           : 51
whilecuad2           : 51
whilecuad3           : 51
write_choice         : 42

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID PUNTO_COMA vars body END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID PUNTO_COMA vars body END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . PUNTO_COMA vars body END

    PUNTO_COMA      shift and go to state 4


state 4

    (1) program -> PROGRAM ID PUNTO_COMA . vars body END
    (2) vars -> . var_body
    (3) vars -> .
    (4) var_body -> . VAR type ID array PUNTO_COMA var_loop

    FUNC            reduce using rule 3 (vars -> .)
    MAIN            reduce using rule 3 (vars -> .)
    VAR             shift and go to state 7

    vars                           shift and go to state 5
    var_body                       shift and go to state 6

state 5

    (1) program -> PROGRAM ID PUNTO_COMA vars . body END
    (14) body -> . functions fmain
    (15) functions -> . functions_body functions_params block functions_loop
    (16) functions -> .
    (17) functions_body -> . FUNC type ID

    MAIN            reduce using rule 16 (functions -> .)
    FUNC            shift and go to state 10

    body                           shift and go to state 8
    functions                      shift and go to state 9
    functions_body                 shift and go to state 11

state 6

    (2) vars -> var_body .

    FUNC            reduce using rule 2 (vars -> var_body .)
    MAIN            reduce using rule 2 (vars -> var_body .)


state 7

    (4) var_body -> VAR . type ID array PUNTO_COMA var_loop
    (9) type -> . INT
    (10) type -> . FLOAT
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 16
    VOID            shift and go to state 15

    type                           shift and go to state 17

state 8

    (1) program -> PROGRAM ID PUNTO_COMA vars body . END

    END             shift and go to state 18


state 9

    (14) body -> functions . fmain
    (31) fmain -> . fmain_aux block
    (32) fmain_aux -> . MAIN ABRIR_PRNT CERRAR_PRNT

    MAIN            shift and go to state 20

    fmain                          shift and go to state 21
    fmain_aux                      shift and go to state 19

state 10

    (17) functions_body -> FUNC . type ID
    (9) type -> . INT
    (10) type -> . FLOAT
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 16
    VOID            shift and go to state 15

    type                           shift and go to state 22

state 11

    (15) functions -> functions_body . functions_params block functions_loop
    (18) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 24

    functions_params               shift and go to state 23

state 12

    (10) type -> FLOAT .

    ID              reduce using rule 10 (type -> FLOAT .)


state 13

    (11) type -> STRING .

    ID              reduce using rule 11 (type -> STRING .)


state 14

    (9) type -> INT .

    ID              reduce using rule 9 (type -> INT .)


state 15

    (13) type -> VOID .

    ID              reduce using rule 13 (type -> VOID .)


state 16

    (12) type -> BOOL .

    ID              reduce using rule 12 (type -> BOOL .)


state 17

    (4) var_body -> VAR type . ID array PUNTO_COMA var_loop

    ID              shift and go to state 25


state 18

    (1) program -> PROGRAM ID PUNTO_COMA vars body END .

    $end            reduce using rule 1 (program -> PROGRAM ID PUNTO_COMA vars body END .)


state 19

    (31) fmain -> fmain_aux . block
    (28) block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 26

    block                          shift and go to state 27

state 20

    (32) fmain_aux -> MAIN . ABRIR_PRNT CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 28


state 21

    (14) body -> functions fmain .

    END             reduce using rule 14 (body -> functions fmain .)


state 22

    (17) functions_body -> FUNC type . ID

    ID              shift and go to state 29


state 23

    (15) functions -> functions_body functions_params . block functions_loop
    (28) block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 26

    block                          shift and go to state 30

state 24

    (18) functions_params -> ABRIR_PRNT . params_aux CERRAR_PRNT
    (22) params_aux -> . params params_loop
    (23) params_aux -> .
    (24) params -> . type ID
    (9) type -> . INT
    (10) type -> . FLOAT
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . VOID

    CERRAR_PRNT     reduce using rule 23 (params_aux -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 16
    VOID            shift and go to state 15

    type                           shift and go to state 33
    params_aux                     shift and go to state 31
    params                         shift and go to state 32

state 25

    (4) var_body -> VAR type ID . array PUNTO_COMA var_loop
    (5) array -> . ABRIR_CORCH CTE_I CERRAR_CORCH
    (6) array -> .

    ABRIR_CORCH     shift and go to state 34
    PUNTO_COMA      reduce using rule 6 (array -> .)

    array                          shift and go to state 35

state 26

    (28) block -> ABRIR_LLAVE . estatuto_loop return CERRAR_LLAVE
    (33) estatuto_loop -> . estatuto estatuto_loop
    (34) estatuto_loop -> .
    (35) estatuto -> . condition
    (36) estatuto -> . loop
    (37) estatuto -> . assignment
    (38) estatuto -> . call
    (39) estatuto -> . fprint
    (40) estatuto -> . special_function
    (41) estatuto -> . var_body
    (46) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (49) loop -> . while
    (50) loop -> . do_while
    (53) assignment -> . ID push_operando IGUAL push_operador expression PUNTO_COMA
    (90) call -> . ID var_func PUNTO_COMA
    (42) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (99) special_function -> . fpen_up
    (100) special_function -> . fpen_down
    (101) special_function -> . ferase
    (102) special_function -> . fturn_left
    (103) special_function -> . fturn_right
    (104) special_function -> . fmove
    (4) var_body -> . VAR type ID array PUNTO_COMA var_loop
    (51) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (52) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (105) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (106) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (107) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (108) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (109) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (110) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    RETURN          reduce using rule 34 (estatuto_loop -> .)
    CERRAR_LLAVE    reduce using rule 34 (estatuto_loop -> .)
    IF              shift and go to state 60
    ID              shift and go to state 44
    PRINT           shift and go to state 40
    VAR             shift and go to state 7
    WHILE           shift and go to state 38
    DO              shift and go to state 37
    PENUP           shift and go to state 41
    PENDOWN         shift and go to state 43
    ERASE           shift and go to state 53
    TURNLEFT        shift and go to state 50
    TURNRIGHT       shift and go to state 57
    MOVE            shift and go to state 36

    loop                           shift and go to state 63
    estatuto                       shift and go to state 42
    fturn_right                    shift and go to state 45
    call                           shift and go to state 46
    ferase                         shift and go to state 47
    fpen_up                        shift and go to state 48
    fpen_down                      shift and go to state 49
    do_while                       shift and go to state 51
    fmove                          shift and go to state 52
    assignment                     shift and go to state 54
    special_function               shift and go to state 55
    var_body                       shift and go to state 56
    estatuto_loop                  shift and go to state 58
    condition                      shift and go to state 59
    fprint                         shift and go to state 61
    fturn_left                     shift and go to state 39
    while                          shift and go to state 62

state 27

    (31) fmain -> fmain_aux block .

    END             reduce using rule 31 (fmain -> fmain_aux block .)


state 28

    (32) fmain_aux -> MAIN ABRIR_PRNT . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 64


state 29

    (17) functions_body -> FUNC type ID .

    ABRIR_PRNT      reduce using rule 17 (functions_body -> FUNC type ID .)


state 30

    (15) functions -> functions_body functions_params block . functions_loop
    (19) functions_loop -> . functions_aux
    (20) functions_loop -> .
    (21) functions_aux -> . functions_body functions_params block functions_loop
    (17) functions_body -> . FUNC type ID

    MAIN            reduce using rule 20 (functions_loop -> .)
    FUNC            shift and go to state 10

    functions_body                 shift and go to state 65
    functions_loop                 shift and go to state 66
    functions_aux                  shift and go to state 67

state 31

    (18) functions_params -> ABRIR_PRNT params_aux . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 68


state 32

    (22) params_aux -> params . params_loop
    (26) params_loop -> . COMA params_loop_aux
    (27) params_loop -> .

    COMA            shift and go to state 70
    CERRAR_PRNT     reduce using rule 27 (params_loop -> .)

    params_loop                    shift and go to state 69

state 33

    (24) params -> type . ID

    ID              shift and go to state 71


state 34

    (5) array -> ABRIR_CORCH . CTE_I CERRAR_CORCH

    CTE_I           shift and go to state 72


state 35

    (4) var_body -> VAR type ID array . PUNTO_COMA var_loop

    PUNTO_COMA      shift and go to state 73


state 36

    (110) fmove -> MOVE . ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 74


state 37

    (52) do_while -> DO . docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (121) docuad1 -> .

    ABRIR_LLAVE     reduce using rule 121 (docuad1 -> .)

    docuad1                        shift and go to state 75

state 38

    (51) while -> WHILE . ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3

    ABRIR_PRNT      shift and go to state 76


state 39

    (102) special_function -> fturn_left .

    IF              reduce using rule 102 (special_function -> fturn_left .)
    ID              reduce using rule 102 (special_function -> fturn_left .)
    PRINT           reduce using rule 102 (special_function -> fturn_left .)
    VAR             reduce using rule 102 (special_function -> fturn_left .)
    WHILE           reduce using rule 102 (special_function -> fturn_left .)
    DO              reduce using rule 102 (special_function -> fturn_left .)
    PENUP           reduce using rule 102 (special_function -> fturn_left .)
    PENDOWN         reduce using rule 102 (special_function -> fturn_left .)
    ERASE           reduce using rule 102 (special_function -> fturn_left .)
    TURNLEFT        reduce using rule 102 (special_function -> fturn_left .)
    TURNRIGHT       reduce using rule 102 (special_function -> fturn_left .)
    MOVE            reduce using rule 102 (special_function -> fturn_left .)
    RETURN          reduce using rule 102 (special_function -> fturn_left .)
    CERRAR_LLAVE    reduce using rule 102 (special_function -> fturn_left .)


state 40

    (42) fprint -> PRINT . ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 77


state 41

    (105) fpen_up -> PENUP . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 78


state 42

    (33) estatuto_loop -> estatuto . estatuto_loop
    (33) estatuto_loop -> . estatuto estatuto_loop
    (34) estatuto_loop -> .
    (35) estatuto -> . condition
    (36) estatuto -> . loop
    (37) estatuto -> . assignment
    (38) estatuto -> . call
    (39) estatuto -> . fprint
    (40) estatuto -> . special_function
    (41) estatuto -> . var_body
    (46) condition -> . IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (49) loop -> . while
    (50) loop -> . do_while
    (53) assignment -> . ID push_operando IGUAL push_operador expression PUNTO_COMA
    (90) call -> . ID var_func PUNTO_COMA
    (42) fprint -> . PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA
    (99) special_function -> . fpen_up
    (100) special_function -> . fpen_down
    (101) special_function -> . ferase
    (102) special_function -> . fturn_left
    (103) special_function -> . fturn_right
    (104) special_function -> . fmove
    (4) var_body -> . VAR type ID array PUNTO_COMA var_loop
    (51) while -> . WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (52) do_while -> . DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (105) fpen_up -> . PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (106) fpen_down -> . PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (107) ferase -> . ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA
    (108) fturn_left -> . TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (109) fturn_right -> . TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA
    (110) fmove -> . MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA

    RETURN          reduce using rule 34 (estatuto_loop -> .)
    CERRAR_LLAVE    reduce using rule 34 (estatuto_loop -> .)
    IF              shift and go to state 60
    ID              shift and go to state 44
    PRINT           shift and go to state 40
    VAR             shift and go to state 7
    WHILE           shift and go to state 38
    DO              shift and go to state 37
    PENUP           shift and go to state 41
    PENDOWN         shift and go to state 43
    ERASE           shift and go to state 53
    TURNLEFT        shift and go to state 50
    TURNRIGHT       shift and go to state 57
    MOVE            shift and go to state 36

    loop                           shift and go to state 63
    estatuto                       shift and go to state 42
    fturn_right                    shift and go to state 45
    call                           shift and go to state 46
    ferase                         shift and go to state 47
    fpen_up                        shift and go to state 48
    fpen_down                      shift and go to state 49
    do_while                       shift and go to state 51
    fmove                          shift and go to state 52
    assignment                     shift and go to state 54
    special_function               shift and go to state 55
    var_body                       shift and go to state 56
    estatuto_loop                  shift and go to state 79
    condition                      shift and go to state 59
    fprint                         shift and go to state 61
    fturn_left                     shift and go to state 39
    while                          shift and go to state 62

state 43

    (106) fpen_down -> PENDOWN . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 80


state 44

    (53) assignment -> ID . push_operando IGUAL push_operador expression PUNTO_COMA
    (90) call -> ID . var_func PUNTO_COMA
    (113) push_operando -> .
    (89) var_func -> . ABRIR_PRNT params_call CERRAR_PRNT

    IGUAL           reduce using rule 113 (push_operando -> .)
    ABRIR_PRNT      shift and go to state 83

    push_operando                  shift and go to state 81
    var_func                       shift and go to state 82

state 45

    (103) special_function -> fturn_right .

    IF              reduce using rule 103 (special_function -> fturn_right .)
    ID              reduce using rule 103 (special_function -> fturn_right .)
    PRINT           reduce using rule 103 (special_function -> fturn_right .)
    VAR             reduce using rule 103 (special_function -> fturn_right .)
    WHILE           reduce using rule 103 (special_function -> fturn_right .)
    DO              reduce using rule 103 (special_function -> fturn_right .)
    PENUP           reduce using rule 103 (special_function -> fturn_right .)
    PENDOWN         reduce using rule 103 (special_function -> fturn_right .)
    ERASE           reduce using rule 103 (special_function -> fturn_right .)
    TURNLEFT        reduce using rule 103 (special_function -> fturn_right .)
    TURNRIGHT       reduce using rule 103 (special_function -> fturn_right .)
    MOVE            reduce using rule 103 (special_function -> fturn_right .)
    RETURN          reduce using rule 103 (special_function -> fturn_right .)
    CERRAR_LLAVE    reduce using rule 103 (special_function -> fturn_right .)


state 46

    (38) estatuto -> call .

    IF              reduce using rule 38 (estatuto -> call .)
    ID              reduce using rule 38 (estatuto -> call .)
    PRINT           reduce using rule 38 (estatuto -> call .)
    VAR             reduce using rule 38 (estatuto -> call .)
    WHILE           reduce using rule 38 (estatuto -> call .)
    DO              reduce using rule 38 (estatuto -> call .)
    PENUP           reduce using rule 38 (estatuto -> call .)
    PENDOWN         reduce using rule 38 (estatuto -> call .)
    ERASE           reduce using rule 38 (estatuto -> call .)
    TURNLEFT        reduce using rule 38 (estatuto -> call .)
    TURNRIGHT       reduce using rule 38 (estatuto -> call .)
    MOVE            reduce using rule 38 (estatuto -> call .)
    RETURN          reduce using rule 38 (estatuto -> call .)
    CERRAR_LLAVE    reduce using rule 38 (estatuto -> call .)


state 47

    (101) special_function -> ferase .

    IF              reduce using rule 101 (special_function -> ferase .)
    ID              reduce using rule 101 (special_function -> ferase .)
    PRINT           reduce using rule 101 (special_function -> ferase .)
    VAR             reduce using rule 101 (special_function -> ferase .)
    WHILE           reduce using rule 101 (special_function -> ferase .)
    DO              reduce using rule 101 (special_function -> ferase .)
    PENUP           reduce using rule 101 (special_function -> ferase .)
    PENDOWN         reduce using rule 101 (special_function -> ferase .)
    ERASE           reduce using rule 101 (special_function -> ferase .)
    TURNLEFT        reduce using rule 101 (special_function -> ferase .)
    TURNRIGHT       reduce using rule 101 (special_function -> ferase .)
    MOVE            reduce using rule 101 (special_function -> ferase .)
    RETURN          reduce using rule 101 (special_function -> ferase .)
    CERRAR_LLAVE    reduce using rule 101 (special_function -> ferase .)


state 48

    (99) special_function -> fpen_up .

    IF              reduce using rule 99 (special_function -> fpen_up .)
    ID              reduce using rule 99 (special_function -> fpen_up .)
    PRINT           reduce using rule 99 (special_function -> fpen_up .)
    VAR             reduce using rule 99 (special_function -> fpen_up .)
    WHILE           reduce using rule 99 (special_function -> fpen_up .)
    DO              reduce using rule 99 (special_function -> fpen_up .)
    PENUP           reduce using rule 99 (special_function -> fpen_up .)
    PENDOWN         reduce using rule 99 (special_function -> fpen_up .)
    ERASE           reduce using rule 99 (special_function -> fpen_up .)
    TURNLEFT        reduce using rule 99 (special_function -> fpen_up .)
    TURNRIGHT       reduce using rule 99 (special_function -> fpen_up .)
    MOVE            reduce using rule 99 (special_function -> fpen_up .)
    RETURN          reduce using rule 99 (special_function -> fpen_up .)
    CERRAR_LLAVE    reduce using rule 99 (special_function -> fpen_up .)


state 49

    (100) special_function -> fpen_down .

    IF              reduce using rule 100 (special_function -> fpen_down .)
    ID              reduce using rule 100 (special_function -> fpen_down .)
    PRINT           reduce using rule 100 (special_function -> fpen_down .)
    VAR             reduce using rule 100 (special_function -> fpen_down .)
    WHILE           reduce using rule 100 (special_function -> fpen_down .)
    DO              reduce using rule 100 (special_function -> fpen_down .)
    PENUP           reduce using rule 100 (special_function -> fpen_down .)
    PENDOWN         reduce using rule 100 (special_function -> fpen_down .)
    ERASE           reduce using rule 100 (special_function -> fpen_down .)
    TURNLEFT        reduce using rule 100 (special_function -> fpen_down .)
    TURNRIGHT       reduce using rule 100 (special_function -> fpen_down .)
    MOVE            reduce using rule 100 (special_function -> fpen_down .)
    RETURN          reduce using rule 100 (special_function -> fpen_down .)
    CERRAR_LLAVE    reduce using rule 100 (special_function -> fpen_down .)


state 50

    (108) fturn_left -> TURNLEFT . ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 84


state 51

    (50) loop -> do_while .

    IF              reduce using rule 50 (loop -> do_while .)
    ID              reduce using rule 50 (loop -> do_while .)
    PRINT           reduce using rule 50 (loop -> do_while .)
    VAR             reduce using rule 50 (loop -> do_while .)
    WHILE           reduce using rule 50 (loop -> do_while .)
    DO              reduce using rule 50 (loop -> do_while .)
    PENUP           reduce using rule 50 (loop -> do_while .)
    PENDOWN         reduce using rule 50 (loop -> do_while .)
    ERASE           reduce using rule 50 (loop -> do_while .)
    TURNLEFT        reduce using rule 50 (loop -> do_while .)
    TURNRIGHT       reduce using rule 50 (loop -> do_while .)
    MOVE            reduce using rule 50 (loop -> do_while .)
    RETURN          reduce using rule 50 (loop -> do_while .)
    CERRAR_LLAVE    reduce using rule 50 (loop -> do_while .)


state 52

    (104) special_function -> fmove .

    IF              reduce using rule 104 (special_function -> fmove .)
    ID              reduce using rule 104 (special_function -> fmove .)
    PRINT           reduce using rule 104 (special_function -> fmove .)
    VAR             reduce using rule 104 (special_function -> fmove .)
    WHILE           reduce using rule 104 (special_function -> fmove .)
    DO              reduce using rule 104 (special_function -> fmove .)
    PENUP           reduce using rule 104 (special_function -> fmove .)
    PENDOWN         reduce using rule 104 (special_function -> fmove .)
    ERASE           reduce using rule 104 (special_function -> fmove .)
    TURNLEFT        reduce using rule 104 (special_function -> fmove .)
    TURNRIGHT       reduce using rule 104 (special_function -> fmove .)
    MOVE            reduce using rule 104 (special_function -> fmove .)
    RETURN          reduce using rule 104 (special_function -> fmove .)
    CERRAR_LLAVE    reduce using rule 104 (special_function -> fmove .)


state 53

    (107) ferase -> ERASE . ABRIR_PRNT CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 85


state 54

    (37) estatuto -> assignment .

    IF              reduce using rule 37 (estatuto -> assignment .)
    ID              reduce using rule 37 (estatuto -> assignment .)
    PRINT           reduce using rule 37 (estatuto -> assignment .)
    VAR             reduce using rule 37 (estatuto -> assignment .)
    WHILE           reduce using rule 37 (estatuto -> assignment .)
    DO              reduce using rule 37 (estatuto -> assignment .)
    PENUP           reduce using rule 37 (estatuto -> assignment .)
    PENDOWN         reduce using rule 37 (estatuto -> assignment .)
    ERASE           reduce using rule 37 (estatuto -> assignment .)
    TURNLEFT        reduce using rule 37 (estatuto -> assignment .)
    TURNRIGHT       reduce using rule 37 (estatuto -> assignment .)
    MOVE            reduce using rule 37 (estatuto -> assignment .)
    RETURN          reduce using rule 37 (estatuto -> assignment .)
    CERRAR_LLAVE    reduce using rule 37 (estatuto -> assignment .)


state 55

    (40) estatuto -> special_function .

    IF              reduce using rule 40 (estatuto -> special_function .)
    ID              reduce using rule 40 (estatuto -> special_function .)
    PRINT           reduce using rule 40 (estatuto -> special_function .)
    VAR             reduce using rule 40 (estatuto -> special_function .)
    WHILE           reduce using rule 40 (estatuto -> special_function .)
    DO              reduce using rule 40 (estatuto -> special_function .)
    PENUP           reduce using rule 40 (estatuto -> special_function .)
    PENDOWN         reduce using rule 40 (estatuto -> special_function .)
    ERASE           reduce using rule 40 (estatuto -> special_function .)
    TURNLEFT        reduce using rule 40 (estatuto -> special_function .)
    TURNRIGHT       reduce using rule 40 (estatuto -> special_function .)
    MOVE            reduce using rule 40 (estatuto -> special_function .)
    RETURN          reduce using rule 40 (estatuto -> special_function .)
    CERRAR_LLAVE    reduce using rule 40 (estatuto -> special_function .)


state 56

    (41) estatuto -> var_body .

    IF              reduce using rule 41 (estatuto -> var_body .)
    ID              reduce using rule 41 (estatuto -> var_body .)
    PRINT           reduce using rule 41 (estatuto -> var_body .)
    VAR             reduce using rule 41 (estatuto -> var_body .)
    WHILE           reduce using rule 41 (estatuto -> var_body .)
    DO              reduce using rule 41 (estatuto -> var_body .)
    PENUP           reduce using rule 41 (estatuto -> var_body .)
    PENDOWN         reduce using rule 41 (estatuto -> var_body .)
    ERASE           reduce using rule 41 (estatuto -> var_body .)
    TURNLEFT        reduce using rule 41 (estatuto -> var_body .)
    TURNRIGHT       reduce using rule 41 (estatuto -> var_body .)
    MOVE            reduce using rule 41 (estatuto -> var_body .)
    RETURN          reduce using rule 41 (estatuto -> var_body .)
    CERRAR_LLAVE    reduce using rule 41 (estatuto -> var_body .)


state 57

    (109) fturn_right -> TURNRIGHT . ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 86


state 58

    (28) block -> ABRIR_LLAVE estatuto_loop . return CERRAR_LLAVE
    (29) return -> . RETURN expression PUNTO_COMA
    (30) return -> .

    RETURN          shift and go to state 88
    CERRAR_LLAVE    reduce using rule 30 (return -> .)

    return                         shift and go to state 87

state 59

    (35) estatuto -> condition .

    IF              reduce using rule 35 (estatuto -> condition .)
    ID              reduce using rule 35 (estatuto -> condition .)
    PRINT           reduce using rule 35 (estatuto -> condition .)
    VAR             reduce using rule 35 (estatuto -> condition .)
    WHILE           reduce using rule 35 (estatuto -> condition .)
    DO              reduce using rule 35 (estatuto -> condition .)
    PENUP           reduce using rule 35 (estatuto -> condition .)
    PENDOWN         reduce using rule 35 (estatuto -> condition .)
    ERASE           reduce using rule 35 (estatuto -> condition .)
    TURNLEFT        reduce using rule 35 (estatuto -> condition .)
    TURNRIGHT       reduce using rule 35 (estatuto -> condition .)
    MOVE            reduce using rule 35 (estatuto -> condition .)
    RETURN          reduce using rule 35 (estatuto -> condition .)
    CERRAR_LLAVE    reduce using rule 35 (estatuto -> condition .)


state 60

    (46) condition -> IF . ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3

    ABRIR_PRNT      shift and go to state 89


state 61

    (39) estatuto -> fprint .

    IF              reduce using rule 39 (estatuto -> fprint .)
    ID              reduce using rule 39 (estatuto -> fprint .)
    PRINT           reduce using rule 39 (estatuto -> fprint .)
    VAR             reduce using rule 39 (estatuto -> fprint .)
    WHILE           reduce using rule 39 (estatuto -> fprint .)
    DO              reduce using rule 39 (estatuto -> fprint .)
    PENUP           reduce using rule 39 (estatuto -> fprint .)
    PENDOWN         reduce using rule 39 (estatuto -> fprint .)
    ERASE           reduce using rule 39 (estatuto -> fprint .)
    TURNLEFT        reduce using rule 39 (estatuto -> fprint .)
    TURNRIGHT       reduce using rule 39 (estatuto -> fprint .)
    MOVE            reduce using rule 39 (estatuto -> fprint .)
    RETURN          reduce using rule 39 (estatuto -> fprint .)
    CERRAR_LLAVE    reduce using rule 39 (estatuto -> fprint .)


state 62

    (49) loop -> while .

    IF              reduce using rule 49 (loop -> while .)
    ID              reduce using rule 49 (loop -> while .)
    PRINT           reduce using rule 49 (loop -> while .)
    VAR             reduce using rule 49 (loop -> while .)
    WHILE           reduce using rule 49 (loop -> while .)
    DO              reduce using rule 49 (loop -> while .)
    PENUP           reduce using rule 49 (loop -> while .)
    PENDOWN         reduce using rule 49 (loop -> while .)
    ERASE           reduce using rule 49 (loop -> while .)
    TURNLEFT        reduce using rule 49 (loop -> while .)
    TURNRIGHT       reduce using rule 49 (loop -> while .)
    MOVE            reduce using rule 49 (loop -> while .)
    RETURN          reduce using rule 49 (loop -> while .)
    CERRAR_LLAVE    reduce using rule 49 (loop -> while .)


state 63

    (36) estatuto -> loop .

    IF              reduce using rule 36 (estatuto -> loop .)
    ID              reduce using rule 36 (estatuto -> loop .)
    PRINT           reduce using rule 36 (estatuto -> loop .)
    VAR             reduce using rule 36 (estatuto -> loop .)
    WHILE           reduce using rule 36 (estatuto -> loop .)
    DO              reduce using rule 36 (estatuto -> loop .)
    PENUP           reduce using rule 36 (estatuto -> loop .)
    PENDOWN         reduce using rule 36 (estatuto -> loop .)
    ERASE           reduce using rule 36 (estatuto -> loop .)
    TURNLEFT        reduce using rule 36 (estatuto -> loop .)
    TURNRIGHT       reduce using rule 36 (estatuto -> loop .)
    MOVE            reduce using rule 36 (estatuto -> loop .)
    RETURN          reduce using rule 36 (estatuto -> loop .)
    CERRAR_LLAVE    reduce using rule 36 (estatuto -> loop .)


state 64

    (32) fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT .

    ABRIR_LLAVE     reduce using rule 32 (fmain_aux -> MAIN ABRIR_PRNT CERRAR_PRNT .)


state 65

    (21) functions_aux -> functions_body . functions_params block functions_loop
    (18) functions_params -> . ABRIR_PRNT params_aux CERRAR_PRNT

    ABRIR_PRNT      shift and go to state 24

    functions_params               shift and go to state 90

state 66

    (15) functions -> functions_body functions_params block functions_loop .

    MAIN            reduce using rule 15 (functions -> functions_body functions_params block functions_loop .)


state 67

    (19) functions_loop -> functions_aux .

    MAIN            reduce using rule 19 (functions_loop -> functions_aux .)


state 68

    (18) functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT .

    ABRIR_LLAVE     reduce using rule 18 (functions_params -> ABRIR_PRNT params_aux CERRAR_PRNT .)


state 69

    (22) params_aux -> params params_loop .

    CERRAR_PRNT     reduce using rule 22 (params_aux -> params params_loop .)


state 70

    (26) params_loop -> COMA . params_loop_aux
    (25) params_loop_aux -> . params params_loop
    (24) params -> . type ID
    (9) type -> . INT
    (10) type -> . FLOAT
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOL            shift and go to state 16
    VOID            shift and go to state 15

    type                           shift and go to state 33
    params_loop_aux                shift and go to state 91
    params                         shift and go to state 92

state 71

    (24) params -> type ID .

    COMA            reduce using rule 24 (params -> type ID .)
    CERRAR_PRNT     reduce using rule 24 (params -> type ID .)


state 72

    (5) array -> ABRIR_CORCH CTE_I . CERRAR_CORCH

    CERRAR_CORCH    shift and go to state 93


state 73

    (4) var_body -> VAR type ID array PUNTO_COMA . var_loop
    (7) var_loop -> . var_body
    (8) var_loop -> .
    (4) var_body -> . VAR type ID array PUNTO_COMA var_loop

  ! shift/reduce conflict for VAR resolved as shift
    FUNC            reduce using rule 8 (var_loop -> .)
    MAIN            reduce using rule 8 (var_loop -> .)
    IF              reduce using rule 8 (var_loop -> .)
    ID              reduce using rule 8 (var_loop -> .)
    PRINT           reduce using rule 8 (var_loop -> .)
    WHILE           reduce using rule 8 (var_loop -> .)
    DO              reduce using rule 8 (var_loop -> .)
    PENUP           reduce using rule 8 (var_loop -> .)
    PENDOWN         reduce using rule 8 (var_loop -> .)
    ERASE           reduce using rule 8 (var_loop -> .)
    TURNLEFT        reduce using rule 8 (var_loop -> .)
    TURNRIGHT       reduce using rule 8 (var_loop -> .)
    MOVE            reduce using rule 8 (var_loop -> .)
    RETURN          reduce using rule 8 (var_loop -> .)
    CERRAR_LLAVE    reduce using rule 8 (var_loop -> .)
    VAR             shift and go to state 7

  ! VAR             [ reduce using rule 8 (var_loop -> .) ]

    var_loop                       shift and go to state 94
    var_body                       shift and go to state 95

state 74

    (110) fmove -> MOVE ABRIR_PRNT . direction COMA expression CERRAR_PRNT PUNTO_COMA
    (111) direction -> . FORWARD
    (112) direction -> . BACKWARD

    FORWARD         shift and go to state 97
    BACKWARD        shift and go to state 98

    direction                      shift and go to state 96

state 75

    (52) do_while -> DO docuad1 . block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA
    (28) block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 26

    block                          shift and go to state 99

state 76

    (51) while -> WHILE ABRIR_PRNT . whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3
    (118) whilecuad1 -> .

    ABRIR_PRNT      reduce using rule 118 (whilecuad1 -> .)
    SUMA            reduce using rule 118 (whilecuad1 -> .)
    RESTA           reduce using rule 118 (whilecuad1 -> .)
    ABRIR_CORCH     reduce using rule 118 (whilecuad1 -> .)
    ID              reduce using rule 118 (whilecuad1 -> .)
    CTE_I           reduce using rule 118 (whilecuad1 -> .)
    CTE_F           reduce using rule 118 (whilecuad1 -> .)
    TRUE            reduce using rule 118 (whilecuad1 -> .)
    FALSE           reduce using rule 118 (whilecuad1 -> .)

    whilecuad1                     shift and go to state 100

state 77

    (42) fprint -> PRINT ABRIR_PRNT . write_choice CERRAR_PRNT PUNTO_COMA
    (43) write_choice -> . expression
    (44) write_choice -> . const_string
    (54) expression -> . exp expression_choice
    (45) const_string -> . CTE_S
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    CTE_S           shift and go to state 104
    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    write_choice                   shift and go to state 102
    factor_choice                  shift and go to state 103
    const_string                   shift and go to state 105
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 110

state 78

    (105) fpen_up -> PENUP ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 112


state 79

    (33) estatuto_loop -> estatuto estatuto_loop .

    RETURN          reduce using rule 33 (estatuto_loop -> estatuto estatuto_loop .)
    CERRAR_LLAVE    reduce using rule 33 (estatuto_loop -> estatuto estatuto_loop .)


state 80

    (106) fpen_down -> PENDOWN ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 113


state 81

    (53) assignment -> ID push_operando . IGUAL push_operador expression PUNTO_COMA

    IGUAL           shift and go to state 114


state 82

    (90) call -> ID var_func . PUNTO_COMA

    PUNTO_COMA      shift and go to state 115


state 83

    (89) var_func -> ABRIR_PRNT . params_call CERRAR_PRNT
    (91) params_call -> . expression params_call_loop
    (92) params_call -> .
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    CERRAR_PRNT     reduce using rule 92 (params_call -> .)
    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    params_call                    shift and go to state 116
    factor_choice                  shift and go to state 103
    term                           shift and go to state 101
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 117

state 84

    (108) fturn_left -> TURNLEFT ABRIR_PRNT . expression CERRAR_PRNT PUNTO_COMA
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 118

state 85

    (107) ferase -> ERASE ABRIR_PRNT . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 119


state 86

    (109) fturn_right -> TURNRIGHT ABRIR_PRNT . expression CERRAR_PRNT PUNTO_COMA
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 120

state 87

    (28) block -> ABRIR_LLAVE estatuto_loop return . CERRAR_LLAVE

    CERRAR_LLAVE    shift and go to state 121


state 88

    (29) return -> RETURN . expression PUNTO_COMA
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 122

state 89

    (46) condition -> IF ABRIR_PRNT . expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 123

state 90

    (21) functions_aux -> functions_body functions_params . block functions_loop
    (28) block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 26

    block                          shift and go to state 124

state 91

    (26) params_loop -> COMA params_loop_aux .

    CERRAR_PRNT     reduce using rule 26 (params_loop -> COMA params_loop_aux .)


state 92

    (25) params_loop_aux -> params . params_loop
    (26) params_loop -> . COMA params_loop_aux
    (27) params_loop -> .

    COMA            shift and go to state 70
    CERRAR_PRNT     reduce using rule 27 (params_loop -> .)

    params_loop                    shift and go to state 125

state 93

    (5) array -> ABRIR_CORCH CTE_I CERRAR_CORCH .

    PUNTO_COMA      reduce using rule 5 (array -> ABRIR_CORCH CTE_I CERRAR_CORCH .)


state 94

    (4) var_body -> VAR type ID array PUNTO_COMA var_loop .

    IF              reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    ID              reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    PRINT           reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    VAR             reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    WHILE           reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    DO              reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    PENUP           reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    PENDOWN         reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    ERASE           reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    TURNLEFT        reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    TURNRIGHT       reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    MOVE            reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    RETURN          reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    CERRAR_LLAVE    reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    FUNC            reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)
    MAIN            reduce using rule 4 (var_body -> VAR type ID array PUNTO_COMA var_loop .)


state 95

    (7) var_loop -> var_body .

    FUNC            reduce using rule 7 (var_loop -> var_body .)
    MAIN            reduce using rule 7 (var_loop -> var_body .)
    IF              reduce using rule 7 (var_loop -> var_body .)
    ID              reduce using rule 7 (var_loop -> var_body .)
    PRINT           reduce using rule 7 (var_loop -> var_body .)
    VAR             reduce using rule 7 (var_loop -> var_body .)
    WHILE           reduce using rule 7 (var_loop -> var_body .)
    DO              reduce using rule 7 (var_loop -> var_body .)
    PENUP           reduce using rule 7 (var_loop -> var_body .)
    PENDOWN         reduce using rule 7 (var_loop -> var_body .)
    ERASE           reduce using rule 7 (var_loop -> var_body .)
    TURNLEFT        reduce using rule 7 (var_loop -> var_body .)
    TURNRIGHT       reduce using rule 7 (var_loop -> var_body .)
    MOVE            reduce using rule 7 (var_loop -> var_body .)
    RETURN          reduce using rule 7 (var_loop -> var_body .)
    CERRAR_LLAVE    reduce using rule 7 (var_loop -> var_body .)


state 96

    (110) fmove -> MOVE ABRIR_PRNT direction . COMA expression CERRAR_PRNT PUNTO_COMA

    COMA            shift and go to state 126


state 97

    (111) direction -> FORWARD .

    COMA            reduce using rule 111 (direction -> FORWARD .)


state 98

    (112) direction -> BACKWARD .

    COMA            reduce using rule 112 (direction -> BACKWARD .)


state 99

    (52) do_while -> DO docuad1 block . WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA

    WHILE           shift and go to state 127


state 100

    (51) while -> WHILE ABRIR_PRNT whilecuad1 . expression whilecuad2 CERRAR_PRNT block whilecuad3
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 128

state 101

    (63) exp -> term . exp_choice
    (64) exp_choice -> . exp_aux
    (65) exp_choice -> .
    (66) exp_aux -> . SUMA push_operador exp
    (67) exp_aux -> . RESTA push_operador exp

    IGUALDAD        reduce using rule 65 (exp_choice -> .)
    DESIGUALDAD     reduce using rule 65 (exp_choice -> .)
    MAYOR_QUE       reduce using rule 65 (exp_choice -> .)
    MENOR_QUE       reduce using rule 65 (exp_choice -> .)
    MAYOR_IGUAL     reduce using rule 65 (exp_choice -> .)
    MENOR_IGUAL     reduce using rule 65 (exp_choice -> .)
    CERRAR_PRNT     reduce using rule 65 (exp_choice -> .)
    COMA            reduce using rule 65 (exp_choice -> .)
    PUNTO_COMA      reduce using rule 65 (exp_choice -> .)
    CERRAR_CORCH    reduce using rule 65 (exp_choice -> .)
    SUMA            shift and go to state 130
    RESTA           shift and go to state 131

    exp_choice                     shift and go to state 129
    exp_aux                        shift and go to state 132

state 102

    (42) fprint -> PRINT ABRIR_PRNT write_choice . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 133


state 103

    (74) factor -> factor_choice . var_cte
    (78) var_cte -> . const_int
    (79) var_cte -> . const_float
    (80) var_cte -> . const_bool
    (81) var_cte -> . ABRIR_CORCH list_elements CERRAR_CORCH
    (82) var_cte -> . ID var_decision
    (85) const_int -> . CTE_I push_operando
    (86) const_float -> . CTE_F push_operando
    (87) const_bool -> . TRUE push_operando
    (88) const_bool -> . FALSE push_operando

    ABRIR_CORCH     shift and go to state 135
    ID              shift and go to state 142
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 139
    TRUE            shift and go to state 141
    FALSE           shift and go to state 134

    var_cte                        shift and go to state 136
    const_int                      shift and go to state 138
    const_float                    shift and go to state 140
    const_bool                     shift and go to state 143

state 104

    (45) const_string -> CTE_S .

    CERRAR_PRNT     reduce using rule 45 (const_string -> CTE_S .)


state 105

    (44) write_choice -> const_string .

    CERRAR_PRNT     reduce using rule 44 (write_choice -> const_string .)


state 106

    (54) expression -> exp . expression_choice
    (55) expression_choice -> . expression_choice_aux
    (56) expression_choice -> .
    (57) expression_choice_aux -> . IGUALDAD push_operador exp
    (58) expression_choice_aux -> . DESIGUALDAD push_operador exp
    (59) expression_choice_aux -> . MAYOR_QUE push_operador exp
    (60) expression_choice_aux -> . MENOR_QUE push_operador exp
    (61) expression_choice_aux -> . MAYOR_IGUAL push_operador exp
    (62) expression_choice_aux -> . MENOR_IGUAL push_operador exp

    CERRAR_PRNT     reduce using rule 56 (expression_choice -> .)
    COMA            reduce using rule 56 (expression_choice -> .)
    PUNTO_COMA      reduce using rule 56 (expression_choice -> .)
    CERRAR_CORCH    reduce using rule 56 (expression_choice -> .)
    IGUALDAD        shift and go to state 144
    DESIGUALDAD     shift and go to state 150
    MAYOR_QUE       shift and go to state 148
    MENOR_QUE       shift and go to state 147
    MAYOR_IGUAL     shift and go to state 149
    MENOR_IGUAL     shift and go to state 151

    expression_choice_aux          shift and go to state 146
    expression_choice              shift and go to state 145

state 107

    (68) term -> factor . term_choice
    (69) term_choice -> . term_aux
    (70) term_choice -> .
    (71) term_aux -> . MULTIPLICACION push_operador term
    (72) term_aux -> . DIVISION push_operador term

    SUMA            reduce using rule 70 (term_choice -> .)
    RESTA           reduce using rule 70 (term_choice -> .)
    IGUALDAD        reduce using rule 70 (term_choice -> .)
    DESIGUALDAD     reduce using rule 70 (term_choice -> .)
    MAYOR_QUE       reduce using rule 70 (term_choice -> .)
    MENOR_QUE       reduce using rule 70 (term_choice -> .)
    MAYOR_IGUAL     reduce using rule 70 (term_choice -> .)
    MENOR_IGUAL     reduce using rule 70 (term_choice -> .)
    CERRAR_PRNT     reduce using rule 70 (term_choice -> .)
    COMA            reduce using rule 70 (term_choice -> .)
    PUNTO_COMA      reduce using rule 70 (term_choice -> .)
    CERRAR_CORCH    reduce using rule 70 (term_choice -> .)
    MULTIPLICACION  shift and go to state 155
    DIVISION        shift and go to state 152

    term_choice                    shift and go to state 154
    term_aux                       shift and go to state 153

state 108

    (73) factor -> ABRIR_PRNT . expression CERRAR_PRNT
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 156

state 109

    (76) factor_choice -> RESTA .

    ABRIR_CORCH     reduce using rule 76 (factor_choice -> RESTA .)
    ID              reduce using rule 76 (factor_choice -> RESTA .)
    CTE_I           reduce using rule 76 (factor_choice -> RESTA .)
    CTE_F           reduce using rule 76 (factor_choice -> RESTA .)
    TRUE            reduce using rule 76 (factor_choice -> RESTA .)
    FALSE           reduce using rule 76 (factor_choice -> RESTA .)


state 110

    (43) write_choice -> expression .

    CERRAR_PRNT     reduce using rule 43 (write_choice -> expression .)


state 111

    (75) factor_choice -> SUMA .

    ABRIR_CORCH     reduce using rule 75 (factor_choice -> SUMA .)
    ID              reduce using rule 75 (factor_choice -> SUMA .)
    CTE_I           reduce using rule 75 (factor_choice -> SUMA .)
    CTE_F           reduce using rule 75 (factor_choice -> SUMA .)
    TRUE            reduce using rule 75 (factor_choice -> SUMA .)
    FALSE           reduce using rule 75 (factor_choice -> SUMA .)


state 112

    (105) fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 157


state 113

    (106) fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 158


state 114

    (53) assignment -> ID push_operando IGUAL . push_operador expression PUNTO_COMA
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 159

state 115

    (90) call -> ID var_func PUNTO_COMA .

    IF              reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    ID              reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    PRINT           reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    VAR             reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    WHILE           reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    DO              reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    PENUP           reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    PENDOWN         reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    ERASE           reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    TURNLEFT        reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    TURNRIGHT       reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    MOVE            reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    RETURN          reduce using rule 90 (call -> ID var_func PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 90 (call -> ID var_func PUNTO_COMA .)


state 116

    (89) var_func -> ABRIR_PRNT params_call . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 160


state 117

    (91) params_call -> expression . params_call_loop
    (93) params_call_loop -> . COMA expression params_call_loop
    (94) params_call_loop -> .

    COMA            shift and go to state 161
    CERRAR_PRNT     reduce using rule 94 (params_call_loop -> .)

    params_call_loop               shift and go to state 162

state 118

    (108) fturn_left -> TURNLEFT ABRIR_PRNT expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 163


state 119

    (107) ferase -> ERASE ABRIR_PRNT CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 164


state 120

    (109) fturn_right -> TURNRIGHT ABRIR_PRNT expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 165


state 121

    (28) block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .

    ELSE            reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    IF              reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    ID              reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    PRINT           reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    VAR             reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    WHILE           reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    DO              reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    PENUP           reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    PENDOWN         reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    ERASE           reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    TURNLEFT        reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    TURNRIGHT       reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    MOVE            reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    RETURN          reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    CERRAR_LLAVE    reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    FUNC            reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    MAIN            reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)
    END             reduce using rule 28 (block -> ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE .)


state 122

    (29) return -> RETURN expression . PUNTO_COMA

    PUNTO_COMA      shift and go to state 166


state 123

    (46) condition -> IF ABRIR_PRNT expression . ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3
    (115) ifcuad1 -> .

    CERRAR_PRNT     reduce using rule 115 (ifcuad1 -> .)

    ifcuad1                        shift and go to state 167

state 124

    (21) functions_aux -> functions_body functions_params block . functions_loop
    (19) functions_loop -> . functions_aux
    (20) functions_loop -> .
    (21) functions_aux -> . functions_body functions_params block functions_loop
    (17) functions_body -> . FUNC type ID

    MAIN            reduce using rule 20 (functions_loop -> .)
    FUNC            shift and go to state 10

    functions_body                 shift and go to state 65
    functions_loop                 shift and go to state 168
    functions_aux                  shift and go to state 67

state 125

    (25) params_loop_aux -> params params_loop .

    CERRAR_PRNT     reduce using rule 25 (params_loop_aux -> params params_loop .)


state 126

    (110) fmove -> MOVE ABRIR_PRNT direction COMA . expression CERRAR_PRNT PUNTO_COMA
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    factor_choice                  shift and go to state 103
    term                           shift and go to state 101
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 169

state 127

    (52) do_while -> DO docuad1 block WHILE . ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA

    ABRIR_PRNT      shift and go to state 170


state 128

    (51) while -> WHILE ABRIR_PRNT whilecuad1 expression . whilecuad2 CERRAR_PRNT block whilecuad3
    (119) whilecuad2 -> .

    CERRAR_PRNT     reduce using rule 119 (whilecuad2 -> .)

    whilecuad2                     shift and go to state 171

state 129

    (63) exp -> term exp_choice .

    IGUALDAD        reduce using rule 63 (exp -> term exp_choice .)
    DESIGUALDAD     reduce using rule 63 (exp -> term exp_choice .)
    MAYOR_QUE       reduce using rule 63 (exp -> term exp_choice .)
    MENOR_QUE       reduce using rule 63 (exp -> term exp_choice .)
    MAYOR_IGUAL     reduce using rule 63 (exp -> term exp_choice .)
    MENOR_IGUAL     reduce using rule 63 (exp -> term exp_choice .)
    CERRAR_PRNT     reduce using rule 63 (exp -> term exp_choice .)
    COMA            reduce using rule 63 (exp -> term exp_choice .)
    PUNTO_COMA      reduce using rule 63 (exp -> term exp_choice .)
    CERRAR_CORCH    reduce using rule 63 (exp -> term exp_choice .)


state 130

    (66) exp_aux -> SUMA . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 172

state 131

    (67) exp_aux -> RESTA . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 173

state 132

    (64) exp_choice -> exp_aux .

    IGUALDAD        reduce using rule 64 (exp_choice -> exp_aux .)
    DESIGUALDAD     reduce using rule 64 (exp_choice -> exp_aux .)
    MAYOR_QUE       reduce using rule 64 (exp_choice -> exp_aux .)
    MENOR_QUE       reduce using rule 64 (exp_choice -> exp_aux .)
    MAYOR_IGUAL     reduce using rule 64 (exp_choice -> exp_aux .)
    MENOR_IGUAL     reduce using rule 64 (exp_choice -> exp_aux .)
    CERRAR_PRNT     reduce using rule 64 (exp_choice -> exp_aux .)
    COMA            reduce using rule 64 (exp_choice -> exp_aux .)
    PUNTO_COMA      reduce using rule 64 (exp_choice -> exp_aux .)
    CERRAR_CORCH    reduce using rule 64 (exp_choice -> exp_aux .)


state 133

    (42) fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 174


state 134

    (88) const_bool -> FALSE . push_operando
    (113) push_operando -> .

    MULTIPLICACION  reduce using rule 113 (push_operando -> .)
    DIVISION        reduce using rule 113 (push_operando -> .)
    SUMA            reduce using rule 113 (push_operando -> .)
    RESTA           reduce using rule 113 (push_operando -> .)
    IGUALDAD        reduce using rule 113 (push_operando -> .)
    DESIGUALDAD     reduce using rule 113 (push_operando -> .)
    MAYOR_QUE       reduce using rule 113 (push_operando -> .)
    MENOR_QUE       reduce using rule 113 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 113 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 113 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 113 (push_operando -> .)
    COMA            reduce using rule 113 (push_operando -> .)
    PUNTO_COMA      reduce using rule 113 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 113 (push_operando -> .)

    push_operando                  shift and go to state 175

state 135

    (81) var_cte -> ABRIR_CORCH . list_elements CERRAR_CORCH
    (95) list_elements -> . expression list_elements_loop
    (96) list_elements -> .
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    CERRAR_CORCH    reduce using rule 96 (list_elements -> .)
    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    list_elements                  shift and go to state 176
    expression                     shift and go to state 177

state 136

    (74) factor -> factor_choice var_cte .

    MULTIPLICACION  reduce using rule 74 (factor -> factor_choice var_cte .)
    DIVISION        reduce using rule 74 (factor -> factor_choice var_cte .)
    SUMA            reduce using rule 74 (factor -> factor_choice var_cte .)
    RESTA           reduce using rule 74 (factor -> factor_choice var_cte .)
    CERRAR_PRNT     reduce using rule 74 (factor -> factor_choice var_cte .)
    COMA            reduce using rule 74 (factor -> factor_choice var_cte .)
    PUNTO_COMA      reduce using rule 74 (factor -> factor_choice var_cte .)
    CERRAR_CORCH    reduce using rule 74 (factor -> factor_choice var_cte .)
    IGUALDAD        reduce using rule 74 (factor -> factor_choice var_cte .)
    DESIGUALDAD     reduce using rule 74 (factor -> factor_choice var_cte .)
    MAYOR_QUE       reduce using rule 74 (factor -> factor_choice var_cte .)
    MENOR_QUE       reduce using rule 74 (factor -> factor_choice var_cte .)
    MAYOR_IGUAL     reduce using rule 74 (factor -> factor_choice var_cte .)
    MENOR_IGUAL     reduce using rule 74 (factor -> factor_choice var_cte .)


state 137

    (85) const_int -> CTE_I . push_operando
    (113) push_operando -> .

    MULTIPLICACION  reduce using rule 113 (push_operando -> .)
    DIVISION        reduce using rule 113 (push_operando -> .)
    SUMA            reduce using rule 113 (push_operando -> .)
    RESTA           reduce using rule 113 (push_operando -> .)
    IGUALDAD        reduce using rule 113 (push_operando -> .)
    DESIGUALDAD     reduce using rule 113 (push_operando -> .)
    MAYOR_QUE       reduce using rule 113 (push_operando -> .)
    MENOR_QUE       reduce using rule 113 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 113 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 113 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 113 (push_operando -> .)
    COMA            reduce using rule 113 (push_operando -> .)
    PUNTO_COMA      reduce using rule 113 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 113 (push_operando -> .)

    push_operando                  shift and go to state 178

state 138

    (78) var_cte -> const_int .

    MULTIPLICACION  reduce using rule 78 (var_cte -> const_int .)
    DIVISION        reduce using rule 78 (var_cte -> const_int .)
    SUMA            reduce using rule 78 (var_cte -> const_int .)
    RESTA           reduce using rule 78 (var_cte -> const_int .)
    IGUALDAD        reduce using rule 78 (var_cte -> const_int .)
    DESIGUALDAD     reduce using rule 78 (var_cte -> const_int .)
    MAYOR_QUE       reduce using rule 78 (var_cte -> const_int .)
    MENOR_QUE       reduce using rule 78 (var_cte -> const_int .)
    MAYOR_IGUAL     reduce using rule 78 (var_cte -> const_int .)
    MENOR_IGUAL     reduce using rule 78 (var_cte -> const_int .)
    CERRAR_PRNT     reduce using rule 78 (var_cte -> const_int .)
    COMA            reduce using rule 78 (var_cte -> const_int .)
    PUNTO_COMA      reduce using rule 78 (var_cte -> const_int .)
    CERRAR_CORCH    reduce using rule 78 (var_cte -> const_int .)


state 139

    (86) const_float -> CTE_F . push_operando
    (113) push_operando -> .

    MULTIPLICACION  reduce using rule 113 (push_operando -> .)
    DIVISION        reduce using rule 113 (push_operando -> .)
    SUMA            reduce using rule 113 (push_operando -> .)
    RESTA           reduce using rule 113 (push_operando -> .)
    IGUALDAD        reduce using rule 113 (push_operando -> .)
    DESIGUALDAD     reduce using rule 113 (push_operando -> .)
    MAYOR_QUE       reduce using rule 113 (push_operando -> .)
    MENOR_QUE       reduce using rule 113 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 113 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 113 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 113 (push_operando -> .)
    COMA            reduce using rule 113 (push_operando -> .)
    PUNTO_COMA      reduce using rule 113 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 113 (push_operando -> .)

    push_operando                  shift and go to state 179

state 140

    (79) var_cte -> const_float .

    MULTIPLICACION  reduce using rule 79 (var_cte -> const_float .)
    DIVISION        reduce using rule 79 (var_cte -> const_float .)
    SUMA            reduce using rule 79 (var_cte -> const_float .)
    RESTA           reduce using rule 79 (var_cte -> const_float .)
    IGUALDAD        reduce using rule 79 (var_cte -> const_float .)
    DESIGUALDAD     reduce using rule 79 (var_cte -> const_float .)
    MAYOR_QUE       reduce using rule 79 (var_cte -> const_float .)
    MENOR_QUE       reduce using rule 79 (var_cte -> const_float .)
    MAYOR_IGUAL     reduce using rule 79 (var_cte -> const_float .)
    MENOR_IGUAL     reduce using rule 79 (var_cte -> const_float .)
    CERRAR_PRNT     reduce using rule 79 (var_cte -> const_float .)
    COMA            reduce using rule 79 (var_cte -> const_float .)
    PUNTO_COMA      reduce using rule 79 (var_cte -> const_float .)
    CERRAR_CORCH    reduce using rule 79 (var_cte -> const_float .)


state 141

    (87) const_bool -> TRUE . push_operando
    (113) push_operando -> .

    MULTIPLICACION  reduce using rule 113 (push_operando -> .)
    DIVISION        reduce using rule 113 (push_operando -> .)
    SUMA            reduce using rule 113 (push_operando -> .)
    RESTA           reduce using rule 113 (push_operando -> .)
    IGUALDAD        reduce using rule 113 (push_operando -> .)
    DESIGUALDAD     reduce using rule 113 (push_operando -> .)
    MAYOR_QUE       reduce using rule 113 (push_operando -> .)
    MENOR_QUE       reduce using rule 113 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 113 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 113 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 113 (push_operando -> .)
    COMA            reduce using rule 113 (push_operando -> .)
    PUNTO_COMA      reduce using rule 113 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 113 (push_operando -> .)

    push_operando                  shift and go to state 180

state 142

    (82) var_cte -> ID . var_decision
    (83) var_decision -> . var_func
    (84) var_decision -> . push_operando
    (89) var_func -> . ABRIR_PRNT params_call CERRAR_PRNT
    (113) push_operando -> .

    ABRIR_PRNT      shift and go to state 83
    MULTIPLICACION  reduce using rule 113 (push_operando -> .)
    DIVISION        reduce using rule 113 (push_operando -> .)
    SUMA            reduce using rule 113 (push_operando -> .)
    RESTA           reduce using rule 113 (push_operando -> .)
    IGUALDAD        reduce using rule 113 (push_operando -> .)
    DESIGUALDAD     reduce using rule 113 (push_operando -> .)
    MAYOR_QUE       reduce using rule 113 (push_operando -> .)
    MENOR_QUE       reduce using rule 113 (push_operando -> .)
    MAYOR_IGUAL     reduce using rule 113 (push_operando -> .)
    MENOR_IGUAL     reduce using rule 113 (push_operando -> .)
    CERRAR_PRNT     reduce using rule 113 (push_operando -> .)
    COMA            reduce using rule 113 (push_operando -> .)
    PUNTO_COMA      reduce using rule 113 (push_operando -> .)
    CERRAR_CORCH    reduce using rule 113 (push_operando -> .)

    push_operando                  shift and go to state 181
    var_func                       shift and go to state 183
    var_decision                   shift and go to state 182

state 143

    (80) var_cte -> const_bool .

    MULTIPLICACION  reduce using rule 80 (var_cte -> const_bool .)
    DIVISION        reduce using rule 80 (var_cte -> const_bool .)
    SUMA            reduce using rule 80 (var_cte -> const_bool .)
    RESTA           reduce using rule 80 (var_cte -> const_bool .)
    IGUALDAD        reduce using rule 80 (var_cte -> const_bool .)
    DESIGUALDAD     reduce using rule 80 (var_cte -> const_bool .)
    MAYOR_QUE       reduce using rule 80 (var_cte -> const_bool .)
    MENOR_QUE       reduce using rule 80 (var_cte -> const_bool .)
    MAYOR_IGUAL     reduce using rule 80 (var_cte -> const_bool .)
    MENOR_IGUAL     reduce using rule 80 (var_cte -> const_bool .)
    CERRAR_PRNT     reduce using rule 80 (var_cte -> const_bool .)
    COMA            reduce using rule 80 (var_cte -> const_bool .)
    PUNTO_COMA      reduce using rule 80 (var_cte -> const_bool .)
    CERRAR_CORCH    reduce using rule 80 (var_cte -> const_bool .)


state 144

    (57) expression_choice_aux -> IGUALDAD . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 184

state 145

    (54) expression -> exp expression_choice .

    COMA            reduce using rule 54 (expression -> exp expression_choice .)
    CERRAR_CORCH    reduce using rule 54 (expression -> exp expression_choice .)
    CERRAR_PRNT     reduce using rule 54 (expression -> exp expression_choice .)
    PUNTO_COMA      reduce using rule 54 (expression -> exp expression_choice .)


state 146

    (55) expression_choice -> expression_choice_aux .

    CERRAR_PRNT     reduce using rule 55 (expression_choice -> expression_choice_aux .)
    COMA            reduce using rule 55 (expression_choice -> expression_choice_aux .)
    PUNTO_COMA      reduce using rule 55 (expression_choice -> expression_choice_aux .)
    CERRAR_CORCH    reduce using rule 55 (expression_choice -> expression_choice_aux .)


state 147

    (60) expression_choice_aux -> MENOR_QUE . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 185

state 148

    (59) expression_choice_aux -> MAYOR_QUE . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 186

state 149

    (61) expression_choice_aux -> MAYOR_IGUAL . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 187

state 150

    (58) expression_choice_aux -> DESIGUALDAD . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 188

state 151

    (62) expression_choice_aux -> MENOR_IGUAL . push_operador exp
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 189

state 152

    (72) term_aux -> DIVISION . push_operador term
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 190

state 153

    (69) term_choice -> term_aux .

    SUMA            reduce using rule 69 (term_choice -> term_aux .)
    RESTA           reduce using rule 69 (term_choice -> term_aux .)
    IGUALDAD        reduce using rule 69 (term_choice -> term_aux .)
    DESIGUALDAD     reduce using rule 69 (term_choice -> term_aux .)
    MAYOR_QUE       reduce using rule 69 (term_choice -> term_aux .)
    MENOR_QUE       reduce using rule 69 (term_choice -> term_aux .)
    MAYOR_IGUAL     reduce using rule 69 (term_choice -> term_aux .)
    MENOR_IGUAL     reduce using rule 69 (term_choice -> term_aux .)
    CERRAR_PRNT     reduce using rule 69 (term_choice -> term_aux .)
    COMA            reduce using rule 69 (term_choice -> term_aux .)
    PUNTO_COMA      reduce using rule 69 (term_choice -> term_aux .)
    CERRAR_CORCH    reduce using rule 69 (term_choice -> term_aux .)


state 154

    (68) term -> factor term_choice .

    SUMA            reduce using rule 68 (term -> factor term_choice .)
    RESTA           reduce using rule 68 (term -> factor term_choice .)
    IGUALDAD        reduce using rule 68 (term -> factor term_choice .)
    DESIGUALDAD     reduce using rule 68 (term -> factor term_choice .)
    MAYOR_QUE       reduce using rule 68 (term -> factor term_choice .)
    MENOR_QUE       reduce using rule 68 (term -> factor term_choice .)
    MAYOR_IGUAL     reduce using rule 68 (term -> factor term_choice .)
    MENOR_IGUAL     reduce using rule 68 (term -> factor term_choice .)
    PUNTO_COMA      reduce using rule 68 (term -> factor term_choice .)
    CERRAR_PRNT     reduce using rule 68 (term -> factor term_choice .)
    COMA            reduce using rule 68 (term -> factor term_choice .)
    CERRAR_CORCH    reduce using rule 68 (term -> factor term_choice .)


state 155

    (71) term_aux -> MULTIPLICACION . push_operador term
    (114) push_operador -> .

    ABRIR_PRNT      reduce using rule 114 (push_operador -> .)
    SUMA            reduce using rule 114 (push_operador -> .)
    RESTA           reduce using rule 114 (push_operador -> .)
    ABRIR_CORCH     reduce using rule 114 (push_operador -> .)
    ID              reduce using rule 114 (push_operador -> .)
    CTE_I           reduce using rule 114 (push_operador -> .)
    CTE_F           reduce using rule 114 (push_operador -> .)
    TRUE            reduce using rule 114 (push_operador -> .)
    FALSE           reduce using rule 114 (push_operador -> .)

    push_operador                  shift and go to state 191

state 156

    (73) factor -> ABRIR_PRNT expression . CERRAR_PRNT

    CERRAR_PRNT     shift and go to state 192


state 157

    (105) fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 105 (fpen_up -> PENUP ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 158

    (106) fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 106 (fpen_down -> PENDOWN ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 159

    (53) assignment -> ID push_operando IGUAL push_operador . expression PUNTO_COMA
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 193

state 160

    (89) var_func -> ABRIR_PRNT params_call CERRAR_PRNT .

    PUNTO_COMA      reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    MULTIPLICACION  reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    DIVISION        reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    SUMA            reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    RESTA           reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    IGUALDAD        reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    DESIGUALDAD     reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    MAYOR_QUE       reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    MENOR_QUE       reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    MAYOR_IGUAL     reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    MENOR_IGUAL     reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    CERRAR_PRNT     reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    COMA            reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)
    CERRAR_CORCH    reduce using rule 89 (var_func -> ABRIR_PRNT params_call CERRAR_PRNT .)


state 161

    (93) params_call_loop -> COMA . expression params_call_loop
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 194

state 162

    (91) params_call -> expression params_call_loop .

    CERRAR_PRNT     reduce using rule 91 (params_call -> expression params_call_loop .)


state 163

    (108) fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 195


state 164

    (107) ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 107 (ferase -> ERASE ABRIR_PRNT CERRAR_PRNT PUNTO_COMA .)


state 165

    (109) fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 196


state 166

    (29) return -> RETURN expression PUNTO_COMA .

    CERRAR_LLAVE    reduce using rule 29 (return -> RETURN expression PUNTO_COMA .)


state 167

    (46) condition -> IF ABRIR_PRNT expression ifcuad1 . CERRAR_PRNT block ifcuad2 else ifcuad3

    CERRAR_PRNT     shift and go to state 197


state 168

    (21) functions_aux -> functions_body functions_params block functions_loop .

    MAIN            reduce using rule 21 (functions_aux -> functions_body functions_params block functions_loop .)


state 169

    (110) fmove -> MOVE ABRIR_PRNT direction COMA expression . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 198


state 170

    (52) do_while -> DO docuad1 block WHILE ABRIR_PRNT . expression docuad2 CERRAR_PRNT PUNTO_COMA
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 199

state 171

    (51) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 . CERRAR_PRNT block whilecuad3

    CERRAR_PRNT     shift and go to state 200


state 172

    (66) exp_aux -> SUMA push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 201
    factor                         shift and go to state 107

state 173

    (67) exp_aux -> RESTA push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 202
    factor                         shift and go to state 107

state 174

    (42) fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 42 (fprint -> PRINT ABRIR_PRNT write_choice CERRAR_PRNT PUNTO_COMA .)


state 175

    (88) const_bool -> FALSE push_operando .

    MULTIPLICACION  reduce using rule 88 (const_bool -> FALSE push_operando .)
    DIVISION        reduce using rule 88 (const_bool -> FALSE push_operando .)
    SUMA            reduce using rule 88 (const_bool -> FALSE push_operando .)
    RESTA           reduce using rule 88 (const_bool -> FALSE push_operando .)
    IGUALDAD        reduce using rule 88 (const_bool -> FALSE push_operando .)
    DESIGUALDAD     reduce using rule 88 (const_bool -> FALSE push_operando .)
    MAYOR_QUE       reduce using rule 88 (const_bool -> FALSE push_operando .)
    MENOR_QUE       reduce using rule 88 (const_bool -> FALSE push_operando .)
    MAYOR_IGUAL     reduce using rule 88 (const_bool -> FALSE push_operando .)
    MENOR_IGUAL     reduce using rule 88 (const_bool -> FALSE push_operando .)
    CERRAR_PRNT     reduce using rule 88 (const_bool -> FALSE push_operando .)
    COMA            reduce using rule 88 (const_bool -> FALSE push_operando .)
    PUNTO_COMA      reduce using rule 88 (const_bool -> FALSE push_operando .)
    CERRAR_CORCH    reduce using rule 88 (const_bool -> FALSE push_operando .)


state 176

    (81) var_cte -> ABRIR_CORCH list_elements . CERRAR_CORCH

    CERRAR_CORCH    shift and go to state 203


state 177

    (95) list_elements -> expression . list_elements_loop
    (97) list_elements_loop -> . COMA expression list_elements_loop
    (98) list_elements_loop -> .

    COMA            shift and go to state 204
    CERRAR_CORCH    reduce using rule 98 (list_elements_loop -> .)

    list_elements_loop             shift and go to state 205

state 178

    (85) const_int -> CTE_I push_operando .

    MULTIPLICACION  reduce using rule 85 (const_int -> CTE_I push_operando .)
    DIVISION        reduce using rule 85 (const_int -> CTE_I push_operando .)
    SUMA            reduce using rule 85 (const_int -> CTE_I push_operando .)
    RESTA           reduce using rule 85 (const_int -> CTE_I push_operando .)
    IGUALDAD        reduce using rule 85 (const_int -> CTE_I push_operando .)
    DESIGUALDAD     reduce using rule 85 (const_int -> CTE_I push_operando .)
    MAYOR_QUE       reduce using rule 85 (const_int -> CTE_I push_operando .)
    MENOR_QUE       reduce using rule 85 (const_int -> CTE_I push_operando .)
    MAYOR_IGUAL     reduce using rule 85 (const_int -> CTE_I push_operando .)
    MENOR_IGUAL     reduce using rule 85 (const_int -> CTE_I push_operando .)
    CERRAR_PRNT     reduce using rule 85 (const_int -> CTE_I push_operando .)
    COMA            reduce using rule 85 (const_int -> CTE_I push_operando .)
    PUNTO_COMA      reduce using rule 85 (const_int -> CTE_I push_operando .)
    CERRAR_CORCH    reduce using rule 85 (const_int -> CTE_I push_operando .)


state 179

    (86) const_float -> CTE_F push_operando .

    MULTIPLICACION  reduce using rule 86 (const_float -> CTE_F push_operando .)
    DIVISION        reduce using rule 86 (const_float -> CTE_F push_operando .)
    SUMA            reduce using rule 86 (const_float -> CTE_F push_operando .)
    RESTA           reduce using rule 86 (const_float -> CTE_F push_operando .)
    IGUALDAD        reduce using rule 86 (const_float -> CTE_F push_operando .)
    DESIGUALDAD     reduce using rule 86 (const_float -> CTE_F push_operando .)
    MAYOR_QUE       reduce using rule 86 (const_float -> CTE_F push_operando .)
    MENOR_QUE       reduce using rule 86 (const_float -> CTE_F push_operando .)
    MAYOR_IGUAL     reduce using rule 86 (const_float -> CTE_F push_operando .)
    MENOR_IGUAL     reduce using rule 86 (const_float -> CTE_F push_operando .)
    CERRAR_PRNT     reduce using rule 86 (const_float -> CTE_F push_operando .)
    COMA            reduce using rule 86 (const_float -> CTE_F push_operando .)
    PUNTO_COMA      reduce using rule 86 (const_float -> CTE_F push_operando .)
    CERRAR_CORCH    reduce using rule 86 (const_float -> CTE_F push_operando .)


state 180

    (87) const_bool -> TRUE push_operando .

    MULTIPLICACION  reduce using rule 87 (const_bool -> TRUE push_operando .)
    DIVISION        reduce using rule 87 (const_bool -> TRUE push_operando .)
    SUMA            reduce using rule 87 (const_bool -> TRUE push_operando .)
    RESTA           reduce using rule 87 (const_bool -> TRUE push_operando .)
    IGUALDAD        reduce using rule 87 (const_bool -> TRUE push_operando .)
    DESIGUALDAD     reduce using rule 87 (const_bool -> TRUE push_operando .)
    MAYOR_QUE       reduce using rule 87 (const_bool -> TRUE push_operando .)
    MENOR_QUE       reduce using rule 87 (const_bool -> TRUE push_operando .)
    MAYOR_IGUAL     reduce using rule 87 (const_bool -> TRUE push_operando .)
    MENOR_IGUAL     reduce using rule 87 (const_bool -> TRUE push_operando .)
    CERRAR_PRNT     reduce using rule 87 (const_bool -> TRUE push_operando .)
    COMA            reduce using rule 87 (const_bool -> TRUE push_operando .)
    PUNTO_COMA      reduce using rule 87 (const_bool -> TRUE push_operando .)
    CERRAR_CORCH    reduce using rule 87 (const_bool -> TRUE push_operando .)


state 181

    (84) var_decision -> push_operando .

    MULTIPLICACION  reduce using rule 84 (var_decision -> push_operando .)
    DIVISION        reduce using rule 84 (var_decision -> push_operando .)
    SUMA            reduce using rule 84 (var_decision -> push_operando .)
    RESTA           reduce using rule 84 (var_decision -> push_operando .)
    IGUALDAD        reduce using rule 84 (var_decision -> push_operando .)
    DESIGUALDAD     reduce using rule 84 (var_decision -> push_operando .)
    MAYOR_QUE       reduce using rule 84 (var_decision -> push_operando .)
    MENOR_QUE       reduce using rule 84 (var_decision -> push_operando .)
    MAYOR_IGUAL     reduce using rule 84 (var_decision -> push_operando .)
    MENOR_IGUAL     reduce using rule 84 (var_decision -> push_operando .)
    CERRAR_PRNT     reduce using rule 84 (var_decision -> push_operando .)
    COMA            reduce using rule 84 (var_decision -> push_operando .)
    PUNTO_COMA      reduce using rule 84 (var_decision -> push_operando .)
    CERRAR_CORCH    reduce using rule 84 (var_decision -> push_operando .)


state 182

    (82) var_cte -> ID var_decision .

    MULTIPLICACION  reduce using rule 82 (var_cte -> ID var_decision .)
    DIVISION        reduce using rule 82 (var_cte -> ID var_decision .)
    SUMA            reduce using rule 82 (var_cte -> ID var_decision .)
    RESTA           reduce using rule 82 (var_cte -> ID var_decision .)
    IGUALDAD        reduce using rule 82 (var_cte -> ID var_decision .)
    DESIGUALDAD     reduce using rule 82 (var_cte -> ID var_decision .)
    MAYOR_QUE       reduce using rule 82 (var_cte -> ID var_decision .)
    MENOR_QUE       reduce using rule 82 (var_cte -> ID var_decision .)
    MAYOR_IGUAL     reduce using rule 82 (var_cte -> ID var_decision .)
    MENOR_IGUAL     reduce using rule 82 (var_cte -> ID var_decision .)
    CERRAR_PRNT     reduce using rule 82 (var_cte -> ID var_decision .)
    COMA            reduce using rule 82 (var_cte -> ID var_decision .)
    PUNTO_COMA      reduce using rule 82 (var_cte -> ID var_decision .)
    CERRAR_CORCH    reduce using rule 82 (var_cte -> ID var_decision .)


state 183

    (83) var_decision -> var_func .

    MULTIPLICACION  reduce using rule 83 (var_decision -> var_func .)
    DIVISION        reduce using rule 83 (var_decision -> var_func .)
    SUMA            reduce using rule 83 (var_decision -> var_func .)
    RESTA           reduce using rule 83 (var_decision -> var_func .)
    IGUALDAD        reduce using rule 83 (var_decision -> var_func .)
    DESIGUALDAD     reduce using rule 83 (var_decision -> var_func .)
    MAYOR_QUE       reduce using rule 83 (var_decision -> var_func .)
    MENOR_QUE       reduce using rule 83 (var_decision -> var_func .)
    MAYOR_IGUAL     reduce using rule 83 (var_decision -> var_func .)
    MENOR_IGUAL     reduce using rule 83 (var_decision -> var_func .)
    CERRAR_PRNT     reduce using rule 83 (var_decision -> var_func .)
    COMA            reduce using rule 83 (var_decision -> var_func .)
    PUNTO_COMA      reduce using rule 83 (var_decision -> var_func .)
    CERRAR_CORCH    reduce using rule 83 (var_decision -> var_func .)


state 184

    (57) expression_choice_aux -> IGUALDAD push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 206
    factor                         shift and go to state 107

state 185

    (60) expression_choice_aux -> MENOR_QUE push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 207
    factor                         shift and go to state 107

state 186

    (59) expression_choice_aux -> MAYOR_QUE push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 208
    factor                         shift and go to state 107

state 187

    (61) expression_choice_aux -> MAYOR_IGUAL push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 209
    factor                         shift and go to state 107

state 188

    (58) expression_choice_aux -> DESIGUALDAD push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 210
    factor                         shift and go to state 107

state 189

    (62) expression_choice_aux -> MENOR_IGUAL push_operador . exp
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 211
    factor                         shift and go to state 107

state 190

    (72) term_aux -> DIVISION push_operador . term
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 212
    factor_choice                  shift and go to state 103
    factor                         shift and go to state 107

state 191

    (71) term_aux -> MULTIPLICACION push_operador . term
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 213
    factor_choice                  shift and go to state 103
    factor                         shift and go to state 107

state 192

    (73) factor -> ABRIR_PRNT expression CERRAR_PRNT .

    MULTIPLICACION  reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    DIVISION        reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    SUMA            reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    RESTA           reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    CERRAR_PRNT     reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    COMA            reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    PUNTO_COMA      reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    CERRAR_CORCH    reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    IGUALDAD        reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    DESIGUALDAD     reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MAYOR_QUE       reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MENOR_QUE       reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MAYOR_IGUAL     reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)
    MENOR_IGUAL     reduce using rule 73 (factor -> ABRIR_PRNT expression CERRAR_PRNT .)


state 193

    (53) assignment -> ID push_operando IGUAL push_operador expression . PUNTO_COMA

    PUNTO_COMA      shift and go to state 214


state 194

    (93) params_call_loop -> COMA expression . params_call_loop
    (93) params_call_loop -> . COMA expression params_call_loop
    (94) params_call_loop -> .

    COMA            shift and go to state 161
    CERRAR_PRNT     reduce using rule 94 (params_call_loop -> .)

    params_call_loop               shift and go to state 215

state 195

    (108) fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 108 (fturn_left -> TURNLEFT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)


state 196

    (109) fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 109 (fturn_right -> TURNRIGHT ABRIR_PRNT expression CERRAR_PRNT PUNTO_COMA .)


state 197

    (46) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT . block ifcuad2 else ifcuad3
    (28) block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 26

    block                          shift and go to state 216

state 198

    (110) fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 217


state 199

    (52) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression . docuad2 CERRAR_PRNT PUNTO_COMA
    (122) docuad2 -> .

    CERRAR_PRNT     reduce using rule 122 (docuad2 -> .)

    docuad2                        shift and go to state 218

state 200

    (51) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT . block whilecuad3
    (28) block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 26

    block                          shift and go to state 219

state 201

    (66) exp_aux -> SUMA push_operador exp .

    IGUALDAD        reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    DESIGUALDAD     reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    MAYOR_QUE       reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    MENOR_QUE       reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    MAYOR_IGUAL     reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    MENOR_IGUAL     reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    CERRAR_PRNT     reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    COMA            reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    PUNTO_COMA      reduce using rule 66 (exp_aux -> SUMA push_operador exp .)
    CERRAR_CORCH    reduce using rule 66 (exp_aux -> SUMA push_operador exp .)


state 202

    (67) exp_aux -> RESTA push_operador exp .

    IGUALDAD        reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    DESIGUALDAD     reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    MAYOR_QUE       reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    MENOR_QUE       reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    MAYOR_IGUAL     reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    MENOR_IGUAL     reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    CERRAR_PRNT     reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    COMA            reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    PUNTO_COMA      reduce using rule 67 (exp_aux -> RESTA push_operador exp .)
    CERRAR_CORCH    reduce using rule 67 (exp_aux -> RESTA push_operador exp .)


state 203

    (81) var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .

    MULTIPLICACION  reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    DIVISION        reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    SUMA            reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    RESTA           reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    IGUALDAD        reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    DESIGUALDAD     reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    MAYOR_QUE       reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    MENOR_QUE       reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    MAYOR_IGUAL     reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    MENOR_IGUAL     reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    CERRAR_PRNT     reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    COMA            reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    PUNTO_COMA      reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)
    CERRAR_CORCH    reduce using rule 81 (var_cte -> ABRIR_CORCH list_elements CERRAR_CORCH .)


state 204

    (97) list_elements_loop -> COMA . expression list_elements_loop
    (54) expression -> . exp expression_choice
    (63) exp -> . term exp_choice
    (68) term -> . factor term_choice
    (73) factor -> . ABRIR_PRNT expression CERRAR_PRNT
    (74) factor -> . factor_choice var_cte
    (75) factor_choice -> . SUMA
    (76) factor_choice -> . RESTA
    (77) factor_choice -> .

    ABRIR_PRNT      shift and go to state 108
    SUMA            shift and go to state 111
    RESTA           shift and go to state 109
    ABRIR_CORCH     reduce using rule 77 (factor_choice -> .)
    ID              reduce using rule 77 (factor_choice -> .)
    CTE_I           reduce using rule 77 (factor_choice -> .)
    CTE_F           reduce using rule 77 (factor_choice -> .)
    TRUE            reduce using rule 77 (factor_choice -> .)
    FALSE           reduce using rule 77 (factor_choice -> .)

    term                           shift and go to state 101
    factor_choice                  shift and go to state 103
    exp                            shift and go to state 106
    factor                         shift and go to state 107
    expression                     shift and go to state 220

state 205

    (95) list_elements -> expression list_elements_loop .

    CERRAR_CORCH    reduce using rule 95 (list_elements -> expression list_elements_loop .)


state 206

    (57) expression_choice_aux -> IGUALDAD push_operador exp .

    CERRAR_PRNT     reduce using rule 57 (expression_choice_aux -> IGUALDAD push_operador exp .)
    COMA            reduce using rule 57 (expression_choice_aux -> IGUALDAD push_operador exp .)
    PUNTO_COMA      reduce using rule 57 (expression_choice_aux -> IGUALDAD push_operador exp .)
    CERRAR_CORCH    reduce using rule 57 (expression_choice_aux -> IGUALDAD push_operador exp .)


state 207

    (60) expression_choice_aux -> MENOR_QUE push_operador exp .

    CERRAR_PRNT     reduce using rule 60 (expression_choice_aux -> MENOR_QUE push_operador exp .)
    COMA            reduce using rule 60 (expression_choice_aux -> MENOR_QUE push_operador exp .)
    PUNTO_COMA      reduce using rule 60 (expression_choice_aux -> MENOR_QUE push_operador exp .)
    CERRAR_CORCH    reduce using rule 60 (expression_choice_aux -> MENOR_QUE push_operador exp .)


state 208

    (59) expression_choice_aux -> MAYOR_QUE push_operador exp .

    CERRAR_PRNT     reduce using rule 59 (expression_choice_aux -> MAYOR_QUE push_operador exp .)
    COMA            reduce using rule 59 (expression_choice_aux -> MAYOR_QUE push_operador exp .)
    PUNTO_COMA      reduce using rule 59 (expression_choice_aux -> MAYOR_QUE push_operador exp .)
    CERRAR_CORCH    reduce using rule 59 (expression_choice_aux -> MAYOR_QUE push_operador exp .)


state 209

    (61) expression_choice_aux -> MAYOR_IGUAL push_operador exp .

    CERRAR_PRNT     reduce using rule 61 (expression_choice_aux -> MAYOR_IGUAL push_operador exp .)
    COMA            reduce using rule 61 (expression_choice_aux -> MAYOR_IGUAL push_operador exp .)
    PUNTO_COMA      reduce using rule 61 (expression_choice_aux -> MAYOR_IGUAL push_operador exp .)
    CERRAR_CORCH    reduce using rule 61 (expression_choice_aux -> MAYOR_IGUAL push_operador exp .)


state 210

    (58) expression_choice_aux -> DESIGUALDAD push_operador exp .

    CERRAR_PRNT     reduce using rule 58 (expression_choice_aux -> DESIGUALDAD push_operador exp .)
    COMA            reduce using rule 58 (expression_choice_aux -> DESIGUALDAD push_operador exp .)
    PUNTO_COMA      reduce using rule 58 (expression_choice_aux -> DESIGUALDAD push_operador exp .)
    CERRAR_CORCH    reduce using rule 58 (expression_choice_aux -> DESIGUALDAD push_operador exp .)


state 211

    (62) expression_choice_aux -> MENOR_IGUAL push_operador exp .

    CERRAR_PRNT     reduce using rule 62 (expression_choice_aux -> MENOR_IGUAL push_operador exp .)
    COMA            reduce using rule 62 (expression_choice_aux -> MENOR_IGUAL push_operador exp .)
    PUNTO_COMA      reduce using rule 62 (expression_choice_aux -> MENOR_IGUAL push_operador exp .)
    CERRAR_CORCH    reduce using rule 62 (expression_choice_aux -> MENOR_IGUAL push_operador exp .)


state 212

    (72) term_aux -> DIVISION push_operador term .

    SUMA            reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    RESTA           reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    IGUALDAD        reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    DESIGUALDAD     reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    MAYOR_QUE       reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    MENOR_QUE       reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    MAYOR_IGUAL     reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    MENOR_IGUAL     reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    CERRAR_PRNT     reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    COMA            reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    PUNTO_COMA      reduce using rule 72 (term_aux -> DIVISION push_operador term .)
    CERRAR_CORCH    reduce using rule 72 (term_aux -> DIVISION push_operador term .)


state 213

    (71) term_aux -> MULTIPLICACION push_operador term .

    SUMA            reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    RESTA           reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    IGUALDAD        reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    DESIGUALDAD     reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    MAYOR_QUE       reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    MENOR_QUE       reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    MAYOR_IGUAL     reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    MENOR_IGUAL     reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    CERRAR_PRNT     reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    COMA            reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    PUNTO_COMA      reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)
    CERRAR_CORCH    reduce using rule 71 (term_aux -> MULTIPLICACION push_operador term .)


state 214

    (53) assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .

    IF              reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    ID              reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    PRINT           reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    VAR             reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    WHILE           reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    DO              reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    PENUP           reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    PENDOWN         reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    ERASE           reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    TURNLEFT        reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    TURNRIGHT       reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    MOVE            reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    RETURN          reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 53 (assignment -> ID push_operando IGUAL push_operador expression PUNTO_COMA .)


state 215

    (93) params_call_loop -> COMA expression params_call_loop .

    CERRAR_PRNT     reduce using rule 93 (params_call_loop -> COMA expression params_call_loop .)


state 216

    (46) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block . ifcuad2 else ifcuad3
    (116) ifcuad2 -> .

    ELSE            reduce using rule 116 (ifcuad2 -> .)
    IF              reduce using rule 116 (ifcuad2 -> .)
    ID              reduce using rule 116 (ifcuad2 -> .)
    PRINT           reduce using rule 116 (ifcuad2 -> .)
    VAR             reduce using rule 116 (ifcuad2 -> .)
    WHILE           reduce using rule 116 (ifcuad2 -> .)
    DO              reduce using rule 116 (ifcuad2 -> .)
    PENUP           reduce using rule 116 (ifcuad2 -> .)
    PENDOWN         reduce using rule 116 (ifcuad2 -> .)
    ERASE           reduce using rule 116 (ifcuad2 -> .)
    TURNLEFT        reduce using rule 116 (ifcuad2 -> .)
    TURNRIGHT       reduce using rule 116 (ifcuad2 -> .)
    MOVE            reduce using rule 116 (ifcuad2 -> .)
    RETURN          reduce using rule 116 (ifcuad2 -> .)
    CERRAR_LLAVE    reduce using rule 116 (ifcuad2 -> .)

    ifcuad2                        shift and go to state 221

state 217

    (110) fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 110 (fmove -> MOVE ABRIR_PRNT direction COMA expression CERRAR_PRNT PUNTO_COMA .)


state 218

    (52) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 . CERRAR_PRNT PUNTO_COMA

    CERRAR_PRNT     shift and go to state 222


state 219

    (51) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block . whilecuad3
    (120) whilecuad3 -> .

    IF              reduce using rule 120 (whilecuad3 -> .)
    ID              reduce using rule 120 (whilecuad3 -> .)
    PRINT           reduce using rule 120 (whilecuad3 -> .)
    VAR             reduce using rule 120 (whilecuad3 -> .)
    WHILE           reduce using rule 120 (whilecuad3 -> .)
    DO              reduce using rule 120 (whilecuad3 -> .)
    PENUP           reduce using rule 120 (whilecuad3 -> .)
    PENDOWN         reduce using rule 120 (whilecuad3 -> .)
    ERASE           reduce using rule 120 (whilecuad3 -> .)
    TURNLEFT        reduce using rule 120 (whilecuad3 -> .)
    TURNRIGHT       reduce using rule 120 (whilecuad3 -> .)
    MOVE            reduce using rule 120 (whilecuad3 -> .)
    RETURN          reduce using rule 120 (whilecuad3 -> .)
    CERRAR_LLAVE    reduce using rule 120 (whilecuad3 -> .)

    whilecuad3                     shift and go to state 223

state 220

    (97) list_elements_loop -> COMA expression . list_elements_loop
    (97) list_elements_loop -> . COMA expression list_elements_loop
    (98) list_elements_loop -> .

    COMA            shift and go to state 204
    CERRAR_CORCH    reduce using rule 98 (list_elements_loop -> .)

    list_elements_loop             shift and go to state 224

state 221

    (46) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 . else ifcuad3
    (47) else -> . ELSE block
    (48) else -> .

    ELSE            shift and go to state 226
    IF              reduce using rule 48 (else -> .)
    ID              reduce using rule 48 (else -> .)
    PRINT           reduce using rule 48 (else -> .)
    VAR             reduce using rule 48 (else -> .)
    WHILE           reduce using rule 48 (else -> .)
    DO              reduce using rule 48 (else -> .)
    PENUP           reduce using rule 48 (else -> .)
    PENDOWN         reduce using rule 48 (else -> .)
    ERASE           reduce using rule 48 (else -> .)
    TURNLEFT        reduce using rule 48 (else -> .)
    TURNRIGHT       reduce using rule 48 (else -> .)
    MOVE            reduce using rule 48 (else -> .)
    RETURN          reduce using rule 48 (else -> .)
    CERRAR_LLAVE    reduce using rule 48 (else -> .)

    else                           shift and go to state 225

state 222

    (52) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT . PUNTO_COMA

    PUNTO_COMA      shift and go to state 227


state 223

    (51) while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .

    IF              reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    ID              reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PRINT           reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    VAR             reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    WHILE           reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    DO              reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PENUP           reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    PENDOWN         reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    ERASE           reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    TURNLEFT        reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    TURNRIGHT       reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    MOVE            reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    RETURN          reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)
    CERRAR_LLAVE    reduce using rule 51 (while -> WHILE ABRIR_PRNT whilecuad1 expression whilecuad2 CERRAR_PRNT block whilecuad3 .)


state 224

    (97) list_elements_loop -> COMA expression list_elements_loop .

    CERRAR_CORCH    reduce using rule 97 (list_elements_loop -> COMA expression list_elements_loop .)


state 225

    (46) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else . ifcuad3
    (117) ifcuad3 -> .

    IF              reduce using rule 117 (ifcuad3 -> .)
    ID              reduce using rule 117 (ifcuad3 -> .)
    PRINT           reduce using rule 117 (ifcuad3 -> .)
    VAR             reduce using rule 117 (ifcuad3 -> .)
    WHILE           reduce using rule 117 (ifcuad3 -> .)
    DO              reduce using rule 117 (ifcuad3 -> .)
    PENUP           reduce using rule 117 (ifcuad3 -> .)
    PENDOWN         reduce using rule 117 (ifcuad3 -> .)
    ERASE           reduce using rule 117 (ifcuad3 -> .)
    TURNLEFT        reduce using rule 117 (ifcuad3 -> .)
    TURNRIGHT       reduce using rule 117 (ifcuad3 -> .)
    MOVE            reduce using rule 117 (ifcuad3 -> .)
    RETURN          reduce using rule 117 (ifcuad3 -> .)
    CERRAR_LLAVE    reduce using rule 117 (ifcuad3 -> .)

    ifcuad3                        shift and go to state 228

state 226

    (47) else -> ELSE . block
    (28) block -> . ABRIR_LLAVE estatuto_loop return CERRAR_LLAVE

    ABRIR_LLAVE     shift and go to state 26

    block                          shift and go to state 229

state 227

    (52) do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .

    IF              reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    ID              reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PRINT           reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    VAR             reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    WHILE           reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    DO              reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PENUP           reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    PENDOWN         reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    ERASE           reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    TURNLEFT        reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    TURNRIGHT       reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    MOVE            reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    RETURN          reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)
    CERRAR_LLAVE    reduce using rule 52 (do_while -> DO docuad1 block WHILE ABRIR_PRNT expression docuad2 CERRAR_PRNT PUNTO_COMA .)


state 228

    (46) condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .

    IF              reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    ID              reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PRINT           reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    VAR             reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    WHILE           reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    DO              reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PENUP           reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    PENDOWN         reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    ERASE           reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    TURNLEFT        reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    TURNRIGHT       reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    MOVE            reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    RETURN          reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)
    CERRAR_LLAVE    reduce using rule 46 (condition -> IF ABRIR_PRNT expression ifcuad1 CERRAR_PRNT block ifcuad2 else ifcuad3 .)


state 229

    (47) else -> ELSE block .

    IF              reduce using rule 47 (else -> ELSE block .)
    ID              reduce using rule 47 (else -> ELSE block .)
    PRINT           reduce using rule 47 (else -> ELSE block .)
    VAR             reduce using rule 47 (else -> ELSE block .)
    WHILE           reduce using rule 47 (else -> ELSE block .)
    DO              reduce using rule 47 (else -> ELSE block .)
    PENUP           reduce using rule 47 (else -> ELSE block .)
    PENDOWN         reduce using rule 47 (else -> ELSE block .)
    ERASE           reduce using rule 47 (else -> ELSE block .)
    TURNLEFT        reduce using rule 47 (else -> ELSE block .)
    TURNRIGHT       reduce using rule 47 (else -> ELSE block .)
    MOVE            reduce using rule 47 (else -> ELSE block .)
    RETURN          reduce using rule 47 (else -> ELSE block .)
    CERRAR_LLAVE    reduce using rule 47 (else -> ELSE block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
